!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACC_ALL	mmu.c	142;"	d	file:
ACC_EXEC_MASK	mmu.c	139;"	d	file:
ACC_USER_MASK	mmu.c	141;"	d	file:
ACC_WRITE_MASK	mmu.c	140;"	d	file:
APIC_BUS_CYCLE_NS	lapic.c	55;"	d	file:
APIC_DEST_MASK	lapic.c	67;"	d	file:
APIC_DEST_NOSHORT	lapic.c	66;"	d	file:
APIC_LVT_NUM	lapic.c	60;"	d	file:
APIC_SHORT_MASK	lapic.c	65;"	d	file:
APIC_VECTORS_PER_REG	lapic.c	69;"	d	file:
APIC_VERSION	lapic.c	62;"	d	file:
ARCH_X86_KVM_CPUID_H	cpuid.h	2;"	d
ARCH_X86_KVM_X86_H	x86.h	2;"	d
AREG	trace.h	159;"	d
ASM_KVM_CACHE_REGS_H	kvm_cache_regs.h	2;"	d
ASSERT	mmu.c	83;"	d	file:
ASSERT	mmu.c	85;"	d	file:
AUDIT_POST_PAGE_FAULT	mmu.c	/^	AUDIT_POST_PAGE_FAULT,$/;"	e	enum:__anon8	file:
AUDIT_POST_PTE_WRITE	mmu.c	/^	AUDIT_POST_PTE_WRITE,$/;"	e	enum:__anon8	file:
AUDIT_POST_SYNC	mmu.c	/^	AUDIT_POST_SYNC$/;"	e	enum:__anon8	file:
AUDIT_PRE_PAGE_FAULT	mmu.c	/^	AUDIT_PRE_PAGE_FAULT,$/;"	e	enum:__anon8	file:
AUDIT_PRE_PTE_WRITE	mmu.c	/^	AUDIT_PRE_PTE_WRITE,$/;"	e	enum:__anon8	file:
AUDIT_PRE_SYNC	mmu.c	/^	AUDIT_PRE_SYNC,$/;"	e	enum:__anon8	file:
Aligned	emulate.c	158;"	d	file:
Avx	emulate.c	160;"	d	file:
BATCH_ZAP_PAGES	mmu.c	4322;"	d	file:
BitOp	emulate.c	116;"	d	file:
ByteOp	emulate.c	80;"	d	file:
CFLAGS_svm.o	Makefile	/^CFLAGS_svm.o := -I.$/;"	m
CFLAGS_vmx.o	Makefile	/^CFLAGS_vmx.o := -I.$/;"	m
CFLAGS_x86.o	Makefile	/^CFLAGS_x86.o := -I.$/;"	m
CMPXCHG	paging_tmpl.h	1007;"	d
CMPXCHG	paging_tmpl.h	48;"	d
CMPXCHG	paging_tmpl.h	50;"	d
CMPXCHG	paging_tmpl.h	67;"	d
CMPXCHG	paging_tmpl.h	81;"	d
CMPXCHG64	x86.c	4562;"	d	file:
CMPXCHG64	x86.c	4564;"	d	file:
CMPXCHG_TYPE	x86.c	4558;"	d	file:
CREATE_TRACE_POINTS	mmu.c	146;"	d	file:
CREATE_TRACE_POINTS	x86.c	53;"	d	file:
CR_VALID	svm.c	2935;"	d	file:
CheckPerm	emulate.c	166;"	d	file:
D	emulate.c	3668;"	d	file:
D	emulate.c	4150;"	d	file:
D2bv	emulate.c	3686;"	d	file:
D2bv	emulate.c	4158;"	d	file:
D2bvIP	emulate.c	3687;"	d	file:
D2bvIP	emulate.c	4159;"	d	file:
DEBUGCTL_RESERVED_BITS	svm.c	74;"	d	file:
DI	emulate.c	3669;"	d	file:
DIP	emulate.c	3670;"	d	file:
DstAcc	emulate.c	86;"	d	file:
DstAccLo	emulate.c	91;"	d	file:
DstDI	emulate.c	87;"	d	file:
DstDX	emulate.c	90;"	d	file:
DstImmUByte	emulate.c	89;"	d	file:
DstMask	emulate.c	92;"	d	file:
DstMem	emulate.c	85;"	d	file:
DstMem64	emulate.c	88;"	d	file:
DstReg	emulate.c	84;"	d	file:
DstShift	emulate.c	82;"	d	file:
DstXacc	emulate.c	170;"	d	file:
E	emulate.c	3676;"	d	file:
EFLAGS_MASK	emulate.c	296;"	d	file:
EFLG_AC	emulate.c	238;"	d	file:
EFLG_AF	emulate.c	249;"	d	file:
EFLG_CF	emulate.c	251;"	d	file:
EFLG_DF	emulate.c	244;"	d	file:
EFLG_ID	emulate.c	235;"	d	file:
EFLG_IF	emulate.c	245;"	d	file:
EFLG_IOPL	emulate.c	241;"	d	file:
EFLG_NT	emulate.c	242;"	d	file:
EFLG_OF	emulate.c	243;"	d	file:
EFLG_PF	emulate.c	250;"	d	file:
EFLG_RESERVED_ONE_MASK	emulate.c	254;"	d	file:
EFLG_RESERVED_ZEROS_MASK	emulate.c	253;"	d	file:
EFLG_RF	emulate.c	240;"	d	file:
EFLG_SF	emulate.c	247;"	d	file:
EFLG_TF	emulate.c	246;"	d	file:
EFLG_VIF	emulate.c	237;"	d	file:
EFLG_VIP	emulate.c	236;"	d	file:
EFLG_VM	emulate.c	239;"	d	file:
EFLG_ZF	emulate.c	248;"	d	file:
EXCPT_ABORT	x86.c	322;"	d	file:
EXCPT_BENIGN	x86.c	299;"	d	file:
EXCPT_CONTRIBUTORY	x86.c	300;"	d	file:
EXCPT_FAULT	x86.c	320;"	d	file:
EXCPT_INTERRUPT	x86.c	323;"	d	file:
EXCPT_PF	x86.c	301;"	d	file:
EXCPT_TRAP	x86.c	321;"	d	file:
EXS	trace.h	247;"	d
EXT	emulate.c	3673;"	d	file:
EXT	emulate.c	4156;"	d	file:
EmulateOnUD	emulate.c	133;"	d	file:
Escape	emulate.c	125;"	d	file:
F	cpuid.c	234;"	d	file:
F	cpuid.c	584;"	d	file:
F	emulate.c	3678;"	d	file:
F2bv	emulate.c	3689;"	d	file:
F6ALU	emulate.c	3693;"	d	file:
FASTOP1	emulate.c	327;"	d	file:
FASTOP1SRC2	emulate.c	336;"	d	file:
FASTOP1SRC2EX	emulate.c	345;"	d	file:
FASTOP2	emulate.c	356;"	d	file:
FASTOP2CL	emulate.c	374;"	d	file:
FASTOP2W	emulate.c	365;"	d	file:
FASTOP3WCL	emulate.c	386;"	d	file:
FASTOP_SIZE	emulate.c	182;"	d	file:
FFL	emulate.c	3109;"	d	file:
FIELD	vmx.c	528;"	d	file:
FIELD64	vmx.c	529;"	d	file:
FNAME	paging_tmpl.h	36;"	d
FNAME	paging_tmpl.h	56;"	d
FNAME	paging_tmpl.h	71;"	d
FNAME	paging_tmpl.h	998;"	d
FOP1E	emulate.c	321;"	d	file:
FOP1EEX	emulate.c	324;"	d	file:
FOP2E	emulate.c	353;"	d	file:
FOP3E	emulate.c	382;"	d	file:
FOPNOP	emulate.c	319;"	d	file:
FOP_ALIGN	emulate.c	306;"	d	file:
FOP_END	emulate.c	/^FOP_END;$/;"	v
FOP_END	emulate.c	316;"	d	file:
FOP_RET	emulate.c	307;"	d	file:
FOP_SETCC	emulate.c	395;"	d	file:
FOP_START	emulate.c	309;"	d	file:
Fastop	emulate.c	161;"	d	file:
G	emulate.c	3674;"	d	file:
G	emulate.c	4152;"	d	file:
GD	emulate.c	3675;"	d	file:
GD	emulate.c	4153;"	d	file:
GP	emulate.c	3684;"	d	file:
GP	emulate.c	4155;"	d	file:
Group	emulate.c	121;"	d	file:
GroupDual	emulate.c	122;"	d	file:
GroupMask	emulate.c	120;"	d	file:
I	emulate.c	3677;"	d	file:
I	emulate.c	4154;"	d	file:
I2bv	emulate.c	3688;"	d	file:
I2bv	emulate.c	4160;"	d	file:
I2bvIP	emulate.c	3690;"	d	file:
I2bvIP	emulate.c	4161;"	d	file:
I6ALU	emulate.c	4162;"	d	file:
II	emulate.c	3679;"	d	file:
IIP	emulate.c	3681;"	d	file:
IOPM_ALLOC_ORDER	svm.c	54;"	d	file:
ImplicitOps	emulate.c	83;"	d	file:
Intercept	emulate.c	165;"	d	file:
KVM	Makefile	/^KVM := ..\/..\/..\/virt\/kvm$/;"	m
KVMCLOCK_SYNC_PERIOD	x86.c	1710;"	d	file:
KVMCLOCK_UPDATE_DELAY	x86.c	1684;"	d	file:
KVM_APIC_INIT	lapic.h	8;"	d
KVM_APIC_SIPI	lapic.h	9;"	d
KVM_CR4_GUEST_OWNED_BITS	vmx.c	106;"	d	file:
KVM_EMUL_INSN_F_CR0_PE	trace.h	668;"	d
KVM_EMUL_INSN_F_CS_D	trace.h	670;"	d
KVM_EMUL_INSN_F_CS_L	trace.h	671;"	d
KVM_EMUL_INSN_F_EFL_VM	trace.h	669;"	d
KVM_GUEST_CR0_MASK	vmx.c	102;"	d	file:
KVM_ISA_SVM	trace.h	197;"	d
KVM_ISA_VMX	trace.h	196;"	d
KVM_MAX_MCE_BANKS	x86.c	68;"	d	file:
KVM_MAX_PIT_INTR_INTERVAL	i8254.h	57;"	d
KVM_MCE_CAP_SUPPORTED	x86.c	69;"	d	file:
KVM_MMU_PAGE_ASSIGN	mmutrace.h	17;"	d
KVM_MMU_PAGE_FIELDS	mmutrace.h	10;"	d
KVM_MMU_PAGE_PRINTK	mmutrace.h	24;"	d
KVM_NR_SHARED_MSRS	x86.c	112;"	d	file:
KVM_PAGE_ARRAY_NR	mmu.c	1613;"	d	file:
KVM_PIO_IN	trace.h	95;"	d
KVM_PIO_OUT	trace.h	96;"	d
KVM_PIT_BASE_ADDRESS	i8254.h	53;"	d
KVM_PIT_CHANNEL_MASK	i8254.h	58;"	d
KVM_PIT_FREQ	i8254.h	56;"	d
KVM_PIT_MEM_LENGTH	i8254.h	55;"	d
KVM_PMODE_VM_CR4_ALWAYS_ON	vmx.c	110;"	d	file:
KVM_POSSIBLE_CR0_GUEST_BITS	kvm_cache_regs.h	4;"	d
KVM_POSSIBLE_CR4_GUEST_BITS	kvm_cache_regs.h	5;"	d
KVM_RMODE_VM_CR4_ALWAYS_ON	vmx.c	111;"	d	file:
KVM_SAVE_MSRS_BEGIN	x86.c	912;"	d	file:
KVM_SPEAKER_BASE_ADDRESS	i8254.h	54;"	d
KVM_SUPPORTED_XCR0	x86.h	164;"	d
KVM_VMX_DEFAULT_PLE_GAP	vmx.c	128;"	d	file:
KVM_VMX_DEFAULT_PLE_WINDOW	vmx.c	129;"	d	file:
KVM_VMX_DEFAULT_PLE_WINDOW_GROW	vmx.c	130;"	d	file:
KVM_VMX_DEFAULT_PLE_WINDOW_MAX	vmx.c	132;"	d	file:
KVM_VMX_DEFAULT_PLE_WINDOW_SHRINK	vmx.c	131;"	d	file:
KVM_VM_CR0_ALWAYS_ON	vmx.c	104;"	d	file:
KVM_VM_CR0_ALWAYS_ON_UNRESTRICTED_GUEST	vmx.c	103;"	d	file:
KVM_X2APIC_CID_BITS	lapic.c	132;"	d	file:
LAPIC_MMIO_LENGTH	lapic.c	63;"	d	file:
LINT_MASK	lapic.c	123;"	d	file:
LVT_MASK	lapic.c	120;"	d	file:
Lock	emulate.c	137;"	d	file:
MAX_APIC_VECTOR	lapic.c	68;"	d	file:
MAX_INST_SIZE	svm.c	447;"	d	file:
MAX_IO_MSRS	x86.c	67;"	d	file:
MMIO_GEN_LOW_MASK	mmu.c	215;"	d	file:
MMIO_GEN_LOW_SHIFT	mmu.c	214;"	d	file:
MMIO_GEN_MASK	mmu.c	216;"	d	file:
MMIO_GEN_SHIFT	mmu.c	213;"	d	file:
MMIO_GVA_ANY	x86.h	103;"	d
MMIO_MAX_GEN	mmu.c	217;"	d	file:
MMIO_SPTE_GEN_HIGH_SHIFT	mmu.c	211;"	d	file:
MMIO_SPTE_GEN_LOW_SHIFT	mmu.c	210;"	d	file:
MMU_DEBUG	mmu.c	63;"	d	file:
MSRPM_ALLOC_ORDER	svm.c	55;"	d	file:
MSRPM_OFFSETS	svm.c	120;"	d	file:
MSRS_IN_RANGE	svm.c	424;"	d	file:
MSRS_RANGE_SIZE	svm.c	423;"	d	file:
MSR_INVALID	svm.c	166;"	d	file:
MSR_TYPE_R	vmx.c	4123;"	d	file:
MSR_TYPE_W	vmx.c	4124;"	d	file:
MemAbs	emulate.c	117;"	d	file:
Mmx	emulate.c	157;"	d	file:
ModRM	emulate.c	128;"	d	file:
Mov	emulate.c	130;"	d	file:
N	emulate.c	3672;"	d	file:
N	emulate.c	4151;"	d	file:
NESTED_EXIT_CONTINUE	svm.c	72;"	d	file:
NESTED_EXIT_DONE	svm.c	71;"	d	file:
NESTED_EXIT_HOST	svm.c	70;"	d	file:
NR_AUTOLOAD_MSRS	vmx.c	156;"	d	file:
NR_FASTOP	emulate.c	181;"	d	file:
NR_HOST_SAVE_USER_MSRS	svm.c	90;"	d	file:
NUM_MSR_MAPS	svm.c	422;"	d	file:
No64	emulate.c	139;"	d	file:
NoAccess	emulate.c	134;"	d	file:
NoBigReal	emulate.c	167;"	d	file:
NoMod	emulate.c	164;"	d	file:
NoWrite	emulate.c	162;"	d	file:
NotImpl	emulate.c	141;"	d	file:
ON64	emulate.c	299;"	d	file:
ON64	emulate.c	301;"	d	file:
Op3264	emulate.c	135;"	d	file:
OpAcc	emulate.c	39;"	d	file:
OpAccHi	emulate.c	65;"	d	file:
OpAccLo	emulate.c	64;"	d	file:
OpBits	emulate.c	67;"	d	file:
OpCL	emulate.c	44;"	d	file:
OpCS	emulate.c	56;"	d	file:
OpDI	emulate.c	40;"	d	file:
OpDS	emulate.c	58;"	d	file:
OpDX	emulate.c	43;"	d	file:
OpES	emulate.c	55;"	d	file:
OpFS	emulate.c	59;"	d	file:
OpGS	emulate.c	60;"	d	file:
OpImm	emulate.c	47;"	d	file:
OpImm64	emulate.c	62;"	d	file:
OpImmByte	emulate.c	45;"	d	file:
OpImmFAddr	emulate.c	52;"	d	file:
OpImmU	emulate.c	50;"	d	file:
OpImmU16	emulate.c	54;"	d	file:
OpImmUByte	emulate.c	42;"	d	file:
OpImplicit	emulate.c	36;"	d	file:
OpMask	emulate.c	68;"	d	file:
OpMem	emulate.c	38;"	d	file:
OpMem16	emulate.c	48;"	d	file:
OpMem32	emulate.c	49;"	d	file:
OpMem64	emulate.c	41;"	d	file:
OpMem8	emulate.c	61;"	d	file:
OpMemFAddr	emulate.c	53;"	d	file:
OpNone	emulate.c	35;"	d	file:
OpOne	emulate.c	46;"	d	file:
OpReg	emulate.c	37;"	d	file:
OpSI	emulate.c	51;"	d	file:
OpSS	emulate.c	57;"	d	file:
OpXLat	emulate.c	63;"	d	file:
PFERR_FETCH_BIT	mmu.h	51;"	d
PFERR_FETCH_MASK	mmu.h	57;"	d
PFERR_PRESENT_BIT	mmu.h	47;"	d
PFERR_PRESENT_MASK	mmu.h	53;"	d
PFERR_RSVD_BIT	mmu.h	50;"	d
PFERR_RSVD_MASK	mmu.h	56;"	d
PFERR_USER_BIT	mmu.h	49;"	d
PFERR_USER_MASK	mmu.h	55;"	d
PFERR_WRITE_BIT	mmu.h	48;"	d
PFERR_WRITE_MASK	mmu.h	54;"	d
PIC_NUM_PINS	irq.h	34;"	d
POSTED_INTR_ON	vmx.c	410;"	d	file:
POST_EX	svm.c	4151;"	d	file:
POST_EX	svm.c	4209;"	d	file:
POST_MEM	svm.c	4153;"	d	file:
POST_MEM	svm.c	4210;"	d	file:
PRE_EX	svm.c	4149;"	d	file:
PRE_EX	svm.c	4208;"	d	file:
PRId64	lapic.c	50;"	d	file:
PRIo64	lapic.c	53;"	d	file:
PRIu64	lapic.c	52;"	d	file:
PRIx64	lapic.c	51;"	d	file:
PT32E_ROOT_LEVEL	mmu.h	41;"	d
PT32_BASE_ADDR_MASK	mmu.c	129;"	d	file:
PT32_DIR_BASE_ADDR_MASK	mmu.c	130;"	d	file:
PT32_DIR_PSE36_MASK	mmu.h	36;"	d
PT32_DIR_PSE36_SHIFT	mmu.h	35;"	d
PT32_DIR_PSE36_SIZE	mmu.h	34;"	d
PT32_ENT_PER_PAGE	mmu.h	10;"	d
PT32_INDEX	mmu.c	115;"	d	file:
PT32_LEVEL_BITS	mmu.c	106;"	d	file:
PT32_LEVEL_SHIFT	mmu.c	108;"	d	file:
PT32_LVL_ADDR_MASK	mmu.c	132;"	d	file:
PT32_LVL_OFFSET_MASK	mmu.c	111;"	d	file:
PT32_PT_BITS	mmu.h	9;"	d
PT32_ROOT_LEVEL	mmu.h	40;"	d
PT64_BASE_ADDR_MASK	mmu.c	119;"	d	file:
PT64_DIR_BASE_ADDR_MASK	mmu.c	120;"	d	file:
PT64_ENT_PER_PAGE	mmu.h	8;"	d
PT64_INDEX	mmu.c	102;"	d	file:
PT64_LEVEL_BITS	mmu.c	97;"	d	file:
PT64_LEVEL_SHIFT	mmu.c	99;"	d	file:
PT64_LVL_ADDR_MASK	mmu.c	122;"	d	file:
PT64_LVL_OFFSET_MASK	mmu.c	125;"	d	file:
PT64_NX_MASK	mmu.h	28;"	d
PT64_NX_SHIFT	mmu.h	27;"	d
PT64_PERM_MASK	mmu.c	136;"	d	file:
PT64_PT_BITS	mmu.h	7;"	d
PT64_ROOT_LEVEL	mmu.h	39;"	d
PT64_SECOND_AVAIL_BITS_SHIFT	mmu.c	95;"	d	file:
PTE_LIST_EXT	mmu.c	155;"	d	file:
PTE_PREFETCH_NUM	mmu.c	92;"	d	file:
PTTYPE	mmu.c	3464;"	d	file:
PTTYPE	mmu.c	3466;"	d	file:
PTTYPE	mmu.c	3468;"	d	file:
PTTYPE	mmu.c	3470;"	d	file:
PTTYPE	mmu.c	3472;"	d	file:
PTTYPE	mmu.c	3474;"	d	file:
PTTYPE_EPT	mmu.c	3463;"	d	file:
PT_ACCESSED_MASK	mmu.h	20;"	d
PT_ACCESSED_SHIFT	mmu.h	19;"	d
PT_BASE_ADDR_MASK	paging_tmpl.h	37;"	d
PT_BASE_ADDR_MASK	paging_tmpl.h	57;"	d
PT_BASE_ADDR_MASK	paging_tmpl.h	72;"	d
PT_BASE_ADDR_MASK	paging_tmpl.h	999;"	d
PT_DIRECTORY_LEVEL	mmu.h	44;"	d
PT_DIRTY_MASK	mmu.h	22;"	d
PT_DIRTY_SHIFT	mmu.h	21;"	d
PT_DIR_PAT_MASK	mmu.h	32;"	d
PT_DIR_PAT_SHIFT	mmu.h	31;"	d
PT_FIRST_AVAIL_BITS_SHIFT	mmu.c	94;"	d	file:
PT_GLOBAL_MASK	mmu.h	26;"	d
PT_GUEST_ACCESSED_MASK	paging_tmpl.h	1008;"	d
PT_GUEST_ACCESSED_MASK	paging_tmpl.h	42;"	d
PT_GUEST_ACCESSED_MASK	paging_tmpl.h	63;"	d
PT_GUEST_ACCESSED_MASK	paging_tmpl.h	77;"	d
PT_GUEST_ACCESSED_SHIFT	paging_tmpl.h	1011;"	d
PT_GUEST_ACCESSED_SHIFT	paging_tmpl.h	45;"	d
PT_GUEST_ACCESSED_SHIFT	paging_tmpl.h	66;"	d
PT_GUEST_ACCESSED_SHIFT	paging_tmpl.h	80;"	d
PT_GUEST_DIRTY_MASK	paging_tmpl.h	1009;"	d
PT_GUEST_DIRTY_MASK	paging_tmpl.h	43;"	d
PT_GUEST_DIRTY_MASK	paging_tmpl.h	64;"	d
PT_GUEST_DIRTY_MASK	paging_tmpl.h	78;"	d
PT_GUEST_DIRTY_SHIFT	paging_tmpl.h	1010;"	d
PT_GUEST_DIRTY_SHIFT	paging_tmpl.h	44;"	d
PT_GUEST_DIRTY_SHIFT	paging_tmpl.h	65;"	d
PT_GUEST_DIRTY_SHIFT	paging_tmpl.h	79;"	d
PT_INDEX	paging_tmpl.h	1000;"	d
PT_INDEX	paging_tmpl.h	40;"	d
PT_INDEX	paging_tmpl.h	60;"	d
PT_INDEX	paging_tmpl.h	75;"	d
PT_LEVEL_BITS	paging_tmpl.h	1003;"	d
PT_LEVEL_BITS	paging_tmpl.h	41;"	d
PT_LEVEL_BITS	paging_tmpl.h	61;"	d
PT_LEVEL_BITS	paging_tmpl.h	76;"	d
PT_LVL_ADDR_MASK	paging_tmpl.h	1001;"	d
PT_LVL_ADDR_MASK	paging_tmpl.h	38;"	d
PT_LVL_ADDR_MASK	paging_tmpl.h	58;"	d
PT_LVL_ADDR_MASK	paging_tmpl.h	73;"	d
PT_LVL_OFFSET_MASK	paging_tmpl.h	1002;"	d
PT_LVL_OFFSET_MASK	paging_tmpl.h	39;"	d
PT_LVL_OFFSET_MASK	paging_tmpl.h	59;"	d
PT_LVL_OFFSET_MASK	paging_tmpl.h	74;"	d
PT_MAX_FULL_LEVELS	paging_tmpl.h	1004;"	d
PT_MAX_FULL_LEVELS	paging_tmpl.h	47;"	d
PT_MAX_FULL_LEVELS	paging_tmpl.h	51;"	d
PT_MAX_FULL_LEVELS	paging_tmpl.h	62;"	d
PT_MAX_FULL_LEVELS	paging_tmpl.h	82;"	d
PT_PAGE_SIZE_MASK	mmu.h	24;"	d
PT_PAGE_SIZE_SHIFT	mmu.h	23;"	d
PT_PAGE_TABLE_LEVEL	mmu.h	45;"	d
PT_PAT_MASK	mmu.h	25;"	d
PT_PAT_SHIFT	mmu.h	30;"	d
PT_PCD_MASK	mmu.h	18;"	d
PT_PDPE_LEVEL	mmu.h	43;"	d
PT_PRESENT_MASK	mmu.h	14;"	d
PT_PWT_MASK	mmu.h	17;"	d
PT_USER_MASK	mmu.h	16;"	d
PT_WRITABLE_MASK	mmu.h	15;"	d
PT_WRITABLE_SHIFT	mmu.h	12;"	d
PageTable	emulate.c	140;"	d	file:
Prefix	emulate.c	123;"	d	file:
Priv	emulate.c	138;"	d	file:
PrivUD	emulate.c	168;"	d	file:
Prot	emulate.c	132;"	d	file:
REG_POS	lapic.c	72;"	d	file:
RET_MMIO_PF_BUG	mmu.h	/^	RET_MMIO_PF_BUG = -1$/;"	e	enum:__anon5
RET_MMIO_PF_EMULATE	mmu.h	/^	RET_MMIO_PF_EMULATE = 1,$/;"	e	enum:__anon5
RET_MMIO_PF_INVALID	mmu.h	/^	RET_MMIO_PF_INVALID = 2,$/;"	e	enum:__anon5
RET_MMIO_PF_RETRY	mmu.h	/^	RET_MMIO_PF_RETRY = 0,$/;"	e	enum:__anon5
RMAP_RECYCLE_THRESHOLD	mmu.c	1442;"	d	file:
RMExt	emulate.c	124;"	d	file:
RMODE_GUEST_OWNED_EFLAGS_BITS	vmx.c	113;"	d	file:
RW_STATE_LSB	i8254.c	48;"	d	file:
RW_STATE_MSB	i8254.c	49;"	d	file:
RW_STATE_WORD0	i8254.c	50;"	d	file:
RW_STATE_WORD1	i8254.c	51;"	d	file:
SEG_FIELD_AR	vmx.c	/^	SEG_FIELD_AR = 3,$/;"	e	enum:segment_cache_field	file:
SEG_FIELD_BASE	vmx.c	/^	SEG_FIELD_BASE = 1,$/;"	e	enum:segment_cache_field	file:
SEG_FIELD_LIMIT	vmx.c	/^	SEG_FIELD_LIMIT = 2,$/;"	e	enum:segment_cache_field	file:
SEG_FIELD_NR	vmx.c	/^	SEG_FIELD_NR = 4$/;"	e	enum:segment_cache_field	file:
SEG_FIELD_SEL	vmx.c	/^	SEG_FIELD_SEL = 0,$/;"	e	enum:segment_cache_field	file:
SEG_TYPE_BUSY_TSS16	svm.c	58;"	d	file:
SEG_TYPE_LDT	svm.c	57;"	d	file:
SELECT_PIC	irq.h	35;"	d
SHADOW_PT_INDEX	mmu.c	152;"	d	file:
SPTE_HOST_WRITEABLE	mmu.c	149;"	d	file:
SPTE_MMU_WRITEABLE	mmu.c	150;"	d	file:
SVM_FEATURE_DECODE_ASSIST	svm.c	67;"	d	file:
SVM_FEATURE_FLUSH_ASID	svm.c	66;"	d	file:
SVM_FEATURE_LBRV	svm.c	61;"	d	file:
SVM_FEATURE_NPT	svm.c	60;"	d	file:
SVM_FEATURE_NRIP	svm.c	63;"	d	file:
SVM_FEATURE_PAUSE_FILTER	svm.c	68;"	d	file:
SVM_FEATURE_SVML	svm.c	62;"	d	file:
SVM_FEATURE_TSC_RATE	svm.c	64;"	d	file:
SVM_FEATURE_VMCB_CLEAN	svm.c	65;"	d	file:
Src2CL	emulate.c	146;"	d	file:
Src2CS	emulate.c	151;"	d	file:
Src2DS	emulate.c	153;"	d	file:
Src2ES	emulate.c	150;"	d	file:
Src2FS	emulate.c	154;"	d	file:
Src2GS	emulate.c	155;"	d	file:
Src2Imm	emulate.c	149;"	d	file:
Src2ImmByte	emulate.c	147;"	d	file:
Src2Mask	emulate.c	156;"	d	file:
Src2Mem	emulate.c	145;"	d	file:
Src2None	emulate.c	144;"	d	file:
Src2One	emulate.c	148;"	d	file:
Src2SS	emulate.c	152;"	d	file:
Src2Shift	emulate.c	143;"	d	file:
SrcAcc	emulate.c	109;"	d	file:
SrcAccHi	emulate.c	114;"	d	file:
SrcDX	emulate.c	112;"	d	file:
SrcImm	emulate.c	100;"	d	file:
SrcImm64	emulate.c	111;"	d	file:
SrcImmByte	emulate.c	101;"	d	file:
SrcImmFAddr	emulate.c	107;"	d	file:
SrcImmU	emulate.c	104;"	d	file:
SrcImmU16	emulate.c	110;"	d	file:
SrcImmUByte	emulate.c	103;"	d	file:
SrcMask	emulate.c	115;"	d	file:
SrcMem	emulate.c	97;"	d	file:
SrcMem16	emulate.c	98;"	d	file:
SrcMem32	emulate.c	99;"	d	file:
SrcMem8	emulate.c	113;"	d	file:
SrcMemFAddr	emulate.c	108;"	d	file:
SrcNone	emulate.c	95;"	d	file:
SrcOne	emulate.c	102;"	d	file:
SrcReg	emulate.c	96;"	d	file:
SrcSI	emulate.c	105;"	d	file:
SrcShift	emulate.c	94;"	d	file:
SrcWrite	emulate.c	163;"	d	file:
SrcXLat	emulate.c	106;"	d	file:
Sse	emulate.c	126;"	d	file:
Stack	emulate.c	119;"	d	file:
String	emulate.c	118;"	d	file:
TRACE_INCLUDE_FILE	mmutrace.h	329;"	d
TRACE_INCLUDE_FILE	mmutrace.h	330;"	d
TRACE_INCLUDE_FILE	trace.h	884;"	d
TRACE_INCLUDE_FILE	trace.h	885;"	d
TRACE_INCLUDE_PATH	mmutrace.h	327;"	d
TRACE_INCLUDE_PATH	mmutrace.h	328;"	d
TRACE_INCLUDE_PATH	trace.h	882;"	d
TRACE_INCLUDE_PATH	trace.h	883;"	d
TRACE_SYSTEM	mmutrace.h	7;"	d
TRACE_SYSTEM	mmutrace.h	8;"	d
TRACE_SYSTEM	trace.h	10;"	d
TRACE_SYSTEM	trace.h	9;"	d
TSC_RATIO_DEFAULT	svm.c	164;"	d	file:
TSC_RATIO_MAX	svm.c	78;"	d	file:
TSC_RATIO_MIN	svm.c	77;"	d	file:
TSC_RATIO_RSVD	svm.c	76;"	d	file:
Unaligned	emulate.c	159;"	d	file:
Undefined	emulate.c	136;"	d	file:
VCPU_STAT	x86.c	86;"	d	file:
VEC_POS	lapic.c	71;"	d	file:
VMCB_ALWAYS_DIRTY_MASK	svm.c	231;"	d	file:
VMCB_ASID	svm.c	/^	VMCB_ASID,	 \/* ASID *\/$/;"	e	enum:__anon7	file:
VMCB_CR	svm.c	/^	VMCB_CR,	 \/* CR0, CR3, CR4, EFER *\/$/;"	e	enum:__anon7	file:
VMCB_CR2	svm.c	/^	VMCB_CR2,        \/* CR2 only *\/$/;"	e	enum:__anon7	file:
VMCB_DIRTY_MAX	svm.c	/^	VMCB_DIRTY_MAX,$/;"	e	enum:__anon7	file:
VMCB_DR	svm.c	/^	VMCB_DR,         \/* DR6, DR7 *\/$/;"	e	enum:__anon7	file:
VMCB_DT	svm.c	/^	VMCB_DT,         \/* GDT, IDT *\/$/;"	e	enum:__anon7	file:
VMCB_INTERCEPTS	svm.c	/^	VMCB_INTERCEPTS, \/* Intercept vectors, TSC offset,$/;"	e	enum:__anon7	file:
VMCB_INTR	svm.c	/^	VMCB_INTR,	 \/* int_ctl, int_vector *\/$/;"	e	enum:__anon7	file:
VMCB_LBR	svm.c	/^	VMCB_LBR,        \/* DBGCTL, BR_FROM, BR_TO, LAST_EX_FROM, LAST_EX_TO *\/$/;"	e	enum:__anon7	file:
VMCB_NPT	svm.c	/^	VMCB_NPT,        \/* npt_en, nCR3, gPAT *\/$/;"	e	enum:__anon7	file:
VMCB_PERM_MAP	svm.c	/^	VMCB_PERM_MAP,   \/* IOPM Base and MSRPM Base *\/$/;"	e	enum:__anon7	file:
VMCB_SEG	svm.c	/^	VMCB_SEG,        \/* CS, DS, SS, ES, CPL *\/$/;"	e	enum:__anon7	file:
VMCS02_POOL_SIZE	vmx.c	157;"	d	file:
VMCS12_OFFSET	vmx.c	527;"	d	file:
VMCS12_REVISION	vmx.c	352;"	d	file:
VMCS12_SIZE	vmx.c	359;"	d	file:
VMCS_FIELD_TYPE_NATURAL_WIDTH	vmx.c	/^	VMCS_FIELD_TYPE_NATURAL_WIDTH = 3$/;"	e	enum:vmcs_field_type	file:
VMCS_FIELD_TYPE_U16	vmx.c	/^	VMCS_FIELD_TYPE_U16 = 0,$/;"	e	enum:vmcs_field_type	file:
VMCS_FIELD_TYPE_U32	vmx.c	/^	VMCS_FIELD_TYPE_U32 = 2,$/;"	e	enum:vmcs_field_type	file:
VMCS_FIELD_TYPE_U64	vmx.c	/^	VMCS_FIELD_TYPE_U64 = 1,$/;"	e	enum:vmcs_field_type	file:
VMXON_CR0_ALWAYSON	vmx.c	2476;"	d	file:
VMXON_CR4_ALWAYSON	vmx.c	2477;"	d	file:
VMX_MISC_EMULATED_PREEMPTION_TIMER_RATE	vmx.c	115;"	d	file:
VMX_SEGMENT_FIELD	vmx.c	813;"	d	file:
VM_STAT	x86.c	85;"	d	file:
X16	emulate.c	179;"	d	file:
X2	emulate.c	172;"	d	file:
X3	emulate.c	173;"	d	file:
X4	emulate.c	174;"	d	file:
X5	emulate.c	175;"	d	file:
X6	emulate.c	176;"	d	file:
X7	emulate.c	177;"	d	file:
X8	emulate.c	178;"	d	file:
XSTATE_COMPACTION_ENABLED	x86.c	3129;"	d	file:
_TRACE_KVMMMU_H	mmutrace.h	2;"	d
_TRACE_KVM_H	trace.h	2;"	d
__I8254_H	i8254.h	2;"	d
__IRQ_H	irq.h	23;"	d
__KVM_X86_LAPIC_H	lapic.h	2;"	d
__KVM_X86_MMU_H	mmu.h	2;"	d
__TSS_SEGMENT_H	tss.h	2;"	d
__apic_accept_irq	lapic.c	/^static int __apic_accept_irq(struct kvm_lapic *apic, int delivery_mode,$/;"	f	file:
__apic_read	lapic.c	/^static u32 __apic_read(struct kvm_lapic *apic, unsigned int offset)$/;"	f	file:
__apic_test_and_clear_vector	lapic.c	/^static inline int __apic_test_and_clear_vector(int vec, void *bitmap)$/;"	f	file:
__apic_test_and_set_vector	lapic.c	/^static inline int __apic_test_and_set_vector(int vec, void *bitmap)$/;"	f	file:
__clear_sp_write_flooding_count	mmu.c	/^static void __clear_sp_write_flooding_count(struct kvm_mmu_page *sp)$/;"	f	file:
__direct_map	mmu.c	/^static int __direct_map(struct kvm_vcpu *vcpu, gpa_t v, int write,$/;"	f	file:
__direct_pte_prefetch	mmu.c	/^static void __direct_pte_prefetch(struct kvm_vcpu *vcpu,$/;"	f	file:
__do_cpuid_ent	cpuid.c	/^static inline int __do_cpuid_ent(struct kvm_cpuid_entry2 *entry, u32 function,$/;"	f	file:
__do_cpuid_ent_emulated	cpuid.c	/^static int __do_cpuid_ent_emulated(struct kvm_cpuid_entry2 *entry,$/;"	f	file:
__do_insn_fetch_bytes	emulate.c	/^static int __do_insn_fetch_bytes(struct x86_emulate_ctxt *ctxt, int op_size)$/;"	f	file:
__drop_large_spte	mmu.c	/^static bool __drop_large_spte(struct kvm *kvm, u64 *sptep)$/;"	f	file:
__emulate_int_real	emulate.c	/^static int __emulate_int_real(struct x86_emulate_ctxt *ctxt, int irq)$/;"	f	file:
__ex	svm.c	43;"	d	file:
__ex	vmx.c	51;"	d	file:
__ex_clear	vmx.c	52;"	d	file:
__find_msr_index	vmx.c	/^static int __find_msr_index(struct vcpu_vmx *vmx, u32 msr)$/;"	f	file:
__get_spte_lockless	mmu.c	/^static u64 __get_spte_lockless(u64 *sptep)$/;"	f	file:
__gfn_to_rmap	mmu.c	/^static unsigned long *__gfn_to_rmap(gfn_t gfn, int level,$/;"	f	file:
__grow_ple_window	vmx.c	/^static int __grow_ple_window(int val)$/;"	f	file:
__invept	vmx.c	/^static inline void __invept(int ext, u64 eptp, gpa_t gpa)$/;"	f	file:
__invvpid	vmx.c	/^static inline void __invvpid(int ext, u16 vpid, gva_t gva)$/;"	f	file:
__kpit_elapsed	i8254.c	/^static s64 __kpit_elapsed(struct kvm *kvm)$/;"	f	file:
__kvm_migrate_apic_timer	lapic.c	/^void __kvm_migrate_apic_timer(struct kvm_vcpu *vcpu)$/;"	f
__kvm_migrate_pit_timer	i8254.c	/^void __kvm_migrate_pit_timer(struct kvm_vcpu *vcpu)$/;"	f
__kvm_migrate_timers	irq.c	/^void __kvm_migrate_timers(struct kvm_vcpu *vcpu)$/;"	f
__kvm_mmu_audit	mmu_audit.c	/^static void __kvm_mmu_audit(struct kvm_vcpu *vcpu, int point)$/;"	f	file:
__kvm_set_dr	x86.c	/^static int __kvm_set_dr(struct kvm_vcpu *vcpu, int dr, unsigned long val)$/;"	f	file:
__kvm_set_rflags	x86.c	/^static void __kvm_set_rflags(struct kvm_vcpu *vcpu, unsigned long rflags)$/;"	f	file:
__kvm_set_xcr	x86.c	/^int __kvm_set_xcr(struct kvm_vcpu *vcpu, u32 index, u64 xcr)$/;"	f
__kvm_sync_page	mmu.c	/^static int __kvm_sync_page(struct kvm_vcpu *vcpu, struct kvm_mmu_page *sp,$/;"	f	file:
__kvm_unsync_page	mmu.c	/^static void __kvm_unsync_page(struct kvm_vcpu *vcpu, struct kvm_mmu_page *sp)$/;"	f	file:
__launched	vmx.c	/^	bool                  __launched; \/* temporary, used in vmx_vcpu_run *\/$/;"	m	struct:vcpu_vmx	file:
__linearize	emulate.c	/^static int __linearize(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
__load_segment_descriptor	emulate.c	/^static int __load_segment_descriptor(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
__loaded_vmcs_clear	vmx.c	/^static void __loaded_vmcs_clear(void *arg)$/;"	f	file:
__mmu_spte_walk	mmu_audit.c	/^static void __mmu_spte_walk(struct kvm_vcpu *vcpu, struct kvm_mmu_page *sp,$/;"	f	file:
__mmu_unsync_walk	mmu.c	/^static int __mmu_unsync_walk(struct kvm_mmu_page *sp,$/;"	f	file:
__msr_io	x86.c	/^static int __msr_io(struct kvm_vcpu *vcpu, struct kvm_msrs *msrs,$/;"	f	file:
__read_mostly	lapic.c	/^struct static_key_deferred apic_hw_disabled __read_mostly;$/;"	v	typeref:struct:apic_hw_disabled
__read_mostly	lapic.c	/^struct static_key_deferred apic_sw_disabled __read_mostly;$/;"	v	typeref:struct:apic_sw_disabled
__read_mostly	svm.c	/^static bool erratum_383_found __read_mostly;$/;"	v	file:
__read_mostly	svm.c	/^static u32 msrpm_offsets[MSRPM_OFFSETS] __read_mostly;$/;"	v	file:
__read_mostly	x86.c	/^struct static_key kvm_no_apic_vcpu __read_mostly;$/;"	v	typeref:struct:kvm_no_apic_vcpu
__report_tpr_access	lapic.c	/^static void __report_tpr_access(struct kvm_lapic *apic, bool write)$/;"	f	file:
__rmap_write_protect	mmu.c	/^static bool __rmap_write_protect(struct kvm *kvm, unsigned long *rmapp,$/;"	f	file:
__scale_tsc	svm.c	/^static u64 __scale_tsc(u64 ratio, u64 tsc)$/;"	f	file:
__set_spte	mmu.c	/^static void __set_spte(u64 *sptep, u64 spte)$/;"	f	file:
__shadow_walk_next	mmu.c	/^static void __shadow_walk_next(struct kvm_shadow_walk_iterator *iterator,$/;"	f	file:
__shrink_ple_window	vmx.c	/^static int __shrink_ple_window(int val, int modifier, int minimum)$/;"	f	file:
__spte_satisfied	mmutrace.h	244;"	d
__this_module	kvm-amd.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__this_module	kvm-intel.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__this_module	kvm.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__update_clear_spte_fast	mmu.c	/^static void __update_clear_spte_fast(u64 *sptep, u64 spte)$/;"	f	file:
__update_clear_spte_slow	mmu.c	/^static u64 __update_clear_spte_slow(u64 *sptep, u64 spte)$/;"	f	file:
__used	kvm-amd.mod.c	/^__used$/;"	v	file:
__used	kvm-amd.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
__used	kvm-intel.mod.c	/^__used$/;"	v	file:
__used	kvm-intel.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
__used	kvm.mod.c	/^__used$/;"	v	file:
__used	kvm.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
__vcpu_run	x86.c	/^static int __vcpu_run(struct kvm_vcpu *vcpu)$/;"	f	file:
__vmx_complete_interrupts	vmx.c	/^static void __vmx_complete_interrupts(struct kvm_vcpu *vcpu,$/;"	f	file:
__vmx_disable_intercept_for_msr	vmx.c	/^static void __vmx_disable_intercept_for_msr(unsigned long *msr_bitmap,$/;"	f	file:
__vmx_enable_intercept_for_msr	vmx.c	/^static void __vmx_enable_intercept_for_msr(unsigned long *msr_bitmap,$/;"	f	file:
__vmx_load_host_state	vmx.c	/^static void __vmx_load_host_state(struct vcpu_vmx *vmx)$/;"	f	file:
__x86_intercept	svm.c	/^static const struct __x86_intercept {$/;"	s	file:
_kvm_get_dr	x86.c	/^static int _kvm_get_dr(struct kvm_vcpu *vcpu, int dr, unsigned long *val)$/;"	f	file:
abort	vmx.c	/^	u32 abort;$/;"	m	struct:vmcs	file:
abort	vmx.c	/^	u32 abort;$/;"	m	struct:vmcs12	file:
ac_interception	svm.c	/^static int ac_interception(struct vcpu_svm *svm)$/;"	f	file:
account_shadowed	mmu.c	/^static void account_shadowed(struct kvm *kvm, gfn_t gfn)$/;"	f	file:
accumulate_steal_time	x86.c	/^static void accumulate_steal_time(struct kvm_vcpu *vcpu)$/;"	f	file:
ack_notifier	irq.h	/^	void (*ack_notifier)(void *opaque, int irq);$/;"	m	struct:kvm_pic
ad_mask	emulate.c	/^static inline unsigned long ad_mask(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
adc	emulate.c	/^FASTOP2(adc);$/;"	v
add	emulate.c	/^FASTOP2(add);$/;"	v
add_atomic_switch_msr	vmx.c	/^static void add_atomic_switch_msr(struct vcpu_vmx *vmx, unsigned msr,$/;"	f	file:
add_atomic_switch_msr_special	vmx.c	/^static void add_atomic_switch_msr_special(struct vcpu_vmx *vmx,$/;"	f	file:
add_msr_offset	svm.c	/^static void add_msr_offset(u32 offset)$/;"	f	file:
addr	mmu.c	/^	u64 addr;$/;"	m	struct:kvm_shadow_walk_iterator	file:
address_mask	emulate.c	/^address_mask(struct x86_emulate_ctxt *ctxt, unsigned long reg)$/;"	f	file:
adjust_modrm_seg	emulate.c	/^static void adjust_modrm_seg(struct x86_emulate_ctxt *ctxt, int base_reg)$/;"	f	file:
adjust_tsc_khz	x86.c	/^static u32 adjust_tsc_khz(u32 khz, s32 ppm)$/;"	f	file:
adjust_vmx_controls	vmx.c	/^static __init int adjust_vmx_controls(u32 ctl_min, u32 ctl_opt,$/;"	f	file:
alloc_apic_access_page	vmx.c	/^static int alloc_apic_access_page(struct kvm *kvm)$/;"	f	file:
alloc_identity_pagetable	vmx.c	/^static int alloc_identity_pagetable(struct kvm *kvm)$/;"	f	file:
alloc_kvm_area	vmx.c	/^static __init int alloc_kvm_area(void)$/;"	f	file:
alloc_mmu_pages	mmu.c	/^static int alloc_mmu_pages(struct kvm_vcpu *vcpu)$/;"	f	file:
alloc_vmcs	vmx.c	/^static struct vmcs *alloc_vmcs(void)$/;"	f	file:
alloc_vmcs_cpu	vmx.c	/^static struct vmcs *alloc_vmcs_cpu(int cpu)$/;"	f	file:
allocate_vpid	vmx.c	/^static void allocate_vpid(struct vcpu_vmx *vmx)$/;"	f	file:
allow_1_setting	vmx.c	/^static __init bool allow_1_setting(u32 msr, u32 ctl)$/;"	f	file:
always	svm.c	/^	bool always; \/* True if intercept is always on *\/$/;"	m	struct:svm_direct_access_msrs	file:
and	emulate.c	/^FASTOP2(and);$/;"	v
apf_put_user	x86.c	/^static int apf_put_user(struct kvm_vcpu *vcpu, u32 val)$/;"	f	file:
apf_reason	svm.c	/^	u32 apf_reason;$/;"	m	struct:vcpu_svm	file:
apic_access_addr	vmx.c	/^	u64 apic_access_addr;$/;"	m	struct:vmcs12	file:
apic_access_page	vmx.c	/^	struct page *apic_access_page;$/;"	m	struct:nested_vmx	typeref:struct:nested_vmx::page	file:
apic_clear_irr	lapic.c	/^static inline void apic_clear_irr(int vec, struct kvm_lapic *apic)$/;"	f	file:
apic_clear_isr	lapic.c	/^static inline void apic_clear_isr(int vec, struct kvm_lapic *apic)$/;"	f	file:
apic_clear_vector	lapic.c	/^static inline void apic_clear_vector(int vec, void *bitmap)$/;"	f	file:
apic_cluster_id	lapic.h	/^static inline u16 apic_cluster_id(struct kvm_apic_map *map, u32 ldr)$/;"	f
apic_debug	lapic.c	58;"	d	file:
apic_enabled	lapic.c	/^static inline int apic_enabled(struct kvm_lapic *apic)$/;"	f	file:
apic_find_highest_irr	lapic.c	/^static inline int apic_find_highest_irr(struct kvm_lapic *apic)$/;"	f	file:
apic_find_highest_isr	lapic.c	/^static inline int apic_find_highest_isr(struct kvm_lapic *apic)$/;"	f	file:
apic_get_tmcct	lapic.c	/^static u32 apic_get_tmcct(struct kvm_lapic *apic)$/;"	f	file:
apic_has_pending_timer	lapic.c	/^int apic_has_pending_timer(struct kvm_vcpu *vcpu)$/;"	f
apic_logical_id	lapic.h	/^static inline u16 apic_logical_id(struct kvm_apic_map *map, u32 ldr)$/;"	f
apic_lvt_enabled	lapic.c	/^static inline int apic_lvt_enabled(struct kvm_lapic *apic, int lvt_type)$/;"	f	file:
apic_lvt_mask	lapic.c	/^static const unsigned int apic_lvt_mask[APIC_LVT_NUM] = {$/;"	v	file:
apic_lvt_nmi_mode	lapic.c	/^static inline int apic_lvt_nmi_mode(u32 lvt_val)$/;"	f	file:
apic_lvt_vector	lapic.c	/^static inline int apic_lvt_vector(struct kvm_lapic *apic, int lvt_type)$/;"	f	file:
apic_lvtt_oneshot	lapic.c	/^static inline int apic_lvtt_oneshot(struct kvm_lapic *apic)$/;"	f	file:
apic_lvtt_period	lapic.c	/^static inline int apic_lvtt_period(struct kvm_lapic *apic)$/;"	f	file:
apic_lvtt_tscdeadline	lapic.c	/^static inline int apic_lvtt_tscdeadline(struct kvm_lapic *apic)$/;"	f	file:
apic_manage_nmi_watchdog	lapic.c	/^static void apic_manage_nmi_watchdog(struct kvm_lapic *apic, u32 lvt0_val)$/;"	f	file:
apic_mmio_in_range	lapic.c	/^static int apic_mmio_in_range(struct kvm_lapic *apic, gpa_t addr)$/;"	f	file:
apic_mmio_ops	lapic.c	/^static const struct kvm_io_device_ops apic_mmio_ops = {$/;"	v	typeref:struct:kvm_io_device_ops	file:
apic_mmio_read	lapic.c	/^static int apic_mmio_read(struct kvm_io_device *this,$/;"	f	file:
apic_mmio_write	lapic.c	/^static int apic_mmio_write(struct kvm_io_device *this,$/;"	f	file:
apic_reg_read	lapic.c	/^static int apic_reg_read(struct kvm_lapic *apic, u32 offset, int len,$/;"	f	file:
apic_reg_write	lapic.c	/^static int apic_reg_write(struct kvm_lapic *apic, u32 reg, u32 val)$/;"	f	file:
apic_search_irr	lapic.c	/^static inline int apic_search_irr(struct kvm_lapic *apic)$/;"	f	file:
apic_send_ipi	lapic.c	/^static void apic_send_ipi(struct kvm_lapic *apic)$/;"	f	file:
apic_set_eoi	lapic.c	/^static int apic_set_eoi(struct kvm_lapic *apic)$/;"	f	file:
apic_set_irr	lapic.c	/^static inline void apic_set_irr(int vec, struct kvm_lapic *apic)$/;"	f	file:
apic_set_isr	lapic.c	/^static inline void apic_set_isr(int vec, struct kvm_lapic *apic)$/;"	f	file:
apic_set_reg	lapic.c	/^static inline void apic_set_reg(struct kvm_lapic *apic, int reg_off, u32 val)$/;"	f	file:
apic_set_spiv	lapic.c	/^static inline void apic_set_spiv(struct kvm_lapic *apic, u32 val)$/;"	f	file:
apic_set_tpr	lapic.c	/^static void apic_set_tpr(struct kvm_lapic *apic, u32 tpr)$/;"	f	file:
apic_set_vector	lapic.c	/^static inline void apic_set_vector(int vec, void *bitmap)$/;"	f	file:
apic_sync_pv_eoi_from_guest	lapic.c	/^static void apic_sync_pv_eoi_from_guest(struct kvm_vcpu *vcpu,$/;"	f	file:
apic_sync_pv_eoi_to_guest	lapic.c	/^static void apic_sync_pv_eoi_to_guest(struct kvm_vcpu *vcpu,$/;"	f	file:
apic_test_vector	lapic.c	/^static inline int apic_test_vector(int vec, void *bitmap)$/;"	f	file:
apic_timer_fn	lapic.c	/^static enum hrtimer_restart apic_timer_fn(struct hrtimer *data)$/;"	f	file:
apic_update_ppr	lapic.c	/^static void apic_update_ppr(struct kvm_lapic *apic)$/;"	f	file:
apic_x2apic_mode	lapic.h	/^static inline int apic_x2apic_mode(struct kvm_lapic *apic)$/;"	f
ar	vmx.c	/^			u32 ar;$/;"	m	struct:vcpu_vmx::__anon3::kvm_save_segment	file:
ar_bytes	vmx.c	/^	unsigned ar_bytes;$/;"	m	struct:kvm_vmx_segment_field	file:
arch_events	pmu.c	/^} arch_events[] = {$/;"	v	typeref:struct:kvm_arch_event_perf_mapping	file:
asid_generation	svm.c	/^	u64 asid_generation;$/;"	m	struct:svm_cpu_data	file:
asid_generation	svm.c	/^	uint64_t asid_generation;$/;"	m	struct:vcpu_svm	file:
assign_eip_far	emulate.c	/^static inline int assign_eip_far(struct x86_emulate_ctxt *ctxt, ulong dst,$/;"	f	file:
assign_eip_near	emulate.c	/^static inline int assign_eip_near(struct x86_emulate_ctxt *ctxt, ulong dst)$/;"	f	file:
assign_masked	emulate.c	/^static void assign_masked(ulong *dest, ulong src, ulong mask)$/;"	f	file:
atomic_switch_perf_msrs	vmx.c	/^static void atomic_switch_perf_msrs(struct vcpu_vmx *vmx)$/;"	f	file:
audit_all_active_sps	mmu_audit.c	/^static void audit_all_active_sps(struct kvm *kvm)$/;"	f	file:
audit_mappings	mmu_audit.c	/^static void audit_mappings(struct kvm_vcpu *vcpu, u64 *sptep, int level)$/;"	f	file:
audit_param_ops	mmu_audit.c	/^static struct kernel_param_ops audit_param_ops = {$/;"	v	typeref:struct:kernel_param_ops	file:
audit_point_name	mmu_audit.c	/^char const *audit_point_name[] = {$/;"	v
audit_printk	mmu_audit.c	31;"	d	file:
audit_sp	mmu_audit.c	/^static void audit_sp(struct kvm *kvm, struct kvm_mmu_page *sp)$/;"	f	file:
audit_spte	mmu_audit.c	/^static void audit_spte(struct kvm_vcpu *vcpu, u64 *sptep, int level)$/;"	f	file:
audit_spte_after_sync	mmu_audit.c	/^static void audit_spte_after_sync(struct kvm_vcpu *vcpu, u64 *sptep, int level)$/;"	f	file:
audit_sptes_have_rmaps	mmu_audit.c	/^static void audit_sptes_have_rmaps(struct kvm_vcpu *vcpu, u64 *sptep, int level)$/;"	f	file:
audit_vcpu_spte	mmu_audit.c	/^static void audit_vcpu_spte(struct kvm_vcpu *vcpu)$/;"	f	file:
audit_write_protection	mmu_audit.c	/^static void audit_write_protection(struct kvm *kvm, struct kvm_mmu_page *sp)$/;"	f	file:
auto_eoi	irq.h	/^	u8 auto_eoi;$/;"	m	struct:kvm_kpic_state
ax	tss.h	/^	u16 ax;$/;"	m	struct:tss_segment_16
backwards_tsc_observed	x86.c	/^static bool backwards_tsc_observed = false;$/;"	v	file:
base	vmx.c	/^			unsigned long base;$/;"	m	struct:vcpu_vmx::__anon3::kvm_save_segment	file:
base	vmx.c	/^	unsigned base;$/;"	m	struct:kvm_vmx_segment_field	file:
base0	svm.c	/^	u16 base0;$/;"	m	struct:kvm_ldttss_desc	file:
base1	svm.c	/^	unsigned base1:8, type:5, dpl:2, p:1;$/;"	m	struct:kvm_ldttss_desc	file:
base2	svm.c	/^	unsigned limit1:4, zero0:3, g:1, base2:8;$/;"	m	struct:kvm_ldttss_desc	file:
base3	svm.c	/^	u32 base3;$/;"	m	struct:kvm_ldttss_desc	file:
base_address	lapic.h	/^	unsigned long base_address;$/;"	m	struct:kvm_lapic
bcd	i8254.h	/^	u8 bcd; \/* not supported *\/$/;"	m	struct:kvm_kpit_channel_state
bit	x86.h	/^static inline u32 bit(int bitno)$/;"	f
bitmask	vmx.c	/^		u32 bitmask; \/* 4 bits per segment (1 bit per field) *\/$/;"	m	struct:vcpu_vmx::__anon3	file:
boot_ns	x86.c	/^	u64		boot_ns;$/;"	m	struct:pvclock_gtod_data	file:
bp	tss.h	/^	u16 bp;$/;"	m	struct:tss_segment_16
bp_interception	svm.c	/^static int bp_interception(struct vcpu_svm *svm)$/;"	f	file:
bsf	emulate.c	/^FASTOP2W(bsf);$/;"	v
bsr	emulate.c	/^FASTOP2W(bsr);$/;"	v
bt	emulate.c	/^FASTOP2W(bt);$/;"	v
btc	emulate.c	/^FASTOP2W(btc);$/;"	v
btr	emulate.c	/^FASTOP2W(btr);$/;"	v
bts	emulate.c	/^FASTOP2W(bts);$/;"	v
bx	tss.h	/^	u16 bx;$/;"	m	struct:tss_segment_16
can_do_async_pf	mmu.c	/^static bool can_do_async_pf(struct kvm_vcpu *vcpu)$/;"	f	file:
channels	i8254.h	/^	struct kvm_kpit_channel_state channels[3];$/;"	m	struct:kvm_kpit_state	typeref:struct:kvm_kpit_state::kvm_kpit_channel_state
check_cpuid_limit	cpuid.c	/^static struct kvm_cpuid_entry2* check_cpuid_limit(struct kvm_vcpu *vcpu,$/;"	f	file:
check_cr_read	emulate.c	/^static int check_cr_read(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
check_cr_write	emulate.c	/^static int check_cr_write(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
check_dr7_gd	emulate.c	/^static int check_dr7_gd(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
check_dr_read	emulate.c	/^static int check_dr_read(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
check_dr_write	emulate.c	/^static int check_dr_write(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
check_mappings_rmap	mmu_audit.c	/^static void check_mappings_rmap(struct kvm *kvm, struct kvm_mmu_page *sp)$/;"	f	file:
check_mmio_spte	mmu.c	/^static bool check_mmio_spte(struct kvm *kvm, u64 spte)$/;"	f	file:
check_perm	emulate.c	/^	int (*check_perm)(struct x86_emulate_ctxt *ctxt);$/;"	m	struct:opcode	file:
check_perm_in	emulate.c	/^static int check_perm_in(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
check_perm_out	emulate.c	/^static int check_perm_out(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
check_rdpmc	emulate.c	/^static int check_rdpmc(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
check_rdtsc	emulate.c	/^static int check_rdtsc(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
check_selective_cr0_intercepted	svm.c	/^bool check_selective_cr0_intercepted(struct vcpu_svm *svm, unsigned long val)$/;"	f
check_svme	emulate.c	/^static int check_svme(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
check_svme_pa	emulate.c	/^static int check_svme_pa(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
clear_atomic_switch_msr	vmx.c	/^static void clear_atomic_switch_msr(struct vcpu_vmx *vmx, unsigned msr)$/;"	f	file:
clear_atomic_switch_msr_special	vmx.c	/^static void clear_atomic_switch_msr_special(struct vcpu_vmx *vmx,$/;"	f	file:
clear_sp_write_flooding_count	mmu.c	/^static void clear_sp_write_flooding_count(u64 *spte)$/;"	f	file:
clgi	svm.c	/^static inline void clgi(void)$/;"	f	file:
clgi_interception	svm.c	/^static int clgi_interception(struct vcpu_svm *svm)$/;"	f	file:
clock	x86.c	/^	} clock;$/;"	m	struct:pvclock_gtod_data	typeref:struct:pvclock_gtod_data::__anon4	file:
clr_cr_intercept	svm.c	/^static inline void clr_cr_intercept(struct vcpu_svm *svm, int bit)$/;"	f	file:
clr_dr_intercepts	svm.c	/^static inline void clr_dr_intercepts(struct vcpu_svm *svm)$/;"	f	file:
clr_exception_intercept	svm.c	/^static inline void clr_exception_intercept(struct vcpu_svm *svm, int bit)$/;"	f	file:
clr_intercept	svm.c	/^static inline void clr_intercept(struct vcpu_svm *svm, int bit)$/;"	f	file:
cmp	emulate.c	/^FASTOP2(cmp);$/;"	v
cmpxchg_gpte	paging_tmpl.h	/^static int FNAME(cmpxchg_gpte)(struct kvm_vcpu *vcpu, struct kvm_mmu *mmu,$/;"	f
code_segment_valid	vmx.c	/^static bool code_segment_valid(struct kvm_vcpu *vcpu)$/;"	f	file:
complete_emulated_io	x86.c	/^static inline int complete_emulated_io(struct kvm_vcpu *vcpu)$/;"	f	file:
complete_emulated_mmio	x86.c	/^static int complete_emulated_mmio(struct kvm_vcpu *vcpu)$/;"	f	file:
complete_emulated_pio	x86.c	/^static int complete_emulated_pio(struct kvm_vcpu *vcpu)$/;"	f	file:
compute_guest_tsc	x86.c	/^static u64 compute_guest_tsc(struct kvm_vcpu *vcpu, s64 kernel_ns)$/;"	f	file:
construct_eptp	vmx.c	/^static u64 construct_eptp(unsigned long root_hpa)$/;"	f	file:
control	vmx.c	/^	u32 control;	\/* bit 0 of control is outstanding notification bit *\/$/;"	m	struct:pi_desc	file:
copy_shadow_to_vmcs12	vmx.c	/^static void copy_shadow_to_vmcs12(struct vcpu_vmx *vmx)$/;"	f	file:
copy_vmcb_control_area	svm.c	/^static inline void copy_vmcb_control_area(struct vmcb *dst_vmcb, struct vmcb *from_vmcb)$/;"	f	file:
copy_vmcs12_to_shadow	vmx.c	/^static void copy_vmcs12_to_shadow(struct vcpu_vmx *vmx)$/;"	f	file:
count	i8254.h	/^	u32 count; \/* can be 65536 *\/$/;"	m	struct:kvm_kpit_channel_state
count_latched	i8254.h	/^	u8 count_latched;$/;"	m	struct:kvm_kpit_channel_state
count_load_time	i8254.h	/^	ktime_t count_load_time;$/;"	m	struct:kvm_kpit_channel_state
count_spte_clear	mmu.c	/^static void count_spte_clear(u64 *sptep, u64 spte)$/;"	f	file:
count_vectors	lapic.c	/^static u8 count_vectors(void *bitmap)$/;"	f	file:
cpu	svm.c	/^	int cpu;$/;"	m	struct:svm_cpu_data	file:
cpu	svm.c	/^	int cpu;$/;"	m	struct:svm_init_data	file:
cpu	vmx.c	/^	int cpu;$/;"	m	struct:loaded_vmcs	file:
cpu_based_2nd_exec_ctrl	vmx.c	/^	u32 cpu_based_2nd_exec_ctrl;$/;"	m	struct:vmcs_config	file:
cpu_based_exec_ctrl	vmx.c	/^	u32 cpu_based_exec_ctrl;$/;"	m	struct:vmcs_config	file:
cpu_based_vm_exec_control	vmx.c	/^	u32 cpu_based_vm_exec_control;$/;"	m	struct:vmcs12	file:
cpu_has_kvm_support	vmx.c	/^static __init int cpu_has_kvm_support(void)$/;"	f	file:
cpu_has_load_ia32_efer	vmx.c	/^static bool cpu_has_load_ia32_efer;$/;"	v	file:
cpu_has_load_perf_global_ctrl	vmx.c	/^static bool cpu_has_load_perf_global_ctrl;$/;"	v	file:
cpu_has_secondary_exec_ctrls	vmx.c	/^static inline bool cpu_has_secondary_exec_ctrls(void)$/;"	f	file:
cpu_has_virtual_nmis	vmx.c	/^static inline bool cpu_has_virtual_nmis(void)$/;"	f	file:
cpu_has_vmx_apic_register_virt	vmx.c	/^static inline bool cpu_has_vmx_apic_register_virt(void)$/;"	f	file:
cpu_has_vmx_apicv	vmx.c	/^static inline bool cpu_has_vmx_apicv(void)$/;"	f	file:
cpu_has_vmx_ept	vmx.c	/^static inline bool cpu_has_vmx_ept(void)$/;"	f	file:
cpu_has_vmx_ept_1g_page	vmx.c	/^static inline bool cpu_has_vmx_ept_1g_page(void)$/;"	f	file:
cpu_has_vmx_ept_2m_page	vmx.c	/^static inline bool cpu_has_vmx_ept_2m_page(void)$/;"	f	file:
cpu_has_vmx_ept_4levels	vmx.c	/^static inline bool cpu_has_vmx_ept_4levels(void)$/;"	f	file:
cpu_has_vmx_ept_ad_bits	vmx.c	/^static inline bool cpu_has_vmx_ept_ad_bits(void)$/;"	f	file:
cpu_has_vmx_ept_execute_only	vmx.c	/^static inline bool cpu_has_vmx_ept_execute_only(void)$/;"	f	file:
cpu_has_vmx_eptp_uncacheable	vmx.c	/^static inline bool cpu_has_vmx_eptp_uncacheable(void)$/;"	f	file:
cpu_has_vmx_eptp_writeback	vmx.c	/^static inline bool cpu_has_vmx_eptp_writeback(void)$/;"	f	file:
cpu_has_vmx_flexpriority	vmx.c	/^static inline bool cpu_has_vmx_flexpriority(void)$/;"	f	file:
cpu_has_vmx_invept_context	vmx.c	/^static inline bool cpu_has_vmx_invept_context(void)$/;"	f	file:
cpu_has_vmx_invept_global	vmx.c	/^static inline bool cpu_has_vmx_invept_global(void)$/;"	f	file:
cpu_has_vmx_invpcid	vmx.c	/^static inline bool cpu_has_vmx_invpcid(void)$/;"	f	file:
cpu_has_vmx_invvpid_global	vmx.c	/^static inline bool cpu_has_vmx_invvpid_global(void)$/;"	f	file:
cpu_has_vmx_invvpid_single	vmx.c	/^static inline bool cpu_has_vmx_invvpid_single(void)$/;"	f	file:
cpu_has_vmx_msr_bitmap	vmx.c	/^static inline bool cpu_has_vmx_msr_bitmap(void)$/;"	f	file:
cpu_has_vmx_ple	vmx.c	/^static inline bool cpu_has_vmx_ple(void)$/;"	f	file:
cpu_has_vmx_posted_intr	vmx.c	/^static inline bool cpu_has_vmx_posted_intr(void)$/;"	f	file:
cpu_has_vmx_rdtscp	vmx.c	/^static inline bool cpu_has_vmx_rdtscp(void)$/;"	f	file:
cpu_has_vmx_shadow_vmcs	vmx.c	/^static inline bool cpu_has_vmx_shadow_vmcs(void)$/;"	f	file:
cpu_has_vmx_tpr_shadow	vmx.c	/^static inline bool cpu_has_vmx_tpr_shadow(void)$/;"	f	file:
cpu_has_vmx_unrestricted_guest	vmx.c	/^static inline bool cpu_has_vmx_unrestricted_guest(void)$/;"	f	file:
cpu_has_vmx_virtual_intr_delivery	vmx.c	/^static inline bool cpu_has_vmx_virtual_intr_delivery(void)$/;"	f	file:
cpu_has_vmx_virtualize_apic_accesses	vmx.c	/^static inline bool cpu_has_vmx_virtualize_apic_accesses(void)$/;"	f	file:
cpu_has_vmx_virtualize_x2apic_mode	vmx.c	/^static inline bool cpu_has_vmx_virtualize_x2apic_mode(void)$/;"	f	file:
cpu_has_vmx_vpid	vmx.c	/^static inline bool cpu_has_vmx_vpid(void)$/;"	f	file:
cpu_has_vmx_wbinvd_exit	vmx.c	/^static inline bool cpu_has_vmx_wbinvd_exit(void)$/;"	f	file:
cpuid_fix_nx_cap	cpuid.c	/^static void cpuid_fix_nx_cap(struct kvm_vcpu *vcpu)$/;"	f	file:
cpuid_interception	svm.c	/^static int cpuid_interception(struct vcpu_svm *svm)$/;"	f	file:
cpuid_mask	cpuid.c	/^static void cpuid_mask(u32 *word, int wordnum)$/;"	f	file:
cpuid_maxphyaddr	cpuid.c	/^EXPORT_SYMBOL_GPL(cpuid_maxphyaddr);$/;"	v
cpuid_maxphyaddr	cpuid.c	/^int cpuid_maxphyaddr(struct kvm_vcpu *vcpu)$/;"	f
cr0_guest_host_mask	vmx.c	/^	natural_width cr0_guest_host_mask;$/;"	m	struct:vmcs12	file:
cr0_read_shadow	vmx.c	/^	natural_width cr0_read_shadow;$/;"	m	struct:vmcs12	file:
cr3	tss.h	/^	u32 cr3;$/;"	m	struct:tss_segment_32
cr3_target_count	vmx.c	/^	u32 cr3_target_count;$/;"	m	struct:vmcs12	file:
cr3_target_value0	vmx.c	/^	natural_width cr3_target_value0;$/;"	m	struct:vmcs12	file:
cr3_target_value1	vmx.c	/^	natural_width cr3_target_value1;$/;"	m	struct:vmcs12	file:
cr3_target_value2	vmx.c	/^	natural_width cr3_target_value2;$/;"	m	struct:vmcs12	file:
cr3_target_value3	vmx.c	/^	natural_width cr3_target_value3;$/;"	m	struct:vmcs12	file:
cr4_guest_host_mask	vmx.c	/^	natural_width cr4_guest_host_mask;$/;"	m	struct:vmcs12	file:
cr4_read_shadow	vmx.c	/^	natural_width cr4_read_shadow;$/;"	m	struct:vmcs12	file:
cr8_write_interception	svm.c	/^static int cr8_write_interception(struct vcpu_svm *svm)$/;"	f	file:
cr_interception	svm.c	/^static int cr_interception(struct vcpu_svm *svm)$/;"	f	file:
crash_disable_local_vmclear	vmx.c	/^static inline void crash_disable_local_vmclear(int cpu) { }$/;"	f	file:
crash_disable_local_vmclear	vmx.c	/^static inline void crash_disable_local_vmclear(int cpu)$/;"	f	file:
crash_enable_local_vmclear	vmx.c	/^static inline void crash_enable_local_vmclear(int cpu) { }$/;"	f	file:
crash_enable_local_vmclear	vmx.c	/^static inline void crash_enable_local_vmclear(int cpu)$/;"	f	file:
crash_local_vmclear_enabled	vmx.c	/^static inline int crash_local_vmclear_enabled(int cpu)$/;"	f	file:
crash_vmclear_enabled_bitmap	vmx.c	/^static cpumask_t crash_vmclear_enabled_bitmap = CPU_MASK_NONE;$/;"	v	file:
crash_vmclear_local_loaded_vmcss	vmx.c	/^static void crash_vmclear_local_loaded_vmcss(void)$/;"	f	file:
create_pit_timer	i8254.c	/^static void create_pit_timer(struct kvm *kvm, u32 val, int is_period)$/;"	f	file:
cs	tss.h	/^	u16 cs;$/;"	m	struct:tss_segment_16
cs	tss.h	/^	u32 cs;$/;"	m	struct:tss_segment_32
cs_ss_rpl_check	vmx.c	/^static bool cs_ss_rpl_check(struct kvm_vcpu *vcpu)$/;"	f	file:
curr	x86.c	/^		u64 curr;$/;"	m	struct:kvm_shared_msrs::kvm_shared_msr_values	file:
current_shadow_vmcs	vmx.c	/^	struct vmcs *current_shadow_vmcs;$/;"	m	struct:nested_vmx	typeref:struct:nested_vmx::vmcs	file:
current_vmcs12	vmx.c	/^	struct vmcs12 *current_vmcs12;$/;"	m	struct:nested_vmx	typeref:struct:nested_vmx::vmcs12	file:
current_vmcs12_page	vmx.c	/^	struct page *current_vmcs12_page;$/;"	m	struct:nested_vmx	typeref:struct:nested_vmx::page	file:
current_vmptr	vmx.c	/^	gpa_t current_vmptr;$/;"	m	struct:nested_vmx	file:
cx	tss.h	/^	u16 cx;$/;"	m	struct:tss_segment_16
cycle_last	x86.c	/^		cycle_t	cycle_last;$/;"	m	struct:pvclock_gtod_data::__anon4	file:
data	vmx.c	/^	char data[0];$/;"	m	struct:vmcs	file:
data	vmx.c	/^	u64 data;$/;"	m	struct:shared_msr_entry	file:
data_segment_valid	vmx.c	/^static bool data_segment_valid(struct kvm_vcpu *vcpu, int seg)$/;"	f	file:
db_interception	svm.c	/^static int db_interception(struct vcpu_svm *svm)$/;"	f	file:
dbg	mmu.c	/^static bool dbg = 0;$/;"	v	file:
debugfs_entries	x86.c	/^struct kvm_stats_debugfs_item debugfs_entries[] = {$/;"	v	typeref:struct:kvm_stats_debugfs_item
dec	emulate.c	/^FASTOP1(dec);$/;"	v
decode_abs	emulate.c	/^static int decode_abs(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
decode_imm	emulate.c	/^static int decode_imm(struct x86_emulate_ctxt *ctxt, struct operand *op,$/;"	f	file:
decode_modrm	emulate.c	/^static int decode_modrm(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
decode_operand	emulate.c	/^static int decode_operand(struct x86_emulate_ctxt *ctxt, struct operand *op,$/;"	f	file:
decode_register	emulate.c	/^static void *decode_register(struct x86_emulate_ctxt *ctxt, u8 modrm_reg,$/;"	f	file:
decode_register_operand	emulate.c	/^static void decode_register_operand(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
desc	mmu.c	/^	struct pte_list_desc *desc;	\/* holds the sptep if not NULL *\/$/;"	m	struct:rmap_iterator	typeref:struct:rmap_iterator::pte_list_desc	file:
desc_limit_scaled	emulate.c	/^static u32 desc_limit_scaled(struct desc_struct *desc)$/;"	f	file:
destroy_pit_timer	i8254.c	/^static void destroy_pit_timer(struct kvm_pit *pit)$/;"	f	file:
detect_write_flooding	mmu.c	/^static bool detect_write_flooding(struct kvm_mmu_page *sp)$/;"	f	file:
detect_write_misaligned	mmu.c	/^static bool detect_write_misaligned(struct kvm_mmu_page *sp, gpa_t gpa,$/;"	f	file:
dev	i8254.h	/^	struct kvm_io_device dev;$/;"	m	struct:kvm_pit	typeref:struct:kvm_pit::kvm_io_device
dev	lapic.h	/^	struct kvm_io_device dev;$/;"	m	struct:kvm_lapic	typeref:struct:kvm_lapic::kvm_io_device
dev_eclr	irq.h	/^	struct kvm_io_device dev_eclr;$/;"	m	struct:kvm_pic	typeref:struct:kvm_pic::kvm_io_device
dev_master	irq.h	/^	struct kvm_io_device dev_master;$/;"	m	struct:kvm_pic	typeref:struct:kvm_pic::kvm_io_device
dev_slave	irq.h	/^	struct kvm_io_device dev_slave;$/;"	m	struct:kvm_pic	typeref:struct:kvm_pic::kvm_io_device
dev_to_pit	i8254.c	/^static inline struct kvm_pit *dev_to_pit(struct kvm_io_device *dev)$/;"	f	file:
di	tss.h	/^	u16 di;$/;"	m	struct:tss_segment_16
direct_access_msrs	svm.c	/^} direct_access_msrs[] = {$/;"	v	typeref:struct:svm_direct_access_msrs	file:
direct_pte_prefetch	mmu.c	/^static void direct_pte_prefetch(struct kvm_vcpu *vcpu, u64 *sptep)$/;"	f	file:
direct_pte_prefetch_many	mmu.c	/^static int direct_pte_prefetch_many(struct kvm_vcpu *vcpu,$/;"	f	file:
disable_gif	svm.c	/^static inline void disable_gif(struct vcpu_svm *svm)$/;"	f	file:
div_frac	x86.c	/^static uint32_t div_frac(uint32_t dividend, uint32_t divisor)$/;"	f	file:
divide_count	lapic.h	/^	u32 divide_count;$/;"	m	struct:kvm_lapic
dm_request_for_irq_injection	x86.c	/^static int dm_request_for_irq_injection(struct kvm_vcpu *vcpu)$/;"	f	file:
do_cpuid_1_ent	cpuid.c	/^static void do_cpuid_1_ent(struct kvm_cpuid_entry2 *entry, u32 function,$/;"	f	file:
do_cpuid_ent	cpuid.c	/^static int do_cpuid_ent(struct kvm_cpuid_entry2 *entry, u32 func,$/;"	f	file:
do_insn_fetch_bytes	emulate.c	/^static __always_inline int do_insn_fetch_bytes(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
do_monotonic_boot	x86.c	/^static int do_monotonic_boot(s64 *t, cycle_t *cycle_now)$/;"	f	file:
do_set_msr	x86.c	/^static int do_set_msr(struct kvm_vcpu *vcpu, unsigned index, u64 *data)$/;"	f	file:
dpl	svm.c	/^	unsigned base1:8, type:5, dpl:2, p:1;$/;"	m	struct:kvm_ldttss_desc	file:
dr_interception	svm.c	/^static int dr_interception(struct vcpu_svm *svm)$/;"	f	file:
drop_large_spte	mmu.c	/^static void drop_large_spte(struct kvm_vcpu *vcpu, u64 *sptep)$/;"	f	file:
drop_parent_pte	mmu.c	/^static void drop_parent_pte(struct kvm_mmu_page *sp,$/;"	f	file:
drop_spte	mmu.c	/^static void drop_spte(struct kvm *kvm, u64 *sptep)$/;"	f	file:
drop_user_return_notifiers	x86.c	/^static void drop_user_return_notifiers(void)$/;"	f	file:
ds	tss.h	/^	u16 ds;$/;"	m	struct:tss_segment_16
ds	tss.h	/^	u32 ds;$/;"	m	struct:tss_segment_32
ds_sel	vmx.c	/^		u16           ds_sel, es_sel;$/;"	m	struct:vcpu_vmx::__anon1	file:
dump_vmcb	svm.c	/^static void dump_vmcb(struct kvm_vcpu *vcpu)$/;"	f	file:
dx	tss.h	/^	u16 dx;$/;"	m	struct:tss_segment_16
eax	tss.h	/^	u32 eax;$/;"	m	struct:tss_segment_32
ebp	tss.h	/^	u32 ebp;$/;"	m	struct:tss_segment_32
ebx	tss.h	/^	u32 ebx;$/;"	m	struct:tss_segment_32
ecx	tss.h	/^	u32 ecx;$/;"	m	struct:tss_segment_32
edi	tss.h	/^	u32 edi;$/;"	m	struct:tss_segment_32
edx	tss.h	/^	u32 edx;$/;"	m	struct:tss_segment_32
efer_reserved_bits	x86.c	/^static u64 __read_mostly efer_reserved_bits = ~((u64)EFER_SCE);$/;"	v	file:
efer_reserved_bits	x86.c	/^u64 __read_mostly efer_reserved_bits = ~((u64)(EFER_SCE | EFER_LME | EFER_LMA));$/;"	v	file:
eflags	tss.h	/^	u32 eflags;$/;"	m	struct:tss_segment_32
eip	tss.h	/^	u32 eip;$/;"	m	struct:tss_segment_32
elcr	irq.h	/^	u8 elcr;		\/* PIIX edge\/trigger selection *\/$/;"	m	struct:kvm_kpic_state
elcr_ioport_read	i8259.c	/^static u32 elcr_ioport_read(void *opaque, u32 addr1)$/;"	f	file:
elcr_ioport_write	i8259.c	/^static void elcr_ioport_write(void *opaque, u32 addr, u32 val)$/;"	f	file:
elcr_mask	irq.h	/^	u8 elcr_mask;$/;"	m	struct:kvm_kpic_state
em_aad	emulate.c	/^static int em_aad(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_aam	emulate.c	/^static int em_aam(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_bswap	emulate.c	/^static int em_bswap(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_call	emulate.c	/^static int em_call(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_call_far	emulate.c	/^static int em_call_far(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_clflush	emulate.c	/^static int em_clflush(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_cli	emulate.c	/^static int em_cli(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_clts	emulate.c	/^static int em_clts(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_cmpxchg	emulate.c	/^static int em_cmpxchg(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_cmpxchg8b	emulate.c	/^static int em_cmpxchg8b(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_cpuid	emulate.c	/^static int em_cpuid(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_cr_write	emulate.c	/^static int em_cr_write(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_cwd	emulate.c	/^static int em_cwd(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_das	emulate.c	/^static int em_das(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_dr_write	emulate.c	/^static int em_dr_write(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_enter	emulate.c	/^static int em_enter(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_fninit	emulate.c	/^static int em_fninit(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_fnstcw	emulate.c	/^static int em_fnstcw(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_fnstsw	emulate.c	/^static int em_fnstsw(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_grp45	emulate.c	/^static int em_grp45(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_imul_3op	emulate.c	/^static int em_imul_3op(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_in	emulate.c	/^static int em_in(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_invlpg	emulate.c	/^static int em_invlpg(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_iret	emulate.c	/^static int em_iret(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_jcxz	emulate.c	/^static int em_jcxz(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_jmp_far	emulate.c	/^static int em_jmp_far(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_lahf	emulate.c	/^static int em_lahf(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_leave	emulate.c	/^static int em_leave(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_lgdt	emulate.c	/^static int em_lgdt(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_lidt	emulate.c	/^static int em_lidt(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_lldt	emulate.c	/^static int em_lldt(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_lmsw	emulate.c	/^static int em_lmsw(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_loop	emulate.c	/^static int em_loop(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_lseg	emulate.c	/^static int em_lseg(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_ltr	emulate.c	/^static int em_ltr(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_mov	emulate.c	/^static int em_mov(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_mov_rm_sreg	emulate.c	/^static int em_mov_rm_sreg(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_mov_sreg_rm	emulate.c	/^static int em_mov_sreg_rm(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_movbe	emulate.c	/^static int em_movbe(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_out	emulate.c	/^static int em_out(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_pop	emulate.c	/^static int em_pop(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_pop_sreg	emulate.c	/^static int em_pop_sreg(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_popa	emulate.c	/^static int em_popa(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_popf	emulate.c	/^static int em_popf(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_push	emulate.c	/^static int em_push(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_push_sreg	emulate.c	/^static int em_push_sreg(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_pusha	emulate.c	/^static int em_pusha(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_pushf	emulate.c	/^static int em_pushf(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_rdmsr	emulate.c	/^static int em_rdmsr(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_rdpmc	emulate.c	/^static int em_rdpmc(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_rdtsc	emulate.c	/^static int em_rdtsc(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_ret	emulate.c	/^static int em_ret(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_ret_far	emulate.c	/^static int em_ret_far(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_ret_far_imm	emulate.c	/^static int em_ret_far_imm(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_ret_near_imm	emulate.c	/^static int em_ret_near_imm(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_sahf	emulate.c	/^static int em_sahf(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_sgdt	emulate.c	/^static int em_sgdt(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_sidt	emulate.c	/^static int em_sidt(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_smsw	emulate.c	/^static int em_smsw(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_sti	emulate.c	/^static int em_sti(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_syscall	emulate.c	/^static int em_syscall(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_syscall_is_enabled	emulate.c	/^static bool em_syscall_is_enabled(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_sysenter	emulate.c	/^static int em_sysenter(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_sysexit	emulate.c	/^static int em_sysexit(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_vmcall	emulate.c	/^static int em_vmcall(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_vmmcall	emulate.c	/^static int em_vmmcall(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_wrmsr	emulate.c	/^static int em_wrmsr(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
em_xchg	emulate.c	/^static int em_xchg(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emul_to_vcpu	x86.c	71;"	d	file:
emulate_db	emulate.c	/^static int emulate_db(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulate_de	emulate.c	/^static int emulate_de(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulate_exception	emulate.c	/^static int emulate_exception(struct x86_emulate_ctxt *ctxt, int vec,$/;"	f	file:
emulate_gp	emulate.c	/^static int emulate_gp(struct x86_emulate_ctxt *ctxt, int err)$/;"	f	file:
emulate_int	emulate.c	/^static int emulate_int(struct x86_emulate_ctxt *ctxt, int irq)$/;"	f	file:
emulate_int_real	emulate.c	/^int emulate_int_real(struct x86_emulate_ctxt *ctxt, int irq)$/;"	f
emulate_invalid_guest_state	vmx.c	/^static bool __read_mostly emulate_invalid_guest_state = true;$/;"	v	file:
emulate_iret_real	emulate.c	/^static int emulate_iret_real(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulate_nm	emulate.c	/^static int emulate_nm(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulate_on_interception	svm.c	/^static int emulate_on_interception(struct vcpu_svm *svm)$/;"	f	file:
emulate_ops	x86.c	/^static const struct x86_emulate_ops emulate_ops = {$/;"	v	typeref:struct:x86_emulate_ops	file:
emulate_pop	emulate.c	/^static int emulate_pop(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulate_popf	emulate.c	/^static int emulate_popf(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulate_ss	emulate.c	/^static int emulate_ss(struct x86_emulate_ctxt *ctxt, int err)$/;"	f	file:
emulate_store_desc_ptr	emulate.c	/^static int emulate_store_desc_ptr(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulate_ts	emulate.c	/^static int emulate_ts(struct x86_emulate_ctxt *ctxt, int err)$/;"	f	file:
emulate_ud	emulate.c	/^static int emulate_ud(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulated_msrs	x86.c	/^static const u32 emulated_msrs[] = {$/;"	v	file:
emulation_required	vmx.c	/^	bool emulation_required;$/;"	m	struct:vcpu_vmx	file:
emulation_required	vmx.c	/^static bool emulation_required(struct kvm_vcpu *vcpu)$/;"	f	file:
emulator_bad_iopl	emulate.c	/^static bool emulator_bad_iopl(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulator_check_intercept	emulate.c	/^static int emulator_check_intercept(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_check_pmc	x86.c	/^static int emulator_check_pmc(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_cmpxchg_emulated	x86.c	/^static int emulator_cmpxchg_emulated(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_do_task_switch	emulate.c	/^static int emulator_do_task_switch(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_fix_hypercall	x86.c	/^static int emulator_fix_hypercall(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulator_get_cached_segment_base	x86.c	/^static unsigned long emulator_get_cached_segment_base($/;"	f	file:
emulator_get_cpl	x86.c	/^static int emulator_get_cpl(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulator_get_cpuid	x86.c	/^static void emulator_get_cpuid(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_get_cr	x86.c	/^static unsigned long emulator_get_cr(struct x86_emulate_ctxt *ctxt, int cr)$/;"	f	file:
emulator_get_dr	x86.c	/^int emulator_get_dr(struct x86_emulate_ctxt *ctxt, int dr, unsigned long *dest)$/;"	f
emulator_get_fpu	x86.c	/^static void emulator_get_fpu(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulator_get_gdt	x86.c	/^static void emulator_get_gdt(struct x86_emulate_ctxt *ctxt, struct desc_ptr *dt)$/;"	f	file:
emulator_get_idt	x86.c	/^static void emulator_get_idt(struct x86_emulate_ctxt *ctxt, struct desc_ptr *dt)$/;"	f	file:
emulator_get_msr	x86.c	/^static int emulator_get_msr(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_get_segment	x86.c	/^static bool emulator_get_segment(struct x86_emulate_ctxt *ctxt, u16 *selector,$/;"	f	file:
emulator_halt	x86.c	/^static void emulator_halt(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulator_intercept	x86.c	/^static int emulator_intercept(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_invalidate_register_cache	emulate.c	/^void emulator_invalidate_register_cache(struct x86_emulate_ctxt *ctxt)$/;"	f
emulator_invlpg	x86.c	/^static void emulator_invlpg(struct x86_emulate_ctxt *ctxt, ulong address)$/;"	f	file:
emulator_io_permited	emulate.c	/^static bool emulator_io_permited(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_io_port_access_allowed	emulate.c	/^static bool emulator_io_port_access_allowed(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_pio_in_emulated	x86.c	/^static int emulator_pio_in_emulated(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_pio_in_out	x86.c	/^static int emulator_pio_in_out(struct kvm_vcpu *vcpu, int size,$/;"	f	file:
emulator_pio_out_emulated	x86.c	/^static int emulator_pio_out_emulated(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_put_fpu	x86.c	/^static void emulator_put_fpu(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulator_read_emulated	x86.c	/^static int emulator_read_emulated(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_read_gpr	x86.c	/^static ulong emulator_read_gpr(struct x86_emulate_ctxt *ctxt, unsigned reg)$/;"	f	file:
emulator_read_pmc	x86.c	/^static int emulator_read_pmc(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_read_write	x86.c	/^int emulator_read_write(struct x86_emulate_ctxt *ctxt, unsigned long addr,$/;"	f
emulator_read_write_onepage	x86.c	/^static int emulator_read_write_onepage(unsigned long addr, void *val,$/;"	f	file:
emulator_set_cr	x86.c	/^static int emulator_set_cr(struct x86_emulate_ctxt *ctxt, int cr, ulong val)$/;"	f	file:
emulator_set_dr	x86.c	/^int emulator_set_dr(struct x86_emulate_ctxt *ctxt, int dr, unsigned long value)$/;"	f
emulator_set_gdt	x86.c	/^static void emulator_set_gdt(struct x86_emulate_ctxt *ctxt, struct desc_ptr *dt)$/;"	f	file:
emulator_set_idt	x86.c	/^static void emulator_set_idt(struct x86_emulate_ctxt *ctxt, struct desc_ptr *dt)$/;"	f	file:
emulator_set_msr	x86.c	/^static int emulator_set_msr(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
emulator_set_segment	x86.c	/^static void emulator_set_segment(struct x86_emulate_ctxt *ctxt, u16 selector,$/;"	f	file:
emulator_task_switch	emulate.c	/^int emulator_task_switch(struct x86_emulate_ctxt *ctxt,$/;"	f
emulator_wbinvd	x86.c	/^static void emulator_wbinvd(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
emulator_write_emulated	x86.c	/^int emulator_write_emulated(struct x86_emulate_ctxt *ctxt,$/;"	f
emulator_write_gpr	x86.c	/^static void emulator_write_gpr(struct x86_emulate_ctxt *ctxt, unsigned reg, ulong val)$/;"	f	file:
emulator_write_phys	x86.c	/^int emulator_write_phys(struct kvm_vcpu *vcpu, gpa_t gpa,$/;"	f
emulator_writeback_register_cache	emulate.c	/^void emulator_writeback_register_cache(struct x86_emulate_ctxt *ctxt)$/;"	f
enable_apicv	vmx.c	/^static bool __read_mostly enable_apicv = 1;$/;"	v	file:
enable_ept	vmx.c	/^static bool __read_mostly enable_ept = 1;$/;"	v	file:
enable_ept_ad_bits	vmx.c	/^static bool __read_mostly enable_ept_ad_bits = 1;$/;"	v	file:
enable_gif	svm.c	/^static inline void enable_gif(struct vcpu_svm *svm)$/;"	f	file:
enable_irq_window	svm.c	/^static void enable_irq_window(struct kvm_vcpu *vcpu)$/;"	f	file:
enable_irq_window	vmx.c	/^static void enable_irq_window(struct kvm_vcpu *vcpu)$/;"	f	file:
enable_nmi_window	svm.c	/^static void enable_nmi_window(struct kvm_vcpu *vcpu)$/;"	f	file:
enable_nmi_window	vmx.c	/^static void enable_nmi_window(struct kvm_vcpu *vcpu)$/;"	f	file:
enable_shadow_vmcs	vmx.c	/^static bool __read_mostly enable_shadow_vmcs = 1;$/;"	v	file:
enable_unrestricted_guest	vmx.c	/^static bool __read_mostly enable_unrestricted_guest = 1;$/;"	v	file:
enable_vpid	vmx.c	/^static bool __read_mostly enable_vpid = 1;$/;"	v	file:
enter_guest_mode	kvm_cache_regs.h	/^static inline void enter_guest_mode(struct kvm_vcpu *vcpu)$/;"	f
enter_lmode	vmx.c	/^static void enter_lmode(struct kvm_vcpu *vcpu)$/;"	f	file:
enter_pmode	vmx.c	/^static void enter_pmode(struct kvm_vcpu *vcpu)$/;"	f	file:
enter_rmode	vmx.c	/^static void enter_rmode(struct kvm_vcpu *vcpu)$/;"	f	file:
entry_time	vmx.c	/^	ktime_t entry_time;$/;"	m	struct:vcpu_vmx	file:
ept	vmx.c	/^	u32 ept;$/;"	m	struct:vmx_capability	file:
ept_load_pdptrs	vmx.c	/^static void ept_load_pdptrs(struct kvm_vcpu *vcpu)$/;"	f	file:
ept_misconfig_inspect_spte	vmx.c	/^static void ept_misconfig_inspect_spte(struct kvm_vcpu *vcpu, u64 spte,$/;"	f	file:
ept_pointer	vmx.c	/^	u64 ept_pointer;$/;"	m	struct:vmcs12	file:
ept_rsvd_mask	vmx.c	/^static u64 ept_rsvd_mask(u64 spte, int level)$/;"	f	file:
ept_save_pdptrs	vmx.c	/^static void ept_save_pdptrs(struct kvm_vcpu *vcpu)$/;"	f	file:
ept_set_mmio_spte_mask	vmx.c	/^static void ept_set_mmio_spte_mask(void)$/;"	f	file:
ept_sync_context	vmx.c	/^static inline void ept_sync_context(u64 eptp)$/;"	f	file:
ept_sync_global	vmx.c	/^static inline void ept_sync_global(void)$/;"	f	file:
ept_update_paging_mode_cr0	vmx.c	/^static void ept_update_paging_mode_cr0(unsigned long *hw_cr0,$/;"	f	file:
es	tss.h	/^	u16 es;$/;"	m	struct:tss_segment_16
es	tss.h	/^	u32 es;$/;"	m	struct:tss_segment_32
es_sel	vmx.c	/^		u16           ds_sel, es_sel;$/;"	m	struct:vcpu_vmx::__anon1	file:
esc	emulate.c	/^		const struct escape *esc;$/;"	m	union:opcode::__anon10	typeref:struct:opcode::__anon10::escape	file:
escape	emulate.c	/^struct escape {$/;"	s	file:
escape_d9	emulate.c	/^static const struct escape escape_d9 = { {$/;"	v	typeref:struct:escape	file:
escape_db	emulate.c	/^static const struct escape escape_db = { {$/;"	v	typeref:struct:escape	file:
escape_dd	emulate.c	/^static const struct escape escape_dd = { {$/;"	v	typeref:struct:escape	file:
esi	tss.h	/^	u32 esi;$/;"	m	struct:tss_segment_32
esp	tss.h	/^	u32 esp;$/;"	m	struct:tss_segment_32
esp0	tss.h	/^	u32 esp0;$/;"	m	struct:tss_segment_32
esp1	tss.h	/^	u32 esp1;$/;"	m	struct:tss_segment_32
esp2	tss.h	/^	u32 esp2;$/;"	m	struct:tss_segment_32
event_type	pmu.c	/^	unsigned event_type;$/;"	m	struct:kvm_arch_event_perf_mapping	file:
eventsel	pmu.c	/^	u8 eventsel;$/;"	m	struct:kvm_arch_event_perf_mapping	file:
exception_bitmap	vmx.c	/^	u32 exception_bitmap;$/;"	m	struct:vmcs12	file:
exception_class	x86.c	/^static int exception_class(int vector)$/;"	f	file:
exception_type	x86.c	/^static int exception_type(int vector)$/;"	f	file:
execute	emulate.c	/^		int (*execute)(struct x86_emulate_ctxt *ctxt);$/;"	m	union:opcode::__anon10	file:
exit_code	svm.c	/^	u32 exit_code;$/;"	m	struct:__x86_intercept	file:
exit_intr_info	vmx.c	/^	u32                   exit_intr_info;$/;"	m	struct:vcpu_vmx	file:
exit_lmode	vmx.c	/^static void exit_lmode(struct kvm_vcpu *vcpu)$/;"	f	file:
exit_qualification	vmx.c	/^	natural_width exit_qualification;$/;"	m	struct:vmcs12	file:
exit_reason	vmx.c	/^	u32 exit_reason;$/;"	m	struct:vcpu_vmx	file:
exit_required	svm.c	/^	bool exit_required;$/;"	m	struct:nested_state	file:
expired	i8254.h	/^	struct kthread_work expired;$/;"	m	struct:kvm_pit	typeref:struct:kvm_pit::kthread_work
fail	vmx.c	/^	u8                    fail;$/;"	m	struct:vcpu_vmx	file:
fast_page_fault	mmu.c	/^static bool fast_page_fault(struct kvm_vcpu *vcpu, gva_t gva, int level,$/;"	f	file:
fast_pf_fix_direct_spte	mmu.c	/^fast_pf_fix_direct_spte(struct kvm_vcpu *vcpu, struct kvm_mmu_page *sp,$/;"	f	file:
fasteoi	vmx.c	/^static bool __read_mostly fasteoi = 1;$/;"	v	file:
fastop	emulate.c	/^		void (*fastop)(struct fastop *fake);$/;"	m	union:opcode::__anon10	file:
fastop	emulate.c	/^static int fastop(struct x86_emulate_ctxt *ctxt, void (*fop)(struct fastop *))$/;"	f	file:
fault	paging_tmpl.h	/^	struct x86_exception fault;$/;"	m	struct:guest_walker	typeref:struct:guest_walker::x86_exception
fetch	paging_tmpl.h	/^static int FNAME(fetch)(struct kvm_vcpu *vcpu, gva_t addr,$/;"	f
fetch_bit_operand	emulate.c	/^static void fetch_bit_operand(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
fetch_possible_mmx_operand	emulate.c	/^static void fetch_possible_mmx_operand(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
fetch_register_operand	emulate.c	/^static void fetch_register_operand(struct operand *op)$/;"	f	file:
fill_xsave	x86.c	/^static void fill_xsave(u8 *dest, struct kvm_vcpu *vcpu)$/;"	f	file:
find_arch_event	pmu.c	/^static unsigned find_arch_event(struct kvm_pmu *pmu, u8 event_select,$/;"	f	file:
find_highest_vector	lapic.c	/^static int find_highest_vector(void *bitmap)$/;"	f	file:
find_msr_entry	vmx.c	/^static struct shared_msr_entry *find_msr_entry(struct vcpu_vmx *vmx, u32 msr)$/;"	f	file:
fix_pmode_seg	vmx.c	/^static void fix_pmode_seg(struct kvm_vcpu *vcpu, int seg,$/;"	f	file:
fix_rmode_seg	vmx.c	/^static void fix_rmode_seg(int seg, struct kvm_segment *save)$/;"	f	file:
fixed_en_pmi	pmu.c	/^static inline u8 fixed_en_pmi(u64 ctrl, int idx)$/;"	f	file:
fixed_pmc_events	pmu.c	/^int fixed_pmc_events[] = {1, 0, 7};$/;"	v
flag	tss.h	/^	u16 flag;$/;"	m	struct:tss_segment_16
flags	emulate.c	/^	u64 flags : 56;$/;"	m	struct:opcode	file:
flags	i8254.h	/^	u32 flags;$/;"	m	struct:kvm_kpit_state
flexpriority_enabled	vmx.c	/^static bool __read_mostly flexpriority_enabled = 1;$/;"	v	file:
flush_pending_x87_faults	emulate.c	/^static int flush_pending_x87_faults(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
for_each_gfn_indirect_valid_sp	mmu.c	1721;"	d	file:
for_each_gfn_sp	mmu.c	1716;"	d	file:
for_each_shadow_entry	mmu.c	170;"	d	file:
for_each_shadow_entry_lockless	mmu.c	175;"	d	file:
for_each_sp	mmu.c	1803;"	d	file:
free_kvm_area	vmx.c	/^static void free_kvm_area(void)$/;"	f	file:
free_loaded_vmcs	vmx.c	/^static void free_loaded_vmcs(struct loaded_vmcs *loaded_vmcs)$/;"	f	file:
free_mmu_pages	mmu.c	/^static void free_mmu_pages(struct kvm_vcpu *vcpu)$/;"	f	file:
free_nested	vmx.c	/^static void free_nested(struct vcpu_vmx *vmx)$/;"	f	file:
free_vmcs	vmx.c	/^static void free_vmcs(struct vmcs *vmcs)$/;"	f	file:
free_vpid	vmx.c	/^static void free_vpid(struct vcpu_vmx *vmx)$/;"	f	file:
fs	svm.c	/^		u16 fs;$/;"	m	struct:vcpu_svm::__anon6	file:
fs	tss.h	/^	u32 fs;$/;"	m	struct:tss_segment_32
fs_reload_needed	vmx.c	/^		int           fs_reload_needed;$/;"	m	struct:vcpu_vmx::__anon1	file:
fs_sel	vmx.c	/^		u16           fs_sel, gs_sel, ldt_sel;$/;"	m	struct:vcpu_vmx::__anon1	file:
func	cpuid.c	/^	u32 func;$/;"	m	struct:kvm_cpuid_param	file:
fx_free	x86.c	/^static void fx_free(struct kvm_vcpu *vcpu)$/;"	f	file:
fx_init	x86.c	/^EXPORT_SYMBOL_GPL(fx_init);$/;"	v
fx_init	x86.c	/^int fx_init(struct kvm_vcpu *vcpu)$/;"	f
g	svm.c	/^	unsigned limit1:4, zero0:3, g:1, base2:8;$/;"	m	struct:kvm_ldttss_desc	file:
gate	i8254.h	/^	u8 gate; \/* timer start *\/$/;"	m	struct:kvm_kpit_channel_state
gdual	emulate.c	/^		const struct group_dual *gdual;$/;"	m	union:opcode::__anon10	typeref:struct:opcode::__anon10::group_dual	file:
generation_mmio_spte_mask	mmu.c	/^static u64 generation_mmio_spte_mask(unsigned int gen)$/;"	f	file:
get_cr3	mmu.c	/^static unsigned long get_cr3(struct kvm_vcpu *vcpu)$/;"	f	file:
get_descriptor_table_ptr	emulate.c	/^static void get_descriptor_table_ptr(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
get_ept_level	vmx.c	/^static int get_ept_level(void)$/;"	f	file:
get_fixed_pmc	pmu.c	/^static inline struct kvm_pmc *get_fixed_pmc(struct kvm_pmu *pmu, u32 msr)$/;"	f	file:
get_fixed_pmc_idx	pmu.c	/^static inline struct kvm_pmc *get_fixed_pmc_idx(struct kvm_pmu *pmu, int idx)$/;"	f	file:
get_gp_pmc	pmu.c	/^static inline struct kvm_pmc *get_gp_pmc(struct kvm_pmu *pmu, u32 msr,$/;"	f	file:
get_host_vmcb	svm.c	/^static inline struct vmcb *get_host_vmcb(struct vcpu_svm *svm)$/;"	f	file:
get_kernel_ns	x86.c	/^static inline u64 get_kernel_ns(void)$/;"	f	file:
get_level1_sp_gpa	paging_tmpl.h	/^static gpa_t FNAME(get_level1_sp_gpa)(struct kvm_mmu_page *sp)$/;"	f
get_mmio_spte_access	mmu.c	/^static unsigned get_mmio_spte_access(u64 spte)$/;"	f	file:
get_mmio_spte_generation	mmu.c	/^static unsigned int get_mmio_spte_generation(u64 spte)$/;"	f	file:
get_mmio_spte_gfn	mmu.c	/^static gfn_t get_mmio_spte_gfn(u64 spte)$/;"	f	file:
get_msr_hyperv	x86.c	/^static int get_msr_hyperv(struct kvm_vcpu *vcpu, u32 msr, u64 *pdata)$/;"	f	file:
get_msr_hyperv_pw	x86.c	/^static int get_msr_hyperv_pw(struct kvm_vcpu *vcpu, u32 msr, u64 *pdata)$/;"	f	file:
get_msr_mce	x86.c	/^static int get_msr_mce(struct kvm_vcpu *vcpu, u32 msr, u64 *pdata)$/;"	f	file:
get_msr_mtrr	x86.c	/^static int get_msr_mtrr(struct kvm_vcpu *vcpu, u32 msr, u64 *pdata)$/;"	f	file:
get_mtrr_type	mmu.c	/^static int get_mtrr_type(struct mtrr_state_type *mtrr_state,$/;"	f	file:
get_npt_level	svm.c	/^static int get_npt_level(void)$/;"	f	file:
get_priority	i8259.c	/^static inline int get_priority(struct kvm_kpic_state *s, int mask)$/;"	f	file:
get_segment_base	x86.c	/^static unsigned long get_segment_base(struct kvm_vcpu *vcpu, int seg)$/;"	f	file:
get_segment_selector	emulate.c	/^static u16 get_segment_selector(struct x86_emulate_ctxt *ctxt, unsigned seg)$/;"	f	file:
get_vmcs12	vmx.c	/^static inline struct vmcs12 *get_vmcs12(struct kvm_vcpu *vcpu)$/;"	f	file:
get_vmx_mem_address	vmx.c	/^static int get_vmx_mem_address(struct kvm_vcpu *vcpu,$/;"	f	file:
get_written_sptes	mmu.c	/^static u64 *get_written_sptes(struct kvm_mmu_page *sp, gpa_t gpa, int *nspte)$/;"	f	file:
gfn	paging_tmpl.h	/^	gfn_t gfn;$/;"	m	struct:guest_walker
gfn_to_memslot_dirty_bitmap	mmu.c	/^gfn_to_memslot_dirty_bitmap(struct kvm_vcpu *vcpu, gfn_t gfn,$/;"	f	file:
gfn_to_rmap	mmu.c	/^static unsigned long *gfn_to_rmap(struct kvm *kvm, gfn_t gfn, int level)$/;"	f	file:
gif_set	svm.c	/^static inline bool gif_set(struct vcpu_svm *svm)$/;"	f	file:
global_ctrl_changed	pmu.c	/^static void global_ctrl_changed(struct kvm_pmu *pmu, u64 data)$/;"	f	file:
global_idx_to_pmc	pmu.c	/^static struct kvm_pmc *global_idx_to_pmc(struct kvm_pmu *pmu, int idx)$/;"	f	file:
gprefix	emulate.c	/^		const struct gprefix *gprefix;$/;"	m	union:opcode::__anon10	typeref:struct:opcode::__anon10::gprefix	file:
gprefix	emulate.c	/^struct gprefix {$/;"	s	file:
gpte_access	paging_tmpl.h	/^static inline unsigned FNAME(gpte_access)(struct kvm_vcpu *vcpu, u64 gpte)$/;"	f
gpte_changed	paging_tmpl.h	/^static bool FNAME(gpte_changed)(struct kvm_vcpu *vcpu,$/;"	f
gpte_to_gfn	paging_tmpl.h	1005;"	d
gpte_to_gfn	paging_tmpl.h	88;"	d
gpte_to_gfn_lvl	paging_tmpl.h	/^static gfn_t gpte_to_gfn_lvl(pt_element_t gpte, int lvl)$/;"	f
gpte_to_gfn_lvl	paging_tmpl.h	1006;"	d
gpte_to_gfn_lvl	paging_tmpl.h	87;"	d
group	emulate.c	/^		const struct opcode *group;$/;"	m	union:opcode::__anon10	typeref:struct:opcode::__anon10::opcode	file:
group1	emulate.c	/^static const struct opcode group1[] = {$/;"	v	typeref:struct:opcode	file:
group11	emulate.c	/^static const struct opcode group11[] = {$/;"	v	typeref:struct:opcode	file:
group15	emulate.c	/^static const struct group_dual group15 = { {$/;"	v	typeref:struct:group_dual	file:
group1A	emulate.c	/^static const struct opcode group1A[] = {$/;"	v	typeref:struct:opcode	file:
group2	emulate.c	/^static const struct opcode group2[] = {$/;"	v	typeref:struct:opcode	file:
group3	emulate.c	/^static const struct opcode group3[] = {$/;"	v	typeref:struct:opcode	file:
group4	emulate.c	/^static const struct opcode group4[] = {$/;"	v	typeref:struct:opcode	file:
group5	emulate.c	/^static const struct opcode group5[] = {$/;"	v	typeref:struct:opcode	file:
group6	emulate.c	/^static const struct opcode group6[] = {$/;"	v	typeref:struct:opcode	file:
group7	emulate.c	/^static const struct group_dual group7 = { {$/;"	v	typeref:struct:group_dual	file:
group7_rm0	emulate.c	/^static const struct opcode group7_rm0[] = {$/;"	v	typeref:struct:opcode	file:
group7_rm1	emulate.c	/^static const struct opcode group7_rm1[] = {$/;"	v	typeref:struct:opcode	file:
group7_rm3	emulate.c	/^static const struct opcode group7_rm3[] = {$/;"	v	typeref:struct:opcode	file:
group7_rm7	emulate.c	/^static const struct opcode group7_rm7[] = {$/;"	v	typeref:struct:opcode	file:
group8	emulate.c	/^static const struct opcode group8[] = {$/;"	v	typeref:struct:opcode	file:
group9	emulate.c	/^static const struct group_dual group9 = { {$/;"	v	typeref:struct:group_dual	file:
group_dual	emulate.c	/^struct group_dual {$/;"	s	file:
grow_ple_window	vmx.c	/^static void grow_ple_window(struct kvm_vcpu *vcpu)$/;"	f	file:
gs	svm.c	/^		u16 gs;$/;"	m	struct:vcpu_svm::__anon6	file:
gs	tss.h	/^	u32 gs;$/;"	m	struct:tss_segment_32
gs_base	svm.c	/^		u64 gs_base;$/;"	m	struct:vcpu_svm::__anon6	file:
gs_ldt_reload_needed	vmx.c	/^		int           gs_ldt_reload_needed;$/;"	m	struct:vcpu_vmx::__anon1	file:
gs_sel	vmx.c	/^		u16           fs_sel, gs_sel, ldt_sel;$/;"	m	struct:vcpu_vmx::__anon1	file:
guest	vmx.c	/^		struct vmx_msr_entry guest[NR_AUTOLOAD_MSRS];$/;"	m	struct:vcpu_vmx::msr_autoload	typeref:struct:vcpu_vmx::msr_autoload::vmx_msr_entry	file:
guest_activity_state	vmx.c	/^	u32 guest_activity_state;$/;"	m	struct:vmcs12	file:
guest_bndcfgs	vmx.c	/^	u64 guest_bndcfgs;$/;"	m	struct:vmcs12	file:
guest_cpuid_has_fsgsbase	cpuid.h	/^static inline bool guest_cpuid_has_fsgsbase(struct kvm_vcpu *vcpu)$/;"	f
guest_cpuid_has_gbpages	cpuid.h	/^static inline bool guest_cpuid_has_gbpages(struct kvm_vcpu *vcpu)$/;"	f
guest_cpuid_has_mpx	cpuid.h	/^static inline bool guest_cpuid_has_mpx(struct kvm_vcpu *vcpu)$/;"	f
guest_cpuid_has_osvw	cpuid.h	/^static inline bool guest_cpuid_has_osvw(struct kvm_vcpu *vcpu)$/;"	f
guest_cpuid_has_pcid	cpuid.h	/^static inline bool guest_cpuid_has_pcid(struct kvm_vcpu *vcpu)$/;"	f
guest_cpuid_has_rtm	cpuid.h	/^static inline bool guest_cpuid_has_rtm(struct kvm_vcpu *vcpu)$/;"	f
guest_cpuid_has_smap	cpuid.h	/^static inline bool guest_cpuid_has_smap(struct kvm_vcpu *vcpu)$/;"	f
guest_cpuid_has_smep	cpuid.h	/^static inline bool guest_cpuid_has_smep(struct kvm_vcpu *vcpu)$/;"	f
guest_cpuid_has_tsc_adjust	cpuid.h	/^static inline bool guest_cpuid_has_tsc_adjust(struct kvm_vcpu *vcpu)$/;"	f
guest_cpuid_has_vmx	vmx.c	/^static bool guest_cpuid_has_vmx(struct kvm_vcpu *vcpu)$/;"	f	file:
guest_cpuid_has_x2apic	cpuid.h	/^static inline bool guest_cpuid_has_x2apic(struct kvm_vcpu *vcpu)$/;"	f
guest_cpuid_has_xsave	cpuid.h	/^static inline bool guest_cpuid_has_xsave(struct kvm_vcpu *vcpu)$/;"	f
guest_cpuid_is_amd	cpuid.h	/^static inline bool guest_cpuid_is_amd(struct kvm_vcpu *vcpu)$/;"	f
guest_cr0	vmx.c	/^	natural_width guest_cr0;$/;"	m	struct:vmcs12	file:
guest_cr3	vmx.c	/^	natural_width guest_cr3;$/;"	m	struct:vmcs12	file:
guest_cr4	vmx.c	/^	natural_width guest_cr4;$/;"	m	struct:vmcs12	file:
guest_cs_ar_bytes	vmx.c	/^	u32 guest_cs_ar_bytes;$/;"	m	struct:vmcs12	file:
guest_cs_base	vmx.c	/^	natural_width guest_cs_base;$/;"	m	struct:vmcs12	file:
guest_cs_limit	vmx.c	/^	u32 guest_cs_limit;$/;"	m	struct:vmcs12	file:
guest_cs_selector	vmx.c	/^	u16 guest_cs_selector;$/;"	m	struct:vmcs12	file:
guest_dr7	vmx.c	/^	natural_width guest_dr7;$/;"	m	struct:vmcs12	file:
guest_ds_ar_bytes	vmx.c	/^	u32 guest_ds_ar_bytes;$/;"	m	struct:vmcs12	file:
guest_ds_base	vmx.c	/^	natural_width guest_ds_base;$/;"	m	struct:vmcs12	file:
guest_ds_limit	vmx.c	/^	u32 guest_ds_limit;$/;"	m	struct:vmcs12	file:
guest_ds_selector	vmx.c	/^	u16 guest_ds_selector;$/;"	m	struct:vmcs12	file:
guest_es_ar_bytes	vmx.c	/^	u32 guest_es_ar_bytes;$/;"	m	struct:vmcs12	file:
guest_es_base	vmx.c	/^	natural_width guest_es_base;$/;"	m	struct:vmcs12	file:
guest_es_limit	vmx.c	/^	u32 guest_es_limit;$/;"	m	struct:vmcs12	file:
guest_es_selector	vmx.c	/^	u16 guest_es_selector;$/;"	m	struct:vmcs12	file:
guest_fs_ar_bytes	vmx.c	/^	u32 guest_fs_ar_bytes;$/;"	m	struct:vmcs12	file:
guest_fs_base	vmx.c	/^	natural_width guest_fs_base;$/;"	m	struct:vmcs12	file:
guest_fs_limit	vmx.c	/^	u32 guest_fs_limit;$/;"	m	struct:vmcs12	file:
guest_fs_selector	vmx.c	/^	u16 guest_fs_selector;$/;"	m	struct:vmcs12	file:
guest_gdtr_base	vmx.c	/^	natural_width guest_gdtr_base;$/;"	m	struct:vmcs12	file:
guest_gdtr_limit	vmx.c	/^	u32 guest_gdtr_limit;$/;"	m	struct:vmcs12	file:
guest_gs_ar_bytes	vmx.c	/^	u32 guest_gs_ar_bytes;$/;"	m	struct:vmcs12	file:
guest_gs_base	vmx.c	/^	natural_width guest_gs_base;$/;"	m	struct:vmcs12	file:
guest_gs_limit	vmx.c	/^	u32 guest_gs_limit;$/;"	m	struct:vmcs12	file:
guest_gs_selector	vmx.c	/^	u16 guest_gs_selector;$/;"	m	struct:vmcs12	file:
guest_ia32_debugctl	vmx.c	/^	u64 guest_ia32_debugctl;$/;"	m	struct:vmcs12	file:
guest_ia32_efer	vmx.c	/^	u64 guest_ia32_efer;$/;"	m	struct:vmcs12	file:
guest_ia32_pat	vmx.c	/^	u64 guest_ia32_pat;$/;"	m	struct:vmcs12	file:
guest_ia32_perf_global_ctrl	vmx.c	/^	u64 guest_ia32_perf_global_ctrl;$/;"	m	struct:vmcs12	file:
guest_idtr_base	vmx.c	/^	natural_width guest_idtr_base;$/;"	m	struct:vmcs12	file:
guest_idtr_limit	vmx.c	/^	u32 guest_idtr_limit;$/;"	m	struct:vmcs12	file:
guest_interruptibility_info	vmx.c	/^	u32 guest_interruptibility_info;$/;"	m	struct:vmcs12	file:
guest_ldtr_ar_bytes	vmx.c	/^	u32 guest_ldtr_ar_bytes;$/;"	m	struct:vmcs12	file:
guest_ldtr_base	vmx.c	/^	natural_width guest_ldtr_base;$/;"	m	struct:vmcs12	file:
guest_ldtr_limit	vmx.c	/^	u32 guest_ldtr_limit;$/;"	m	struct:vmcs12	file:
guest_ldtr_selector	vmx.c	/^	u16 guest_ldtr_selector;$/;"	m	struct:vmcs12	file:
guest_linear_address	vmx.c	/^	natural_width guest_linear_address;$/;"	m	struct:vmcs12	file:
guest_msrs	vmx.c	/^	struct shared_msr_entry *guest_msrs;$/;"	m	struct:vcpu_vmx	typeref:struct:vcpu_vmx::shared_msr_entry	file:
guest_pdptr0	vmx.c	/^	u64 guest_pdptr0;$/;"	m	struct:vmcs12	file:
guest_pdptr1	vmx.c	/^	u64 guest_pdptr1;$/;"	m	struct:vmcs12	file:
guest_pdptr2	vmx.c	/^	u64 guest_pdptr2;$/;"	m	struct:vmcs12	file:
guest_pdptr3	vmx.c	/^	u64 guest_pdptr3;$/;"	m	struct:vmcs12	file:
guest_pending_dbg_exceptions	vmx.c	/^	natural_width guest_pending_dbg_exceptions;$/;"	m	struct:vmcs12	file:
guest_physical_address	vmx.c	/^	u64 guest_physical_address;$/;"	m	struct:vmcs12	file:
guest_read_tsc	vmx.c	/^static u64 guest_read_tsc(void)$/;"	f	file:
guest_rflags	vmx.c	/^	natural_width guest_rflags;$/;"	m	struct:vmcs12	file:
guest_rip	vmx.c	/^	natural_width guest_rip;$/;"	m	struct:vmcs12	file:
guest_rsp	vmx.c	/^	natural_width guest_rsp;$/;"	m	struct:vmcs12	file:
guest_ss_ar_bytes	vmx.c	/^	u32 guest_ss_ar_bytes;$/;"	m	struct:vmcs12	file:
guest_ss_base	vmx.c	/^	natural_width guest_ss_base;$/;"	m	struct:vmcs12	file:
guest_ss_limit	vmx.c	/^	u32 guest_ss_limit;$/;"	m	struct:vmcs12	file:
guest_ss_selector	vmx.c	/^	u16 guest_ss_selector;$/;"	m	struct:vmcs12	file:
guest_state_valid	vmx.c	/^static bool guest_state_valid(struct kvm_vcpu *vcpu)$/;"	f	file:
guest_sysenter_cs	vmx.c	/^	u32 guest_sysenter_cs;$/;"	m	struct:vmcs12	file:
guest_sysenter_eip	vmx.c	/^	natural_width guest_sysenter_eip;$/;"	m	struct:vmcs12	file:
guest_sysenter_esp	vmx.c	/^	natural_width guest_sysenter_esp;$/;"	m	struct:vmcs12	file:
guest_tr_ar_bytes	vmx.c	/^	u32 guest_tr_ar_bytes;$/;"	m	struct:vmcs12	file:
guest_tr_base	vmx.c	/^	natural_width guest_tr_base;$/;"	m	struct:vmcs12	file:
guest_tr_limit	vmx.c	/^	u32 guest_tr_limit;$/;"	m	struct:vmcs12	file:
guest_tr_selector	vmx.c	/^	u16 guest_tr_selector;$/;"	m	struct:vmcs12	file:
guest_walker	paging_tmpl.h	/^struct guest_walker {$/;"	s
guest_walker	paging_tmpl.h	35;"	d
guest_walker	paging_tmpl.h	55;"	d
guest_walker	paging_tmpl.h	70;"	d
guest_walker	paging_tmpl.h	997;"	d
gva_to_gpa	paging_tmpl.h	/^static gpa_t FNAME(gva_to_gpa)(struct kvm_vcpu *vcpu, gva_t vaddr, u32 access,$/;"	f
gva_to_gpa_nested	paging_tmpl.h	/^static gpa_t FNAME(gva_to_gpa_nested)(struct kvm_vcpu *vcpu, gva_t vaddr,$/;"	f
halt_interception	svm.c	/^static int halt_interception(struct vcpu_svm *svm)$/;"	f	file:
handle_abnormal_pfn	mmu.c	/^static bool handle_abnormal_pfn(struct kvm_vcpu *vcpu, gva_t gva, gfn_t gfn,$/;"	f	file:
handle_apic_access	vmx.c	/^static int handle_apic_access(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_apic_eoi_induced	vmx.c	/^static int handle_apic_eoi_induced(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_apic_write	vmx.c	/^static int handle_apic_write(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_clts	vmx.c	/^static void handle_clts(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_cpuid	vmx.c	/^static int handle_cpuid(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_cr	vmx.c	/^static int handle_cr(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_dr	vmx.c	/^static int handle_dr(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_emulation_failure	x86.c	/^static int handle_emulation_failure(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_ept_misconfig	vmx.c	/^static int handle_ept_misconfig(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_ept_violation	vmx.c	/^static int handle_ept_violation(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_exception	vmx.c	/^static int handle_exception(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_exit	svm.c	/^static int handle_exit(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_external_interrupt	vmx.c	/^static int handle_external_interrupt(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_halt	vmx.c	/^static int handle_halt(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_interrupt_window	vmx.c	/^static int handle_interrupt_window(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_invalid_guest_state	vmx.c	/^static int handle_invalid_guest_state(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_invd	vmx.c	/^static int handle_invd(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_invept	vmx.c	/^static int handle_invept(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_invlpg	vmx.c	/^static int handle_invlpg(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_invvpid	vmx.c	/^static int handle_invvpid(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_io	vmx.c	/^static int handle_io(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_machine_check	vmx.c	/^static int handle_machine_check(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_mmio_page_fault	mmu.c	/^static int handle_mmio_page_fault(struct kvm_vcpu *vcpu, u64 addr,$/;"	f	file:
handle_mmio_page_fault_common	mmu.c	/^EXPORT_SYMBOL_GPL(handle_mmio_page_fault_common);$/;"	v
handle_mmio_page_fault_common	mmu.c	/^int handle_mmio_page_fault_common(struct kvm_vcpu *vcpu, u64 addr, bool direct)$/;"	f
handle_monitor	vmx.c	/^static int handle_monitor(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_mwait	vmx.c	/^static int handle_mwait(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_nmi_window	vmx.c	/^static int handle_nmi_window(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_nop	vmx.c	/^static int handle_nop(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_pause	vmx.c	/^static int handle_pause(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_rdmsr	vmx.c	/^static int handle_rdmsr(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_rdpmc	vmx.c	/^static int handle_rdpmc(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_rmode_exception	vmx.c	/^static int handle_rmode_exception(struct kvm_vcpu *vcpu,$/;"	f	file:
handle_set_cr0	vmx.c	/^static int handle_set_cr0(struct kvm_vcpu *vcpu, unsigned long val)$/;"	f	file:
handle_set_cr4	vmx.c	/^static int handle_set_cr4(struct kvm_vcpu *vcpu, unsigned long val)$/;"	f	file:
handle_task_switch	vmx.c	/^static int handle_task_switch(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_tpr_below_threshold	vmx.c	/^static int handle_tpr_below_threshold(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_triple_fault	vmx.c	/^static int handle_triple_fault(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_vmcall	vmx.c	/^static int handle_vmcall(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_vmclear	vmx.c	/^static int handle_vmclear(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_vmlaunch	vmx.c	/^static int handle_vmlaunch(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_vmoff	vmx.c	/^static int handle_vmoff(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_vmon	vmx.c	/^static int handle_vmon(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_vmptrld	vmx.c	/^static int handle_vmptrld(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_vmptrst	vmx.c	/^static int handle_vmptrst(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_vmread	vmx.c	/^static int handle_vmread(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_vmresume	vmx.c	/^static int handle_vmresume(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_vmwrite	vmx.c	/^static int handle_vmwrite(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_wbinvd	vmx.c	/^static int handle_wbinvd(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_wrmsr	vmx.c	/^static int handle_wrmsr(struct kvm_vcpu *vcpu)$/;"	f	file:
handle_xsetbv	vmx.c	/^static int handle_xsetbv(struct kvm_vcpu *vcpu)$/;"	f	file:
hardware_disable	vmx.c	/^static void hardware_disable(void)$/;"	f	file:
hardware_enable	vmx.c	/^static int hardware_enable(void)$/;"	f	file:
hardware_setup	vmx.c	/^static __init int hardware_setup(void)$/;"	f	file:
hardware_unsetup	vmx.c	/^static __exit void hardware_unsetup(void)$/;"	f	file:
has_leaf_count	cpuid.c	/^	bool has_leaf_count;$/;"	m	struct:kvm_cpuid_param	file:
has_svm	svm.c	/^static int has_svm(void)$/;"	f	file:
has_wrprotected_page	mmu.c	/^static int has_wrprotected_page(struct kvm *kvm,$/;"	f	file:
high	emulate.c	/^	struct opcode high[64];$/;"	m	struct:escape	typeref:struct:escape::opcode	file:
highest_isr_cache	lapic.h	/^	int highest_isr_cache;$/;"	m	struct:kvm_lapic
host	svm.c	/^	} host;$/;"	m	struct:vcpu_svm	typeref:struct:vcpu_svm::__anon6	file:
host	vmx.c	/^		struct vmx_msr_entry host[NR_AUTOLOAD_MSRS];$/;"	m	struct:vcpu_vmx::msr_autoload	typeref:struct:vcpu_vmx::msr_autoload::vmx_msr_entry	file:
host	x86.c	/^		u64 host;$/;"	m	struct:kvm_shared_msrs::kvm_shared_msr_values	file:
host_clocks	trace.h	791;"	d
host_cr0	vmx.c	/^	natural_width host_cr0;$/;"	m	struct:vmcs12	file:
host_cr3	vmx.c	/^	natural_width host_cr3;$/;"	m	struct:vmcs12	file:
host_cr4	vmx.c	/^	natural_width host_cr4;$/;"	m	struct:vmcs12	file:
host_cs_selector	vmx.c	/^	u16 host_cs_selector;$/;"	m	struct:vmcs12	file:
host_ds_selector	vmx.c	/^	u16 host_ds_selector;$/;"	m	struct:vmcs12	file:
host_efer	vmx.c	/^static u64 host_efer;$/;"	v	file:
host_es_selector	vmx.c	/^	u16 host_es_selector;$/;"	m	struct:vmcs12	file:
host_fs_base	vmx.c	/^	natural_width host_fs_base;$/;"	m	struct:vmcs12	file:
host_fs_selector	vmx.c	/^	u16 host_fs_selector;$/;"	m	struct:vmcs12	file:
host_gdtr_base	vmx.c	/^	natural_width host_gdtr_base;$/;"	m	struct:vmcs12	file:
host_gs_base	vmx.c	/^	natural_width host_gs_base;$/;"	m	struct:vmcs12	file:
host_gs_selector	vmx.c	/^	u16 host_gs_selector;$/;"	m	struct:vmcs12	file:
host_ia32_efer	vmx.c	/^	u64 host_ia32_efer;$/;"	m	struct:vmcs12	file:
host_ia32_pat	vmx.c	/^	u64 host_ia32_pat;$/;"	m	struct:vmcs12	file:
host_ia32_perf_global_ctrl	vmx.c	/^	u64 host_ia32_perf_global_ctrl;$/;"	m	struct:vmcs12	file:
host_ia32_sysenter_cs	vmx.c	/^	u32 host_ia32_sysenter_cs;$/;"	m	struct:vmcs12	file:
host_ia32_sysenter_eip	vmx.c	/^	natural_width host_ia32_sysenter_eip;$/;"	m	struct:vmcs12	file:
host_ia32_sysenter_esp	vmx.c	/^	natural_width host_ia32_sysenter_esp;$/;"	m	struct:vmcs12	file:
host_idt_base	vmx.c	/^	unsigned long	      host_idt_base;$/;"	m	struct:vcpu_vmx	file:
host_idtr_base	vmx.c	/^	natural_width host_idtr_base;$/;"	m	struct:vmcs12	file:
host_mapping_level	mmu.c	/^static int host_mapping_level(struct kvm *kvm, gfn_t gfn)$/;"	f	file:
host_rip	vmx.c	/^	natural_width host_rip;$/;"	m	struct:vmcs12	file:
host_rsp	vmx.c	/^	natural_width host_rsp;$/;"	m	struct:vmcs12	file:
host_rsp	vmx.c	/^	unsigned long         host_rsp;$/;"	m	struct:vcpu_vmx	file:
host_save_user_msrs	svm.c	/^static const u32 host_save_user_msrs[] = {$/;"	v	file:
host_ss_selector	vmx.c	/^	u16 host_ss_selector;$/;"	m	struct:vmcs12	file:
host_state	vmx.c	/^	} host_state;$/;"	m	struct:vcpu_vmx	typeref:struct:vcpu_vmx::__anon1	file:
host_tr_base	vmx.c	/^	natural_width host_tr_base;$/;"	m	struct:vmcs12	file:
host_tr_selector	vmx.c	/^	u16 host_tr_selector;$/;"	m	struct:vmcs12	file:
host_user_msrs	svm.c	/^	u64 host_user_msrs[NR_HOST_SAVE_USER_MSRS];$/;"	m	struct:vcpu_svm	file:
host_xcr0	x86.c	/^u64 __read_mostly host_xcr0;$/;"	v
hsave	svm.c	/^	struct vmcb *hsave;$/;"	m	struct:nested_state	typeref:struct:nested_state::vmcb	file:
hsave_msr	svm.c	/^	u64 hsave_msr;$/;"	m	struct:nested_state	file:
idt_vectoring_error_code	vmx.c	/^	u32 idt_vectoring_error_code;$/;"	m	struct:vmcs12	file:
idt_vectoring_info	vmx.c	/^	u32                   idt_vectoring_info;$/;"	m	struct:vcpu_vmx	file:
idt_vectoring_info_field	vmx.c	/^	u32 idt_vectoring_info_field;$/;"	m	struct:vmcs12	file:
idx	cpuid.c	/^	u32 idx;$/;"	m	struct:kvm_cpuid_param	file:
idx	mmu.c	/^		unsigned int idx;$/;"	m	struct:kvm_mmu_pages::mmu_page_and_offset	file:
idx	mmu.c	/^	unsigned int idx[PT64_ROOT_LEVEL-1];$/;"	m	struct:mmu_page_path	file:
ignore_msrs	x86.c	/^static bool ignore_msrs = 0;$/;"	v	file:
imm_size	emulate.c	/^static unsigned imm_size(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
imr	irq.h	/^	u8 imr;		\/* interrupt mask register *\/$/;"	m	struct:kvm_kpic_state
imul	emulate.c	/^FASTOP2W(imul);$/;"	v
inc	emulate.c	/^FASTOP1(inc);$/;"	v
index	mmu.c	/^	unsigned index;$/;"	m	struct:kvm_shadow_walk_iterator	file:
index	svm.c	/^	u32 index;   \/* Index of the MSR *\/$/;"	m	struct:svm_direct_access_msrs	file:
index	vmx.c	/^	unsigned index;$/;"	m	struct:shared_msr_entry	file:
inexact	pmu.c	/^	bool inexact;$/;"	m	struct:kvm_arch_event_perf_mapping	file:
init4	irq.h	/^	u8 init4;		\/* true if 4 byte init *\/$/;"	m	struct:kvm_kpic_state
init_decode_cache	emulate.c	/^void init_decode_cache(struct x86_emulate_ctxt *ctxt)$/;"	f
init_emulate_ctxt	x86.c	/^static void init_emulate_ctxt(struct kvm_vcpu *vcpu)$/;"	f	file:
init_kvm_mmu	mmu.c	/^static void init_kvm_mmu(struct kvm_vcpu *vcpu)$/;"	f	file:
init_kvm_nested_mmu	mmu.c	/^static void init_kvm_nested_mmu(struct kvm_vcpu *vcpu)$/;"	f	file:
init_kvm_softmmu	mmu.c	/^static void init_kvm_softmmu(struct kvm_vcpu *vcpu)$/;"	f	file:
init_kvm_tdp_mmu	mmu.c	/^static void init_kvm_tdp_mmu(struct kvm_vcpu *vcpu)$/;"	f	file:
init_msrpm_offsets	svm.c	/^static void init_msrpm_offsets(void)$/;"	f	file:
init_rmode_identity_map	vmx.c	/^static int init_rmode_identity_map(struct kvm *kvm)$/;"	f	file:
init_rmode_tss	vmx.c	/^static int init_rmode_tss(struct kvm *kvm)$/;"	f	file:
init_seg	svm.c	/^static void init_seg(struct vmcb_seg *seg)$/;"	f	file:
init_shadow_page_table	mmu.c	/^static void init_shadow_page_table(struct kvm_mmu_page *sp)$/;"	f	file:
init_state	irq.h	/^	u8 init_state;$/;"	m	struct:kvm_kpic_state
init_sys_seg	svm.c	/^static void init_sys_seg(struct vmcb_seg *seg, uint32_t type)$/;"	f	file:
init_vmcb	svm.c	/^static void init_vmcb(struct vcpu_svm *svm)$/;"	f	file:
init_vmcs_shadow_fields	vmx.c	/^static void init_vmcs_shadow_fields(void)$/;"	f	file:
inject_emulated_exception	x86.c	/^static bool inject_emulated_exception(struct kvm_vcpu *vcpu)$/;"	f	file:
inject_lock	i8254.h	/^	spinlock_t inject_lock;$/;"	m	struct:kvm_kpit_state
inject_page_fault	mmu.c	/^static void inject_page_fault(struct kvm_vcpu *vcpu,$/;"	f	file:
inject_pending_event	x86.c	/^static int inject_pending_event(struct kvm_vcpu *vcpu, bool req_int_win)$/;"	f	file:
insn_aligned	emulate.c	/^static bool insn_aligned(struct x86_emulate_ctxt *ctxt, unsigned size)$/;"	f	file:
insn_fetch	emulate.c	815;"	d	file:
insn_fetch_arr	emulate.c	827;"	d	file:
inspect_spte_fn	mmu_audit.c	/^typedef void (*inspect_spte_fn) (struct kvm_vcpu *vcpu, u64 *sptep, int level);$/;"	t	file:
inspect_spte_has_rmap	mmu_audit.c	/^static void inspect_spte_has_rmap(struct kvm *kvm, u64 *sptep)$/;"	f	file:
int3_injected	svm.c	/^	unsigned int3_injected;$/;"	m	struct:vcpu_svm	file:
int3_rip	svm.c	/^	unsigned long int3_rip;$/;"	m	struct:vcpu_svm	file:
intercept	emulate.c	/^	u64 intercept : 8;$/;"	m	struct:opcode	file:
intercept	svm.c	/^	u64 intercept;$/;"	m	struct:nested_state	file:
intercept_cr	svm.c	/^	u32 intercept_cr;$/;"	m	struct:nested_state	file:
intercept_dr	svm.c	/^	u32 intercept_dr;$/;"	m	struct:nested_state	file:
intercept_exceptions	svm.c	/^	u32 intercept_exceptions;$/;"	m	struct:nested_state	file:
interrupt_window_interception	svm.c	/^static int interrupt_window_interception(struct vcpu_svm *svm)$/;"	f	file:
intr_interception	svm.c	/^static int intr_interception(struct vcpu_svm *svm)$/;"	f	file:
invalidate_registers	emulate.c	/^static void invalidate_registers(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
invlpg	paging_tmpl.h	/^static void FNAME(invlpg)(struct kvm_vcpu *vcpu, gva_t gva)$/;"	f
invlpg_interception	svm.c	/^static int invlpg_interception(struct vcpu_svm *svm)$/;"	f	file:
invlpga	svm.c	/^static inline void invlpga(unsigned long addr, u32 asid)$/;"	f	file:
invlpga_interception	svm.c	/^static int invlpga_interception(struct vcpu_svm *svm)$/;"	f	file:
io_bitmap_a	vmx.c	/^	u64 io_bitmap_a;$/;"	m	struct:vmcs12	file:
io_bitmap_b	vmx.c	/^	u64 io_bitmap_b;$/;"	m	struct:vmcs12	file:
io_interception	svm.c	/^static int io_interception(struct vcpu_svm *svm)$/;"	f	file:
io_map	tss.h	/^	u16 io_map;$/;"	m	struct:tss_segment_32
iopm_base	svm.c	/^static unsigned long iopm_base;$/;"	v	file:
ip	tss.h	/^	u16 ip;$/;"	m	struct:tss_segment_16
iret_interception	svm.c	/^static int iret_interception(struct vcpu_svm *svm)$/;"	f	file:
irq_ack	i8254.h	/^	unsigned long irq_ack;$/;"	m	struct:kvm_kpit_state
irq_ack_notifier	i8254.h	/^	struct kvm_irq_ack_notifier irq_ack_notifier;$/;"	m	struct:kvm_kpit_state	typeref:struct:kvm_kpit_state::kvm_irq_ack_notifier
irq_base	irq.h	/^	u8 irq_base;$/;"	m	struct:kvm_kpic_state
irq_source_id	i8254.h	/^	int irq_source_id;$/;"	m	struct:kvm_pit
irq_states	irq.h	/^	unsigned long irq_states[PIC_NUM_PINS];$/;"	m	struct:kvm_pic
irqchip_in_kernel	irq.h	/^static inline int irqchip_in_kernel(struct kvm *kvm)$/;"	f
irr	irq.h	/^	u8 irr;		\/* interrupt request register *\/$/;"	m	struct:kvm_kpic_state
irr_pending	lapic.h	/^	bool irr_pending;$/;"	m	struct:kvm_lapic
is_64_bit_mode	x86.h	/^static inline bool is_64_bit_mode(struct kvm_vcpu *vcpu)$/;"	f
is_centaur_cpu	cpuid.c	/^static bool is_centaur_cpu(const struct kvm_cpuid_param *param)$/;"	f	file:
is_cpuid_PSE36	mmu.c	/^static int is_cpuid_PSE36(void)$/;"	f	file:
is_cr_intercept	svm.c	/^static inline bool is_cr_intercept(struct vcpu_svm *svm, int bit)$/;"	f	file:
is_disabled	svm.c	/^static int is_disabled(void)$/;"	f	file:
is_efer_nx	cpuid.c	/^static int is_efer_nx(void)$/;"	f	file:
is_empty_shadow_page	mmu.c	/^static int is_empty_shadow_page(u64 *spt)$/;"	f	file:
is_erratum_383	svm.c	/^static bool is_erratum_383(void)$/;"	f	file:
is_exception	vmx.c	/^static inline bool is_exception(u32 intr_info)$/;"	f	file:
is_external_interrupt	svm.c	/^static int is_external_interrupt(u32 info)$/;"	f	file:
is_external_interrupt	vmx.c	/^static inline bool is_external_interrupt(u32 intr_info)$/;"	f	file:
is_guest_mode	kvm_cache_regs.h	/^static inline bool is_guest_mode(struct kvm_vcpu *vcpu)$/;"	f
is_invalid_opcode	vmx.c	/^static inline bool is_invalid_opcode(u32 intr_info)$/;"	f	file:
is_large_pte	mmu.c	/^static int is_large_pte(u64 pte)$/;"	f	file:
is_last_gpte	mmu.c	/^static inline bool is_last_gpte(struct kvm_mmu *mmu, unsigned level, unsigned gpte)$/;"	f	file:
is_last_spte	mmu.c	/^static int is_last_spte(u64 pte, int level)$/;"	f	file:
is_long_mode	x86.h	/^static inline int is_long_mode(struct kvm_vcpu *vcpu)$/;"	f
is_machine_check	vmx.c	/^static inline bool is_machine_check(u32 intr_info)$/;"	f	file:
is_matching_cpuid_entry	cpuid.c	/^static int is_matching_cpuid_entry(struct kvm_cpuid_entry2 *e,$/;"	f	file:
is_mmio_page_fault	mmu.c	/^static bool is_mmio_page_fault(struct kvm_vcpu *vcpu, gva_t addr)$/;"	f	file:
is_mmio_spte	mmu.c	/^static bool is_mmio_spte(u64 spte)$/;"	f	file:
is_no_device	vmx.c	/^static inline bool is_no_device(u32 intr_info)$/;"	f	file:
is_nx	mmu.c	/^static int is_nx(struct kvm_vcpu *vcpu)$/;"	f	file:
is_obsolete_sp	mmu.c	/^static bool is_obsolete_sp(struct kvm *kvm, struct kvm_mmu_page *sp)$/;"	f	file:
is_pae	x86.h	/^static inline int is_pae(struct kvm_vcpu *vcpu)$/;"	f
is_page_fault	vmx.c	/^static inline bool is_page_fault(u32 intr_info)$/;"	f	file:
is_paging	x86.h	/^static inline int is_paging(struct kvm_vcpu *vcpu)$/;"	f
is_periodic	i8254.h	/^	bool is_periodic;$/;"	m	struct:kvm_kpit_state
is_present_gpte	mmu.h	/^static inline int is_present_gpte(unsigned long pte)$/;"	f
is_present_gpte	paging_tmpl.h	/^static inline int FNAME(is_present_gpte)(unsigned long pte)$/;"	f
is_protmode	x86.h	/^static inline bool is_protmode(struct kvm_vcpu *vcpu)$/;"	f
is_pse	x86.h	/^static inline int is_pse(struct kvm_vcpu *vcpu)$/;"	f
is_rmap_spte	mmu.c	/^static int is_rmap_spte(u64 pte)$/;"	f	file:
is_rsvd_bits_set	paging_tmpl.h	/^static bool FNAME(is_rsvd_bits_set)(struct kvm_mmu *mmu, u64 gpte, int level)$/;"	f
is_self_change_mapping	paging_tmpl.h	/^FNAME(is_self_change_mapping)(struct kvm_vcpu *vcpu,$/;"	f
is_shadow_present_pte	mmu.c	/^static int is_shadow_present_pte(u64 pte)$/;"	f	file:
is_writable_pte	mmu.h	/^static inline int is_writable_pte(unsigned long pte)$/;"	f
is_write_protection	mmu.h	/^static inline bool is_write_protection(struct kvm_vcpu *vcpu)$/;"	f
isr	irq.h	/^	u8 isr;		\/* interrupt service register *\/$/;"	m	struct:kvm_kpic_state
isr_ack	irq.h	/^	u8 isr_ack;	\/* interrupt ack detection *\/$/;"	m	struct:kvm_kpic_state
isr_count	lapic.h	/^	s16 isr_count;$/;"	m	struct:kvm_lapic
jmp_rel	emulate.c	/^static inline int jmp_rel(struct x86_emulate_ctxt *ctxt, int rel)$/;"	f	file:
kei_decode_mode	trace.h	683;"	d
kernel_pio	x86.c	/^static int kernel_pio(struct kvm_vcpu *vcpu, void *pd)$/;"	f	file:
kpit_elapsed	i8254.c	/^static s64 kpit_elapsed(struct kvm *kvm, struct kvm_kpit_channel_state *c,$/;"	f	file:
kvm	i8254.h	/^	struct kvm *kvm;$/;"	m	struct:kvm_kpit_state	typeref:struct:kvm_kpit_state::kvm
kvm	i8254.h	/^	struct kvm *kvm;$/;"	m	struct:kvm_pit	typeref:struct:kvm_pit::kvm
kvm	irq.h	/^	struct kvm *kvm;$/;"	m	struct:kvm_pic	typeref:struct:kvm_pic::kvm
kvm_add_async_pf_gfn	x86.c	/^static void kvm_add_async_pf_gfn(struct kvm_vcpu *vcpu, gfn_t gfn)$/;"	f	file:
kvm_after_handle_nmi	x86.c	/^EXPORT_SYMBOL_GPL(kvm_after_handle_nmi);$/;"	v
kvm_after_handle_nmi	x86.c	/^void kvm_after_handle_nmi(struct kvm_vcpu *vcpu)$/;"	f
kvm_age_hva	mmu.c	/^int kvm_age_hva(struct kvm *kvm, unsigned long start, unsigned long end)$/;"	f
kvm_age_rmapp	mmu.c	/^static int kvm_age_rmapp(struct kvm *kvm, unsigned long *rmapp,$/;"	f	file:
kvm_apic_accept_events	lapic.c	/^void kvm_apic_accept_events(struct kvm_vcpu *vcpu)$/;"	f
kvm_apic_accept_pic_intr	lapic.c	/^int kvm_apic_accept_pic_intr(struct kvm_vcpu *vcpu)$/;"	f
kvm_apic_compare_prio	lapic.c	/^int kvm_apic_compare_prio(struct kvm_vcpu *vcpu1, struct kvm_vcpu *vcpu2)$/;"	f
kvm_apic_dst_shorthand	trace.h	386;"	d
kvm_apic_get_reg	lapic.h	/^static inline u32 kvm_apic_get_reg(struct kvm_lapic *apic, int reg_off)$/;"	f
kvm_apic_has_events	lapic.h	/^static inline bool kvm_apic_has_events(struct kvm_vcpu *vcpu)$/;"	f
kvm_apic_has_interrupt	lapic.c	/^int kvm_apic_has_interrupt(struct kvm_vcpu *vcpu)$/;"	f
kvm_apic_hw_enabled	lapic.h	/^static inline int kvm_apic_hw_enabled(struct kvm_lapic *apic)$/;"	f
kvm_apic_id	lapic.c	/^static inline int kvm_apic_id(struct kvm_lapic *apic)$/;"	f	file:
kvm_apic_local_deliver	lapic.c	/^int kvm_apic_local_deliver(struct kvm_lapic *apic, int lvt_type)$/;"	f
kvm_apic_match_dest	lapic.c	/^int kvm_apic_match_dest(struct kvm_vcpu *vcpu, struct kvm_lapic *source,$/;"	f
kvm_apic_match_logical_addr	lapic.c	/^int kvm_apic_match_logical_addr(struct kvm_lapic *apic, u8 mda)$/;"	f
kvm_apic_match_physical_addr	lapic.c	/^int kvm_apic_match_physical_addr(struct kvm_lapic *apic, u16 dest)$/;"	f
kvm_apic_nmi_wd_deliver	lapic.c	/^void kvm_apic_nmi_wd_deliver(struct kvm_vcpu *vcpu)$/;"	f
kvm_apic_pending_eoi	lapic.c	/^bool kvm_apic_pending_eoi(struct kvm_vcpu *vcpu, int vector)$/;"	f
kvm_apic_post_state_restore	lapic.c	/^void kvm_apic_post_state_restore(struct kvm_vcpu *vcpu,$/;"	f
kvm_apic_present	lapic.h	/^static inline bool kvm_apic_present(struct kvm_vcpu *vcpu)$/;"	f
kvm_apic_set_eoi_accelerated	lapic.c	/^EXPORT_SYMBOL_GPL(kvm_apic_set_eoi_accelerated);$/;"	v
kvm_apic_set_eoi_accelerated	lapic.c	/^void kvm_apic_set_eoi_accelerated(struct kvm_vcpu *vcpu, int vector)$/;"	f
kvm_apic_set_id	lapic.c	/^static inline void kvm_apic_set_id(struct kvm_lapic *apic, u8 id)$/;"	f	file:
kvm_apic_set_irq	lapic.c	/^int kvm_apic_set_irq(struct kvm_vcpu *vcpu, struct kvm_lapic_irq *irq,$/;"	f
kvm_apic_set_ldr	lapic.c	/^static inline void kvm_apic_set_ldr(struct kvm_lapic *apic, u32 id)$/;"	f	file:
kvm_apic_set_version	lapic.c	/^void kvm_apic_set_version(struct kvm_vcpu *vcpu)$/;"	f
kvm_apic_sw_enabled	lapic.h	/^static inline int kvm_apic_sw_enabled(struct kvm_lapic *apic)$/;"	f
kvm_apic_update_irr	lapic.c	/^EXPORT_SYMBOL_GPL(kvm_apic_update_irr);$/;"	v
kvm_apic_update_irr	lapic.c	/^void kvm_apic_update_irr(struct kvm_vcpu *vcpu, u32 *pir)$/;"	f
kvm_apic_update_tmr	lapic.c	/^void kvm_apic_update_tmr(struct kvm_vcpu *vcpu, u32 *tmr)$/;"	f
kvm_apic_vid_enabled	lapic.h	/^static inline bool kvm_apic_vid_enabled(struct kvm *kvm)$/;"	f
kvm_apic_write_nodecode	lapic.c	/^EXPORT_SYMBOL_GPL(kvm_apic_write_nodecode);$/;"	v
kvm_apic_write_nodecode	lapic.c	/^void kvm_apic_write_nodecode(struct kvm_vcpu *vcpu, u32 offset)$/;"	f
kvm_arch_async_page_not_present	x86.c	/^void kvm_arch_async_page_not_present(struct kvm_vcpu *vcpu,$/;"	f
kvm_arch_async_page_present	x86.c	/^void kvm_arch_async_page_present(struct kvm_vcpu *vcpu,$/;"	f
kvm_arch_async_page_ready	x86.c	/^void kvm_arch_async_page_ready(struct kvm_vcpu *vcpu, struct kvm_async_pf *work)$/;"	f
kvm_arch_can_inject_async_page_present	x86.c	/^bool kvm_arch_can_inject_async_page_present(struct kvm_vcpu *vcpu)$/;"	f
kvm_arch_check_processor_compat	x86.c	/^void kvm_arch_check_processor_compat(void *rtn)$/;"	f
kvm_arch_commit_memory_region	x86.c	/^void kvm_arch_commit_memory_region(struct kvm *kvm,$/;"	f
kvm_arch_create_memslot	x86.c	/^int kvm_arch_create_memslot(struct kvm *kvm, struct kvm_memory_slot *slot,$/;"	f
kvm_arch_destroy_vm	x86.c	/^void kvm_arch_destroy_vm(struct kvm *kvm)$/;"	f
kvm_arch_dev_ioctl	x86.c	/^long kvm_arch_dev_ioctl(struct file *filp,$/;"	f
kvm_arch_event_perf_mapping	pmu.c	/^static struct kvm_arch_event_perf_mapping {$/;"	s	file:
kvm_arch_exit	x86.c	/^void kvm_arch_exit(void)$/;"	f
kvm_arch_flush_shadow_all	x86.c	/^void kvm_arch_flush_shadow_all(struct kvm *kvm)$/;"	f
kvm_arch_flush_shadow_memslot	x86.c	/^void kvm_arch_flush_shadow_memslot(struct kvm *kvm,$/;"	f
kvm_arch_free_memslot	x86.c	/^void kvm_arch_free_memslot(struct kvm *kvm, struct kvm_memory_slot *free,$/;"	f
kvm_arch_hardware_disable	x86.c	/^void kvm_arch_hardware_disable(void)$/;"	f
kvm_arch_hardware_enable	x86.c	/^int kvm_arch_hardware_enable(void)$/;"	f
kvm_arch_hardware_setup	x86.c	/^int kvm_arch_hardware_setup(void)$/;"	f
kvm_arch_hardware_unsetup	x86.c	/^void kvm_arch_hardware_unsetup(void)$/;"	f
kvm_arch_has_noncoherent_dma	x86.c	/^EXPORT_SYMBOL_GPL(kvm_arch_has_noncoherent_dma);$/;"	v
kvm_arch_has_noncoherent_dma	x86.c	/^bool kvm_arch_has_noncoherent_dma(struct kvm *kvm)$/;"	f
kvm_arch_init	x86.c	/^int kvm_arch_init(void *opaque)$/;"	f
kvm_arch_init_vm	x86.c	/^int kvm_arch_init_vm(struct kvm *kvm, unsigned long type)$/;"	f
kvm_arch_interrupt_allowed	x86.c	/^int kvm_arch_interrupt_allowed(struct kvm_vcpu *vcpu)$/;"	f
kvm_arch_memslots_updated	x86.c	/^void kvm_arch_memslots_updated(struct kvm *kvm)$/;"	f
kvm_arch_mmu_notifier_invalidate_page	x86.c	/^void kvm_arch_mmu_notifier_invalidate_page(struct kvm *kvm,$/;"	f
kvm_arch_prepare_memory_region	x86.c	/^int kvm_arch_prepare_memory_region(struct kvm *kvm,$/;"	f
kvm_arch_register_noncoherent_dma	x86.c	/^EXPORT_SYMBOL_GPL(kvm_arch_register_noncoherent_dma);$/;"	v
kvm_arch_register_noncoherent_dma	x86.c	/^void kvm_arch_register_noncoherent_dma(struct kvm *kvm)$/;"	f
kvm_arch_sched_in	x86.c	/^void kvm_arch_sched_in(struct kvm_vcpu *vcpu, int cpu)$/;"	f
kvm_arch_setup_async_pf	mmu.c	/^static int kvm_arch_setup_async_pf(struct kvm_vcpu *vcpu, gva_t gva, gfn_t gfn)$/;"	f	file:
kvm_arch_sync_events	x86.c	/^void kvm_arch_sync_events(struct kvm *kvm)$/;"	f
kvm_arch_unregister_noncoherent_dma	x86.c	/^EXPORT_SYMBOL_GPL(kvm_arch_unregister_noncoherent_dma);$/;"	v
kvm_arch_unregister_noncoherent_dma	x86.c	/^void kvm_arch_unregister_noncoherent_dma(struct kvm *kvm)$/;"	f
kvm_arch_vcpu_create	x86.c	/^struct kvm_vcpu *kvm_arch_vcpu_create(struct kvm *kvm,$/;"	f
kvm_arch_vcpu_destroy	x86.c	/^void kvm_arch_vcpu_destroy(struct kvm_vcpu *vcpu)$/;"	f
kvm_arch_vcpu_fault	x86.c	/^int kvm_arch_vcpu_fault(struct kvm_vcpu *vcpu, struct vm_fault *vmf)$/;"	f
kvm_arch_vcpu_free	x86.c	/^void kvm_arch_vcpu_free(struct kvm_vcpu *vcpu)$/;"	f
kvm_arch_vcpu_init	x86.c	/^int kvm_arch_vcpu_init(struct kvm_vcpu *vcpu)$/;"	f
kvm_arch_vcpu_ioctl	x86.c	/^long kvm_arch_vcpu_ioctl(struct file *filp,$/;"	f
kvm_arch_vcpu_ioctl_get_fpu	x86.c	/^int kvm_arch_vcpu_ioctl_get_fpu(struct kvm_vcpu *vcpu, struct kvm_fpu *fpu)$/;"	f
kvm_arch_vcpu_ioctl_get_mpstate	x86.c	/^int kvm_arch_vcpu_ioctl_get_mpstate(struct kvm_vcpu *vcpu,$/;"	f
kvm_arch_vcpu_ioctl_get_regs	x86.c	/^int kvm_arch_vcpu_ioctl_get_regs(struct kvm_vcpu *vcpu, struct kvm_regs *regs)$/;"	f
kvm_arch_vcpu_ioctl_get_sregs	x86.c	/^int kvm_arch_vcpu_ioctl_get_sregs(struct kvm_vcpu *vcpu,$/;"	f
kvm_arch_vcpu_ioctl_run	x86.c	/^int kvm_arch_vcpu_ioctl_run(struct kvm_vcpu *vcpu, struct kvm_run *kvm_run)$/;"	f
kvm_arch_vcpu_ioctl_set_fpu	x86.c	/^int kvm_arch_vcpu_ioctl_set_fpu(struct kvm_vcpu *vcpu, struct kvm_fpu *fpu)$/;"	f
kvm_arch_vcpu_ioctl_set_guest_debug	x86.c	/^int kvm_arch_vcpu_ioctl_set_guest_debug(struct kvm_vcpu *vcpu,$/;"	f
kvm_arch_vcpu_ioctl_set_mpstate	x86.c	/^int kvm_arch_vcpu_ioctl_set_mpstate(struct kvm_vcpu *vcpu,$/;"	f
kvm_arch_vcpu_ioctl_set_regs	x86.c	/^int kvm_arch_vcpu_ioctl_set_regs(struct kvm_vcpu *vcpu, struct kvm_regs *regs)$/;"	f
kvm_arch_vcpu_ioctl_set_sregs	x86.c	/^int kvm_arch_vcpu_ioctl_set_sregs(struct kvm_vcpu *vcpu,$/;"	f
kvm_arch_vcpu_ioctl_translate	x86.c	/^int kvm_arch_vcpu_ioctl_translate(struct kvm_vcpu *vcpu,$/;"	f
kvm_arch_vcpu_load	x86.c	/^void kvm_arch_vcpu_load(struct kvm_vcpu *vcpu, int cpu)$/;"	f
kvm_arch_vcpu_postcreate	x86.c	/^int kvm_arch_vcpu_postcreate(struct kvm_vcpu *vcpu)$/;"	f
kvm_arch_vcpu_put	x86.c	/^void kvm_arch_vcpu_put(struct kvm_vcpu *vcpu)$/;"	f
kvm_arch_vcpu_runnable	x86.c	/^int kvm_arch_vcpu_runnable(struct kvm_vcpu *vcpu)$/;"	f
kvm_arch_vcpu_setup	x86.c	/^int kvm_arch_vcpu_setup(struct kvm_vcpu *vcpu)$/;"	f
kvm_arch_vcpu_should_kick	x86.c	/^int kvm_arch_vcpu_should_kick(struct kvm_vcpu *vcpu)$/;"	f
kvm_arch_vcpu_uninit	x86.c	/^void kvm_arch_vcpu_uninit(struct kvm_vcpu *vcpu)$/;"	f
kvm_arch_vm_ioctl	x86.c	/^long kvm_arch_vm_ioctl(struct file *filp,$/;"	f
kvm_async_pf_gfn_slot	x86.c	/^static u32 kvm_async_pf_gfn_slot(struct kvm_vcpu *vcpu, gfn_t gfn)$/;"	f	file:
kvm_async_pf_hash_fn	x86.c	/^static inline u32 kvm_async_pf_hash_fn(gfn_t gfn)$/;"	f	file:
kvm_async_pf_hash_reset	x86.c	/^static inline void kvm_async_pf_hash_reset(struct kvm_vcpu *vcpu)$/;"	f	file:
kvm_async_pf_next_probe	x86.c	/^static inline u32 kvm_async_pf_next_probe(u32 key)$/;"	f	file:
kvm_before_handle_nmi	x86.c	/^EXPORT_SYMBOL_GPL(kvm_before_handle_nmi);$/;"	v
kvm_before_handle_nmi	x86.c	/^void kvm_before_handle_nmi(struct kvm_vcpu *vcpu)$/;"	f
kvm_clear_exception_queue	x86.h	/^static inline void kvm_clear_exception_queue(struct kvm_vcpu *vcpu)$/;"	f
kvm_clear_interrupt_queue	x86.h	/^static inline void kvm_clear_interrupt_queue(struct kvm_vcpu *vcpu)$/;"	f
kvm_complete_insn_gp	x86.c	/^EXPORT_SYMBOL_GPL(kvm_complete_insn_gp);$/;"	v
kvm_complete_insn_gp	x86.c	/^void kvm_complete_insn_gp(struct kvm_vcpu *vcpu, int err)$/;"	f
kvm_cpu_get_extint	irq.c	/^static int kvm_cpu_get_extint(struct kvm_vcpu *v)$/;"	f	file:
kvm_cpu_get_interrupt	irq.c	/^EXPORT_SYMBOL_GPL(kvm_cpu_get_interrupt);$/;"	v
kvm_cpu_get_interrupt	irq.c	/^int kvm_cpu_get_interrupt(struct kvm_vcpu *v)$/;"	f
kvm_cpu_has_extint	irq.c	/^static int kvm_cpu_has_extint(struct kvm_vcpu *v)$/;"	f	file:
kvm_cpu_has_injectable_intr	irq.c	/^int kvm_cpu_has_injectable_intr(struct kvm_vcpu *v)$/;"	f
kvm_cpu_has_interrupt	irq.c	/^EXPORT_SYMBOL_GPL(kvm_cpu_has_interrupt);$/;"	v
kvm_cpu_has_interrupt	irq.c	/^int kvm_cpu_has_interrupt(struct kvm_vcpu *v)$/;"	f
kvm_cpu_has_pending_timer	irq.c	/^EXPORT_SYMBOL(kvm_cpu_has_pending_timer);$/;"	v
kvm_cpu_has_pending_timer	irq.c	/^int kvm_cpu_has_pending_timer(struct kvm_vcpu *vcpu)$/;"	f
kvm_cpu_vmxoff	vmx.c	/^static void kvm_cpu_vmxoff(void)$/;"	f	file:
kvm_cpu_vmxon	vmx.c	/^static void kvm_cpu_vmxon(u64 addr)$/;"	f	file:
kvm_cpuid	cpuid.c	/^EXPORT_SYMBOL_GPL(kvm_cpuid);$/;"	v
kvm_cpuid	cpuid.c	/^void kvm_cpuid(struct kvm_vcpu *vcpu, u32 *eax, u32 *ebx, u32 *ecx, u32 *edx)$/;"	f
kvm_cpuid_param	cpuid.c	/^struct kvm_cpuid_param {$/;"	s	file:
kvm_cr	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_cr);$/;"	v
kvm_create_lapic	lapic.c	/^int kvm_create_lapic(struct kvm_vcpu *vcpu)$/;"	f
kvm_create_pic	i8259.c	/^struct kvm_pic *kvm_create_pic(struct kvm *kvm)$/;"	f
kvm_create_pit	i8254.c	/^struct kvm_pit *kvm_create_pit(struct kvm *kvm, u32 flags)$/;"	f
kvm_current_mmio_generation	mmu.c	/^static unsigned int kvm_current_mmio_generation(struct kvm *kvm)$/;"	f	file:
kvm_define_shared_msr	x86.c	/^EXPORT_SYMBOL_GPL(kvm_define_shared_msr);$/;"	v
kvm_define_shared_msr	x86.c	/^void kvm_define_shared_msr(unsigned slot, u32 msr)$/;"	f
kvm_del_async_pf_gfn	x86.c	/^static void kvm_del_async_pf_gfn(struct kvm_vcpu *vcpu, gfn_t gfn)$/;"	f	file:
kvm_deliver_pmi	pmu.c	/^void kvm_deliver_pmi(struct kvm_vcpu *vcpu)$/;"	f
kvm_destroy_pic	i8259.c	/^void kvm_destroy_pic(struct kvm *kvm)$/;"	f
kvm_dev_ioctl_get_cpuid	cpuid.c	/^int kvm_dev_ioctl_get_cpuid(struct kvm_cpuid2 *cpuid,$/;"	f
kvm_disable_tdp	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_disable_tdp);$/;"	v
kvm_disable_tdp	mmu.c	/^void kvm_disable_tdp(void)$/;"	f
kvm_dr6_fixed	x86.c	/^static u64 kvm_dr6_fixed(struct kvm_vcpu *vcpu)$/;"	f	file:
kvm_emulate_cpuid	cpuid.c	/^EXPORT_SYMBOL_GPL(kvm_emulate_cpuid);$/;"	v
kvm_emulate_cpuid	cpuid.c	/^void kvm_emulate_cpuid(struct kvm_vcpu *vcpu)$/;"	f
kvm_emulate_halt	x86.c	/^EXPORT_SYMBOL_GPL(kvm_emulate_halt);$/;"	v
kvm_emulate_halt	x86.c	/^int kvm_emulate_halt(struct kvm_vcpu *vcpu)$/;"	f
kvm_emulate_hypercall	x86.c	/^EXPORT_SYMBOL_GPL(kvm_emulate_hypercall);$/;"	v
kvm_emulate_hypercall	x86.c	/^int kvm_emulate_hypercall(struct kvm_vcpu *vcpu)$/;"	f
kvm_emulate_wbinvd	x86.c	/^EXPORT_SYMBOL_GPL(kvm_emulate_wbinvd);$/;"	v
kvm_emulate_wbinvd	x86.c	/^int kvm_emulate_wbinvd(struct kvm_vcpu *vcpu)$/;"	f
kvm_enable_efer_bits	x86.c	/^EXPORT_SYMBOL_GPL(kvm_enable_efer_bits);$/;"	v
kvm_enable_efer_bits	x86.c	/^void kvm_enable_efer_bits(u64 mask)$/;"	f
kvm_enable_tdp	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_enable_tdp);$/;"	v
kvm_enable_tdp	mmu.c	/^void kvm_enable_tdp(void)$/;"	f
kvm_event_needs_reinjection	x86.h	/^static inline bool kvm_event_needs_reinjection(struct kvm_vcpu *vcpu)$/;"	f
kvm_exception_is_soft	x86.h	/^static inline bool kvm_exception_is_soft(unsigned int nr)$/;"	f
kvm_exit	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_exit);$/;"	v
kvm_fast_pio_out	x86.c	/^EXPORT_SYMBOL_GPL(kvm_fast_pio_out);$/;"	v
kvm_fast_pio_out	x86.c	/^int kvm_fast_pio_out(struct kvm_vcpu *vcpu, int size, unsigned short port)$/;"	f
kvm_fetch_guest_virt	x86.c	/^static int kvm_fetch_guest_virt(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
kvm_find_async_pf_gfn	x86.c	/^bool kvm_find_async_pf_gfn(struct kvm_vcpu *vcpu, gfn_t gfn)$/;"	f
kvm_find_cpuid_entry	cpuid.c	/^EXPORT_SYMBOL_GPL(kvm_find_cpuid_entry);$/;"	v
kvm_find_cpuid_entry	cpuid.c	/^struct kvm_cpuid_entry2 *kvm_find_cpuid_entry(struct kvm_vcpu *vcpu,$/;"	f
kvm_free_lapic	lapic.c	/^void kvm_free_lapic(struct kvm_vcpu *vcpu)$/;"	f
kvm_free_pit	i8254.c	/^void kvm_free_pit(struct kvm *kvm)$/;"	f
kvm_free_vcpus	x86.c	/^static void kvm_free_vcpus(struct kvm *kvm)$/;"	f	file:
kvm_gen_kvmclock_update	x86.c	/^static void kvm_gen_kvmclock_update(struct kvm_vcpu *v)$/;"	f	file:
kvm_gen_update_masterclock	x86.c	/^static void kvm_gen_update_masterclock(struct kvm *kvm)$/;"	f	file:
kvm_get_apic_base	x86.c	/^EXPORT_SYMBOL_GPL(kvm_get_apic_base);$/;"	v
kvm_get_apic_base	x86.c	/^u64 kvm_get_apic_base(struct kvm_vcpu *vcpu)$/;"	f
kvm_get_apic_interrupt	lapic.c	/^int kvm_get_apic_interrupt(struct kvm_vcpu *vcpu)$/;"	f
kvm_get_cr8	x86.c	/^EXPORT_SYMBOL_GPL(kvm_get_cr8);$/;"	v
kvm_get_cr8	x86.c	/^unsigned long kvm_get_cr8(struct kvm_vcpu *vcpu)$/;"	f
kvm_get_cs_db_l_bits	x86.c	/^EXPORT_SYMBOL_GPL(kvm_get_cs_db_l_bits);$/;"	v
kvm_get_cs_db_l_bits	x86.c	/^void kvm_get_cs_db_l_bits(struct kvm_vcpu *vcpu, int *db, int *l)$/;"	f
kvm_get_dr	x86.c	/^EXPORT_SYMBOL_GPL(kvm_get_dr);$/;"	v
kvm_get_dr	x86.c	/^int kvm_get_dr(struct kvm_vcpu *vcpu, int dr, unsigned long *val)$/;"	f
kvm_get_guest_ip	x86.c	/^static unsigned long kvm_get_guest_ip(void)$/;"	f	file:
kvm_get_guest_memory_type	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_get_guest_memory_type);$/;"	v
kvm_get_guest_memory_type	mmu.c	/^u8 kvm_get_guest_memory_type(struct kvm_vcpu *vcpu, gfn_t gfn)$/;"	f
kvm_get_lapic_tscdeadline_msr	lapic.c	/^u64 kvm_get_lapic_tscdeadline_msr(struct kvm_vcpu *vcpu)$/;"	f
kvm_get_msr	x86.c	/^int kvm_get_msr(struct kvm_vcpu *vcpu, u32 msr_index, u64 *pdata)$/;"	f
kvm_get_msr_common	x86.c	/^EXPORT_SYMBOL_GPL(kvm_get_msr_common);$/;"	v
kvm_get_msr_common	x86.c	/^int kvm_get_msr_common(struct kvm_vcpu *vcpu, u32 msr, u64 *pdata)$/;"	f
kvm_get_rflags	x86.c	/^EXPORT_SYMBOL_GPL(kvm_get_rflags);$/;"	v
kvm_get_rflags	x86.c	/^unsigned long kvm_get_rflags(struct kvm_vcpu *vcpu)$/;"	f
kvm_get_segment	x86.c	/^void kvm_get_segment(struct kvm_vcpu *vcpu,$/;"	f
kvm_get_time_and_clockread	x86.c	/^static bool kvm_get_time_and_clockread(s64 *kernel_ns, cycle_t *cycle_now)$/;"	f	file:
kvm_get_time_scale	x86.c	/^static void kvm_get_time_scale(uint32_t scaled_khz, uint32_t base_khz,$/;"	f	file:
kvm_guest_cbs	x86.c	/^static struct perf_guest_info_callbacks kvm_guest_cbs = {$/;"	v	typeref:struct:perf_guest_info_callbacks	file:
kvm_guest_has_master_clock	x86.c	/^static atomic_t kvm_guest_has_master_clock = ATOMIC_INIT(0);$/;"	v	file:
kvm_guest_time_update	x86.c	/^static int kvm_guest_time_update(struct kvm_vcpu *v)$/;"	f	file:
kvm_handle_bad_page	mmu.c	/^static int kvm_handle_bad_page(struct kvm_vcpu *vcpu, gfn_t gfn, pfn_t pfn)$/;"	f	file:
kvm_handle_hva	mmu.c	/^static int kvm_handle_hva(struct kvm *kvm, unsigned long hva,$/;"	f	file:
kvm_handle_hva_range	mmu.c	/^static int kvm_handle_hva_range(struct kvm *kvm,$/;"	f	file:
kvm_handle_pmu_event	pmu.c	/^void kvm_handle_pmu_event(struct kvm_vcpu *vcpu)$/;"	f
kvm_has_tsc_control	x86.c	/^EXPORT_SYMBOL_GPL(kvm_has_tsc_control);$/;"	v
kvm_has_tsc_control	x86.c	/^bool kvm_has_tsc_control;$/;"	v
kvm_has_zapped_obsolete_pages	mmu.c	/^static bool kvm_has_zapped_obsolete_pages(struct kvm *kvm)$/;"	f	file:
kvm_hv_hypercall	x86.c	/^int kvm_hv_hypercall(struct kvm_vcpu *vcpu)$/;"	f
kvm_hv_hypercall_enabled	x86.c	/^static bool kvm_hv_hypercall_enabled(struct kvm *kvm)$/;"	f	file:
kvm_hv_msr_partition_wide	x86.c	/^static bool kvm_hv_msr_partition_wide(u32 msr)$/;"	f	file:
kvm_hv_vapic_assist_page_enabled	lapic.h	/^static inline bool kvm_hv_vapic_assist_page_enabled(struct kvm_vcpu *vcpu)$/;"	f
kvm_hv_vapic_msr_read	lapic.c	/^int kvm_hv_vapic_msr_read(struct kvm_vcpu *vcpu, u32 reg, u64 *data)$/;"	f
kvm_hv_vapic_msr_write	lapic.c	/^int kvm_hv_vapic_msr_write(struct kvm_vcpu *vcpu, u32 reg, u64 data)$/;"	f
kvm_init_msr_list	x86.c	/^static void kvm_init_msr_list(void)$/;"	f	file:
kvm_init_shadow_ept_mmu	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_init_shadow_ept_mmu);$/;"	v
kvm_init_shadow_ept_mmu	mmu.c	/^void kvm_init_shadow_ept_mmu(struct kvm_vcpu *vcpu, struct kvm_mmu *context,$/;"	f
kvm_init_shadow_mmu	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_init_shadow_mmu);$/;"	v
kvm_init_shadow_mmu	mmu.c	/^void kvm_init_shadow_mmu(struct kvm_vcpu *vcpu, struct kvm_mmu *context)$/;"	f
kvm_inj_virq	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_inj_virq);$/;"	v
kvm_inject_apic_timer_irqs	lapic.c	/^void kvm_inject_apic_timer_irqs(struct kvm_vcpu *vcpu)$/;"	f
kvm_inject_nmi	x86.c	/^EXPORT_SYMBOL_GPL(kvm_inject_nmi);$/;"	v
kvm_inject_nmi	x86.c	/^void kvm_inject_nmi(struct kvm_vcpu *vcpu)$/;"	f
kvm_inject_page_fault	x86.c	/^EXPORT_SYMBOL_GPL(kvm_inject_page_fault);$/;"	v
kvm_inject_page_fault	x86.c	/^void kvm_inject_page_fault(struct kvm_vcpu *vcpu, struct x86_exception *fault)$/;"	f
kvm_inject_pending_timer_irqs	irq.c	/^EXPORT_SYMBOL_GPL(kvm_inject_pending_timer_irqs);$/;"	v
kvm_inject_pending_timer_irqs	irq.c	/^void kvm_inject_pending_timer_irqs(struct kvm_vcpu *vcpu)$/;"	f
kvm_inject_realmode_interrupt	x86.c	/^EXPORT_SYMBOL_GPL(kvm_inject_realmode_interrupt);$/;"	v
kvm_inject_realmode_interrupt	x86.c	/^int kvm_inject_realmode_interrupt(struct kvm_vcpu *vcpu, int irq, int inc_eip)$/;"	f
kvm_invlpga	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_invlpga);$/;"	v
kvm_ioapic_send_eoi	lapic.c	/^static void kvm_ioapic_send_eoi(struct kvm_lapic *apic, int vector)$/;"	f	file:
kvm_irq_delivery_to_apic_fast	lapic.c	/^bool kvm_irq_delivery_to_apic_fast(struct kvm *kvm, struct kvm_lapic *src,$/;"	f
kvm_is_in_guest	x86.c	/^int kvm_is_in_guest(void)$/;"	f
kvm_is_linear_rip	x86.c	/^EXPORT_SYMBOL_GPL(kvm_is_linear_rip);$/;"	v
kvm_is_linear_rip	x86.c	/^bool kvm_is_linear_rip(struct kvm_vcpu *vcpu, unsigned long linear_rip)$/;"	f
kvm_is_user_mode	x86.c	/^static int kvm_is_user_mode(void)$/;"	f	file:
kvm_kpic_state	irq.h	/^struct kvm_kpic_state {$/;"	s
kvm_kpit_channel_state	i8254.h	/^struct kvm_kpit_channel_state {$/;"	s
kvm_kpit_state	i8254.h	/^struct kvm_kpit_state {$/;"	s
kvm_lapic	lapic.h	/^struct kvm_lapic {$/;"	s
kvm_lapic_enable_pv_eoi	lapic.c	/^int kvm_lapic_enable_pv_eoi(struct kvm_vcpu *vcpu, u64 data)$/;"	f
kvm_lapic_enabled	lapic.h	/^static inline int kvm_lapic_enabled(struct kvm_vcpu *vcpu)$/;"	f
kvm_lapic_find_highest_irr	lapic.c	/^int kvm_lapic_find_highest_irr(struct kvm_vcpu *vcpu)$/;"	f
kvm_lapic_get_cr8	lapic.c	/^u64 kvm_lapic_get_cr8(struct kvm_vcpu *vcpu)$/;"	f
kvm_lapic_init	lapic.c	/^void kvm_lapic_init(void)$/;"	f
kvm_lapic_reset	lapic.c	/^void kvm_lapic_reset(struct kvm_vcpu *vcpu)$/;"	f
kvm_lapic_set_base	lapic.c	/^void kvm_lapic_set_base(struct kvm_vcpu *vcpu, u64 value)$/;"	f
kvm_lapic_set_eoi	lapic.c	/^EXPORT_SYMBOL_GPL(kvm_lapic_set_eoi);$/;"	v
kvm_lapic_set_eoi	lapic.c	/^void kvm_lapic_set_eoi(struct kvm_vcpu *vcpu)$/;"	f
kvm_lapic_set_tpr	lapic.c	/^void kvm_lapic_set_tpr(struct kvm_vcpu *vcpu, unsigned long cr8)$/;"	f
kvm_lapic_set_vapic_addr	lapic.c	/^int kvm_lapic_set_vapic_addr(struct kvm_vcpu *vcpu, gpa_t vapic_addr)$/;"	f
kvm_lapic_sync_from_vapic	lapic.c	/^void kvm_lapic_sync_from_vapic(struct kvm_vcpu *vcpu)$/;"	f
kvm_lapic_sync_to_vapic	lapic.c	/^void kvm_lapic_sync_to_vapic(struct kvm_vcpu *vcpu)$/;"	f
kvm_ldttss_desc	svm.c	/^struct kvm_ldttss_desc {$/;"	s	file:
kvm_lmsw	x86.c	/^EXPORT_SYMBOL_GPL(kvm_lmsw);$/;"	v
kvm_lmsw	x86.c	/^void kvm_lmsw(struct kvm_vcpu *vcpu, unsigned long msw)$/;"	f
kvm_load_guest_fpu	x86.c	/^void kvm_load_guest_fpu(struct kvm_vcpu *vcpu)$/;"	f
kvm_load_guest_xcr0	x86.c	/^static void kvm_load_guest_xcr0(struct kvm_vcpu *vcpu)$/;"	f	file:
kvm_machine_check	vmx.c	/^static void kvm_machine_check(void)$/;"	f	file:
kvm_max_guest_tsc_khz	x86.c	/^EXPORT_SYMBOL_GPL(kvm_max_guest_tsc_khz);$/;"	v
kvm_max_guest_tsc_khz	x86.c	/^u32  kvm_max_guest_tsc_khz;$/;"	v
kvm_mmu_alloc_page	mmu.c	/^static struct kvm_mmu_page *kvm_mmu_alloc_page(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_mmu_audit	mmu.c	/^static void kvm_mmu_audit(struct kvm_vcpu *vcpu, int point) { }$/;"	f	file:
kvm_mmu_audit	mmu_audit.c	/^static inline void kvm_mmu_audit(struct kvm_vcpu *vcpu, int point)$/;"	f	file:
kvm_mmu_available_pages	mmu.h	/^static inline unsigned int kvm_mmu_available_pages(struct kvm *kvm)$/;"	f
kvm_mmu_calculate_mmu_pages	mmu.c	/^unsigned int kvm_mmu_calculate_mmu_pages(struct kvm *kvm)$/;"	f
kvm_mmu_change_mmu_pages	mmu.c	/^void kvm_mmu_change_mmu_pages(struct kvm *kvm, unsigned int goal_nr_mmu_pages)$/;"	f
kvm_mmu_commit_zap_page	mmu.c	/^static void kvm_mmu_commit_zap_page(struct kvm *kvm,$/;"	f	file:
kvm_mmu_create	mmu.c	/^int kvm_mmu_create(struct kvm_vcpu *vcpu)$/;"	f
kvm_mmu_destroy	mmu.c	/^void kvm_mmu_destroy(struct kvm_vcpu *vcpu)$/;"	f
kvm_mmu_free_page	mmu.c	/^static void kvm_mmu_free_page(struct kvm_mmu_page *sp)$/;"	f	file:
kvm_mmu_get_page	mmu.c	/^static struct kvm_mmu_page *kvm_mmu_get_page(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_mmu_get_spte_hierarchy	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_mmu_get_spte_hierarchy);$/;"	v
kvm_mmu_get_spte_hierarchy	mmu.c	/^int kvm_mmu_get_spte_hierarchy(struct kvm_vcpu *vcpu, u64 addr, u64 sptes[4])$/;"	f
kvm_mmu_gva_to_gpa_fetch	x86.c	/^ gpa_t kvm_mmu_gva_to_gpa_fetch(struct kvm_vcpu *vcpu, gva_t gva,$/;"	f
kvm_mmu_gva_to_gpa_read	x86.c	/^gpa_t kvm_mmu_gva_to_gpa_read(struct kvm_vcpu *vcpu, gva_t gva,$/;"	f
kvm_mmu_gva_to_gpa_system	x86.c	/^gpa_t kvm_mmu_gva_to_gpa_system(struct kvm_vcpu *vcpu, gva_t gva,$/;"	f
kvm_mmu_gva_to_gpa_write	x86.c	/^gpa_t kvm_mmu_gva_to_gpa_write(struct kvm_vcpu *vcpu, gva_t gva,$/;"	f
kvm_mmu_invalidate_mmio_sptes	mmu.c	/^void kvm_mmu_invalidate_mmio_sptes(struct kvm *kvm)$/;"	f
kvm_mmu_invalidate_zap_all_pages	mmu.c	/^void kvm_mmu_invalidate_zap_all_pages(struct kvm *kvm)$/;"	f
kvm_mmu_invlpg	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_mmu_invlpg);$/;"	v
kvm_mmu_invlpg	mmu.c	/^void kvm_mmu_invlpg(struct kvm_vcpu *vcpu, gva_t gva)$/;"	f
kvm_mmu_load	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_mmu_load);$/;"	v
kvm_mmu_load	mmu.c	/^int kvm_mmu_load(struct kvm_vcpu *vcpu)$/;"	f
kvm_mmu_mark_parents_unsync	mmu.c	/^static void kvm_mmu_mark_parents_unsync(struct kvm_mmu_page *sp)$/;"	f	file:
kvm_mmu_module_exit	mmu.c	/^void kvm_mmu_module_exit(void)$/;"	f
kvm_mmu_module_init	mmu.c	/^int kvm_mmu_module_init(void)$/;"	f
kvm_mmu_new_cr3	mmu.c	/^void kvm_mmu_new_cr3(struct kvm_vcpu *vcpu)$/;"	f
kvm_mmu_page_fault	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_mmu_page_fault);$/;"	v
kvm_mmu_page_fault	mmu.c	/^int kvm_mmu_page_fault(struct kvm_vcpu *vcpu, gva_t cr2, u32 error_code,$/;"	f
kvm_mmu_page_get_gfn	mmu.c	/^static gfn_t kvm_mmu_page_get_gfn(struct kvm_mmu_page *sp, int index)$/;"	f	file:
kvm_mmu_page_set_gfn	mmu.c	/^static void kvm_mmu_page_set_gfn(struct kvm_mmu_page *sp, int index, gfn_t gfn)$/;"	f	file:
kvm_mmu_page_unlink_children	mmu.c	/^static void kvm_mmu_page_unlink_children(struct kvm *kvm,$/;"	f	file:
kvm_mmu_pages	mmu.c	/^struct kvm_mmu_pages {$/;"	s	file:
kvm_mmu_pages_init	mmu.c	/^static void kvm_mmu_pages_init(struct kvm_mmu_page *parent,$/;"	f	file:
kvm_mmu_prepare_zap_page	mmu.c	/^static int kvm_mmu_prepare_zap_page(struct kvm *kvm, struct kvm_mmu_page *sp,$/;"	f	file:
kvm_mmu_pte_write	mmu.c	/^void kvm_mmu_pte_write(struct kvm_vcpu *vcpu, gpa_t gpa,$/;"	f
kvm_mmu_put_page	mmu.c	/^static void kvm_mmu_put_page(struct kvm_mmu_page *sp, u64 *parent_pte)$/;"	f	file:
kvm_mmu_reload	mmu.h	/^static inline int kvm_mmu_reload(struct kvm_vcpu *vcpu)$/;"	f
kvm_mmu_reset_context	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_mmu_reset_context);$/;"	v
kvm_mmu_reset_context	mmu.c	/^void kvm_mmu_reset_context(struct kvm_vcpu *vcpu)$/;"	f
kvm_mmu_set_mask_ptes	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_mmu_set_mask_ptes);$/;"	v
kvm_mmu_set_mask_ptes	mmu.c	/^void kvm_mmu_set_mask_ptes(u64 user_mask, u64 accessed_mask,$/;"	f
kvm_mmu_set_mmio_spte_mask	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_mmu_set_mmio_spte_mask);$/;"	v
kvm_mmu_set_mmio_spte_mask	mmu.c	/^void kvm_mmu_set_mmio_spte_mask(u64 mmio_mask)$/;"	f
kvm_mmu_setup	mmu.c	/^void kvm_mmu_setup(struct kvm_vcpu *vcpu)$/;"	f
kvm_mmu_slot_remove_write_access	mmu.c	/^void kvm_mmu_slot_remove_write_access(struct kvm *kvm, int slot)$/;"	f
kvm_mmu_sync_roots	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_mmu_sync_roots);$/;"	v
kvm_mmu_sync_roots	mmu.c	/^void kvm_mmu_sync_roots(struct kvm_vcpu *vcpu)$/;"	f
kvm_mmu_trace_pferr_flags	mmutrace.h	47;"	d
kvm_mmu_unlink_parents	mmu.c	/^static void kvm_mmu_unlink_parents(struct kvm *kvm, struct kvm_mmu_page *sp)$/;"	f	file:
kvm_mmu_unload	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_mmu_unload);$/;"	v
kvm_mmu_unload	mmu.c	/^void kvm_mmu_unload(struct kvm_vcpu *vcpu)$/;"	f
kvm_mmu_unprotect_page	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_mmu_unprotect_page);$/;"	v
kvm_mmu_unprotect_page	mmu.c	/^int kvm_mmu_unprotect_page(struct kvm *kvm, gfn_t gfn)$/;"	f
kvm_mmu_unprotect_page_virt	mmu.c	/^EXPORT_SYMBOL_GPL(kvm_mmu_unprotect_page_virt);$/;"	v
kvm_mmu_unprotect_page_virt	mmu.c	/^int kvm_mmu_unprotect_page_virt(struct kvm_vcpu *vcpu, gva_t gva)$/;"	f
kvm_mmu_write_protect_pt_masked	mmu.c	/^void kvm_mmu_write_protect_pt_masked(struct kvm *kvm,$/;"	f
kvm_mod_used_mmu_pages	mmu.c	/^static inline void kvm_mod_used_mmu_pages(struct kvm *kvm, int nr)$/;"	f	file:
kvm_msr	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_msr);$/;"	v
kvm_mtrr_valid	x86.c	/^EXPORT_SYMBOL_GPL(kvm_mtrr_valid);$/;"	v
kvm_mtrr_valid	x86.c	/^bool kvm_mtrr_valid(struct kvm_vcpu *vcpu, u32 msr, u64 data)$/;"	f
kvm_multiple_exception	x86.c	/^static void kvm_multiple_exception(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_nested_intercepts	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_nested_intercepts);$/;"	v
kvm_nested_intr_vmexit	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_nested_intr_vmexit);$/;"	v
kvm_nested_vmexit	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_nested_vmexit);$/;"	v
kvm_nested_vmexit_inject	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_nested_vmexit_inject);$/;"	v
kvm_nested_vmrun	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_nested_vmrun);$/;"	v
kvm_on_user_return	x86.c	/^static void kvm_on_user_return(struct user_return_notifier *urn)$/;"	f	file:
kvm_page_fault	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_page_fault);$/;"	v
kvm_page_table_hashfn	mmu.c	/^static unsigned kvm_page_table_hashfn(gfn_t gfn)$/;"	f	file:
kvm_pdptr_read	kvm_cache_regs.h	/^static inline u64 kvm_pdptr_read(struct kvm_vcpu *vcpu, int index)$/;"	f
kvm_perf_overflow	pmu.c	/^static void kvm_perf_overflow(struct perf_event *perf_event,$/;"	f	file:
kvm_perf_overflow_intr	pmu.c	/^static void kvm_perf_overflow_intr(struct perf_event *perf_event,$/;"	f	file:
kvm_pic	irq.h	/^struct kvm_pic {$/;"	s
kvm_pic_clear_all	i8259.c	/^void kvm_pic_clear_all(struct kvm_pic *s, int irq_source_id)$/;"	f
kvm_pic_read_irq	i8259.c	/^int kvm_pic_read_irq(struct kvm *kvm)$/;"	f
kvm_pic_reset	i8259.c	/^void kvm_pic_reset(struct kvm_kpic_state *s)$/;"	f
kvm_pic_set_irq	i8259.c	/^int kvm_pic_set_irq(struct kvm_pic *s, int irq, int irq_source_id, int level)$/;"	f
kvm_pic_update_irq	i8259.c	/^void kvm_pic_update_irq(struct kvm_pic *s)$/;"	f
kvm_pit	i8254.h	/^struct kvm_pit {$/;"	s
kvm_pit_ack_irq	i8254.c	/^static void kvm_pit_ack_irq(struct kvm_irq_ack_notifier *kian)$/;"	f	file:
kvm_pit_load_count	i8254.c	/^void kvm_pit_load_count(struct kvm *kvm, int channel, u32 val, int hpet_legacy_start)$/;"	f
kvm_pit_reset	i8254.c	/^void kvm_pit_reset(struct kvm_pit *pit)$/;"	f
kvm_ple_window	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_ple_window);$/;"	v
kvm_pmu_check_pmc	pmu.c	/^int kvm_pmu_check_pmc(struct kvm_vcpu *vcpu, unsigned pmc)$/;"	f
kvm_pmu_cpuid_update	pmu.c	/^void kvm_pmu_cpuid_update(struct kvm_vcpu *vcpu)$/;"	f
kvm_pmu_destroy	pmu.c	/^void kvm_pmu_destroy(struct kvm_vcpu *vcpu)$/;"	f
kvm_pmu_get_msr	pmu.c	/^int kvm_pmu_get_msr(struct kvm_vcpu *vcpu, u32 index, u64 *data)$/;"	f
kvm_pmu_init	pmu.c	/^void kvm_pmu_init(struct kvm_vcpu *vcpu)$/;"	f
kvm_pmu_msr	pmu.c	/^bool kvm_pmu_msr(struct kvm_vcpu *vcpu, u32 msr)$/;"	f
kvm_pmu_read_pmc	pmu.c	/^int kvm_pmu_read_pmc(struct kvm_vcpu *vcpu, unsigned pmc, u64 *data)$/;"	f
kvm_pmu_reset	pmu.c	/^void kvm_pmu_reset(struct kvm_vcpu *vcpu)$/;"	f
kvm_pmu_set_msr	pmu.c	/^int kvm_pmu_set_msr(struct kvm_vcpu *vcpu, struct msr_data *msr_info)$/;"	f
kvm_propagate_fault	x86.c	/^static bool kvm_propagate_fault(struct kvm_vcpu *vcpu, struct x86_exception *fault)$/;"	f	file:
kvm_put_guest_fpu	x86.c	/^void kvm_put_guest_fpu(struct kvm_vcpu *vcpu)$/;"	f
kvm_put_guest_xcr0	x86.c	/^static void kvm_put_guest_xcr0(struct kvm_vcpu *vcpu)$/;"	f	file:
kvm_pv_enable_async_pf	x86.c	/^static int kvm_pv_enable_async_pf(struct kvm_vcpu *vcpu, u64 data)$/;"	f	file:
kvm_pv_kick_cpu_op	x86.c	/^static void kvm_pv_kick_cpu_op(struct kvm *kvm, unsigned long flags, int apicid)$/;"	f	file:
kvm_queue_exception	x86.c	/^EXPORT_SYMBOL_GPL(kvm_queue_exception);$/;"	v
kvm_queue_exception	x86.c	/^void kvm_queue_exception(struct kvm_vcpu *vcpu, unsigned nr)$/;"	f
kvm_queue_exception_e	x86.c	/^EXPORT_SYMBOL_GPL(kvm_queue_exception_e);$/;"	v
kvm_queue_exception_e	x86.c	/^void kvm_queue_exception_e(struct kvm_vcpu *vcpu, unsigned nr, u32 error_code)$/;"	f
kvm_queue_interrupt	x86.h	/^static inline void kvm_queue_interrupt(struct kvm_vcpu *vcpu, u8 vector,$/;"	f
kvm_rdpmc	x86.c	/^EXPORT_SYMBOL_GPL(kvm_rdpmc);$/;"	v
kvm_rdpmc	x86.c	/^bool kvm_rdpmc(struct kvm_vcpu *vcpu)$/;"	f
kvm_read_cr0	kvm_cache_regs.h	/^static inline ulong kvm_read_cr0(struct kvm_vcpu *vcpu)$/;"	f
kvm_read_cr0_bits	kvm_cache_regs.h	/^static inline ulong kvm_read_cr0_bits(struct kvm_vcpu *vcpu, ulong mask)$/;"	f
kvm_read_cr3	kvm_cache_regs.h	/^static inline ulong kvm_read_cr3(struct kvm_vcpu *vcpu)$/;"	f
kvm_read_cr4	kvm_cache_regs.h	/^static inline ulong kvm_read_cr4(struct kvm_vcpu *vcpu)$/;"	f
kvm_read_cr4_bits	kvm_cache_regs.h	/^static inline ulong kvm_read_cr4_bits(struct kvm_vcpu *vcpu, ulong mask)$/;"	f
kvm_read_edx_eax	kvm_cache_regs.h	/^static inline u64 kvm_read_edx_eax(struct kvm_vcpu *vcpu)$/;"	f
kvm_read_guest_page_mmu	x86.c	/^EXPORT_SYMBOL_GPL(kvm_read_guest_page_mmu);$/;"	v
kvm_read_guest_page_mmu	x86.c	/^int kvm_read_guest_page_mmu(struct kvm_vcpu *vcpu, struct kvm_mmu *mmu,$/;"	f
kvm_read_guest_virt	x86.c	/^EXPORT_SYMBOL_GPL(kvm_read_guest_virt);$/;"	v
kvm_read_guest_virt	x86.c	/^int kvm_read_guest_virt(struct x86_emulate_ctxt *ctxt,$/;"	f
kvm_read_guest_virt_helper	x86.c	/^static int kvm_read_guest_virt_helper(gva_t addr, void *val, unsigned int bytes,$/;"	f	file:
kvm_read_guest_virt_system	x86.c	/^static int kvm_read_guest_virt_system(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
kvm_read_nested_guest_page	x86.c	/^int kvm_read_nested_guest_page(struct kvm_vcpu *vcpu, gfn_t gfn,$/;"	f
kvm_read_tr_base	vmx.c	/^static inline unsigned long kvm_read_tr_base(void)$/;"	f	file:
kvm_register_read	kvm_cache_regs.h	/^static inline unsigned long kvm_register_read(struct kvm_vcpu *vcpu,$/;"	f
kvm_register_readl	x86.h	/^static inline unsigned long kvm_register_readl(struct kvm_vcpu *vcpu,$/;"	f
kvm_register_write	kvm_cache_regs.h	/^static inline void kvm_register_write(struct kvm_vcpu *vcpu,$/;"	f
kvm_register_writel	x86.h	/^static inline void kvm_register_writel(struct kvm_vcpu *vcpu,$/;"	f
kvm_requeue_exception	x86.c	/^EXPORT_SYMBOL_GPL(kvm_requeue_exception);$/;"	v
kvm_requeue_exception	x86.c	/^void kvm_requeue_exception(struct kvm_vcpu *vcpu, unsigned nr)$/;"	f
kvm_requeue_exception_e	x86.c	/^EXPORT_SYMBOL_GPL(kvm_requeue_exception_e);$/;"	v
kvm_requeue_exception_e	x86.c	/^void kvm_requeue_exception_e(struct kvm_vcpu *vcpu, unsigned nr, u32 error_code)$/;"	f
kvm_require_cpl	x86.c	/^EXPORT_SYMBOL_GPL(kvm_require_cpl);$/;"	v
kvm_require_cpl	x86.c	/^bool kvm_require_cpl(struct kvm_vcpu *vcpu, int required_cpl)$/;"	f
kvm_rip_read	kvm_cache_regs.h	/^static inline unsigned long kvm_rip_read(struct kvm_vcpu *vcpu)$/;"	f
kvm_rip_write	kvm_cache_regs.h	/^static inline void kvm_rip_write(struct kvm_vcpu *vcpu, unsigned long val)$/;"	f
kvm_save_segment	vmx.c	/^		struct kvm_save_segment {$/;"	s	struct:vcpu_vmx::__anon3	file:
kvm_send_hwpoison_signal	mmu.c	/^static void kvm_send_hwpoison_signal(unsigned long address, struct task_struct *tsk)$/;"	f	file:
kvm_set_apic_base	x86.c	/^EXPORT_SYMBOL_GPL(kvm_set_apic_base);$/;"	v
kvm_set_apic_base	x86.c	/^int kvm_set_apic_base(struct kvm_vcpu *vcpu, struct msr_data *msr_info)$/;"	f
kvm_set_cr0	x86.c	/^EXPORT_SYMBOL_GPL(kvm_set_cr0);$/;"	v
kvm_set_cr0	x86.c	/^int kvm_set_cr0(struct kvm_vcpu *vcpu, unsigned long cr0)$/;"	f
kvm_set_cr3	x86.c	/^EXPORT_SYMBOL_GPL(kvm_set_cr3);$/;"	v
kvm_set_cr3	x86.c	/^int kvm_set_cr3(struct kvm_vcpu *vcpu, unsigned long cr3)$/;"	f
kvm_set_cr4	x86.c	/^EXPORT_SYMBOL_GPL(kvm_set_cr4);$/;"	v
kvm_set_cr4	x86.c	/^int kvm_set_cr4(struct kvm_vcpu *vcpu, unsigned long cr4)$/;"	f
kvm_set_cr8	x86.c	/^EXPORT_SYMBOL_GPL(kvm_set_cr8);$/;"	v
kvm_set_cr8	x86.c	/^int kvm_set_cr8(struct kvm_vcpu *vcpu, unsigned long cr8)$/;"	f
kvm_set_dr	x86.c	/^EXPORT_SYMBOL_GPL(kvm_set_dr);$/;"	v
kvm_set_dr	x86.c	/^int kvm_set_dr(struct kvm_vcpu *vcpu, int dr, unsigned long val)$/;"	f
kvm_set_guest_paused	x86.c	/^static int kvm_set_guest_paused(struct kvm_vcpu *vcpu)$/;"	f	file:
kvm_set_lapic_tscdeadline_msr	lapic.c	/^void kvm_set_lapic_tscdeadline_msr(struct kvm_vcpu *vcpu, u64 data)$/;"	f
kvm_set_mmio_spte_mask	x86.c	/^static void kvm_set_mmio_spte_mask(void)$/;"	f	file:
kvm_set_msr	x86.c	/^EXPORT_SYMBOL_GPL(kvm_set_msr);$/;"	v
kvm_set_msr	x86.c	/^int kvm_set_msr(struct kvm_vcpu *vcpu, struct msr_data *msr)$/;"	f
kvm_set_msr_common	x86.c	/^EXPORT_SYMBOL_GPL(kvm_set_msr_common);$/;"	v
kvm_set_msr_common	x86.c	/^int kvm_set_msr_common(struct kvm_vcpu *vcpu, struct msr_data *msr_info)$/;"	f
kvm_set_pte_rmapp	mmu.c	/^static int kvm_set_pte_rmapp(struct kvm *kvm, unsigned long *rmapp,$/;"	f	file:
kvm_set_rflags	x86.c	/^EXPORT_SYMBOL_GPL(kvm_set_rflags);$/;"	v
kvm_set_rflags	x86.c	/^void kvm_set_rflags(struct kvm_vcpu *vcpu, unsigned long rflags)$/;"	f
kvm_set_segment	x86.c	/^static void kvm_set_segment(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_set_shared_msr	x86.c	/^EXPORT_SYMBOL_GPL(kvm_set_shared_msr);$/;"	v
kvm_set_shared_msr	x86.c	/^int kvm_set_shared_msr(unsigned slot, u64 value, u64 mask)$/;"	f
kvm_set_spte_hva	mmu.c	/^void kvm_set_spte_hva(struct kvm *kvm, unsigned long hva, pte_t pte)$/;"	f
kvm_set_tsc_khz	x86.c	/^static void kvm_set_tsc_khz(struct kvm_vcpu *vcpu, u32 this_tsc_khz)$/;"	f	file:
kvm_set_xcr	x86.c	/^EXPORT_SYMBOL_GPL(kvm_set_xcr);$/;"	v
kvm_set_xcr	x86.c	/^int kvm_set_xcr(struct kvm_vcpu *vcpu, u32 index, u64 xcr)$/;"	f
kvm_shadow_walk_iterator	mmu.c	/^struct kvm_shadow_walk_iterator {$/;"	s	file:
kvm_shared_msr_cpu_online	x86.c	/^static void kvm_shared_msr_cpu_online(void)$/;"	f	file:
kvm_shared_msr_values	x86.c	/^	struct kvm_shared_msr_values {$/;"	s	struct:kvm_shared_msrs	file:
kvm_shared_msrs	x86.c	/^struct kvm_shared_msrs {$/;"	s	file:
kvm_shared_msrs_global	x86.c	/^struct kvm_shared_msrs_global {$/;"	s	file:
kvm_skinit	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_skinit);$/;"	v
kvm_spurious_fault	x86.c	/^EXPORT_SYMBOL_GPL(kvm_spurious_fault);$/;"	v
kvm_spurious_fault	x86.c	/^asmlinkage __visible void kvm_spurious_fault(void)$/;"	f
kvm_supported_xcr0	cpuid.c	/^u64 kvm_supported_xcr0(void)$/;"	f
kvm_sync_page	mmu.c	/^static int kvm_sync_page(struct kvm_vcpu *vcpu, struct kvm_mmu_page *sp,$/;"	f	file:
kvm_sync_page_transient	mmu.c	/^static int kvm_sync_page_transient(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_sync_pages	mmu.c	/^static void kvm_sync_pages(struct kvm_vcpu *vcpu,  gfn_t gfn)$/;"	f	file:
kvm_task_switch	x86.c	/^EXPORT_SYMBOL_GPL(kvm_task_switch);$/;"	v
kvm_task_switch	x86.c	/^int kvm_task_switch(struct kvm_vcpu *vcpu, u16 tss_selector, int idt_index,$/;"	f
kvm_test_age_hva	mmu.c	/^int kvm_test_age_hva(struct kvm *kvm, unsigned long hva)$/;"	f
kvm_test_age_rmapp	mmu.c	/^static int kvm_test_age_rmapp(struct kvm *kvm, unsigned long *rmapp,$/;"	f	file:
kvm_timer	lapic.h	/^struct kvm_timer {$/;"	s
kvm_timer_init	x86.c	/^static void kvm_timer_init(void)$/;"	f	file:
kvm_total_used_mmu_pages	mmu.c	/^static struct percpu_counter kvm_total_used_mmu_pages;$/;"	v	typeref:struct:percpu_counter	file:
kvm_trace_sym_exc	trace.h	249;"	d
kvm_trace_symbol_apic	trace.h	161;"	d
kvm_trace_symbol_emul_flags	trace.h	673;"	d
kvm_track_tsc_matching	x86.c	/^void kvm_track_tsc_matching(struct kvm_vcpu *vcpu)$/;"	f
kvm_unlink_unsync_page	mmu.c	/^static void kvm_unlink_unsync_page(struct kvm *kvm, struct kvm_mmu_page *sp)$/;"	f	file:
kvm_unload_vcpu_mmu	x86.c	/^static void kvm_unload_vcpu_mmu(struct kvm_vcpu *vcpu)$/;"	f	file:
kvm_unmap_hva	mmu.c	/^int kvm_unmap_hva(struct kvm *kvm, unsigned long hva)$/;"	f
kvm_unmap_hva_range	mmu.c	/^int kvm_unmap_hva_range(struct kvm *kvm, unsigned long start, unsigned long end)$/;"	f
kvm_unmap_rmapp	mmu.c	/^static int kvm_unmap_rmapp(struct kvm *kvm, unsigned long *rmapp,$/;"	f	file:
kvm_unsync_pages	mmu.c	/^static void kvm_unsync_pages(struct kvm_vcpu *vcpu,  gfn_t gfn)$/;"	f	file:
kvm_update_cpuid	cpuid.c	/^int kvm_update_cpuid(struct kvm_vcpu *vcpu)$/;"	f
kvm_update_dr6	x86.c	/^static void kvm_update_dr6(struct kvm_vcpu *vcpu)$/;"	f	file:
kvm_update_dr7	x86.c	/^static void kvm_update_dr7(struct kvm_vcpu *vcpu)$/;"	f	file:
kvm_valid_efer	x86.c	/^EXPORT_SYMBOL_GPL(kvm_valid_efer);$/;"	v
kvm_valid_efer	x86.c	/^bool kvm_valid_efer(struct kvm_vcpu *vcpu, u64 efer)$/;"	f
kvm_vcpu_check_breakpoint	x86.c	/^static bool kvm_vcpu_check_breakpoint(struct kvm_vcpu *vcpu, int *r)$/;"	f	file:
kvm_vcpu_check_hw_bp	x86.c	/^static int kvm_vcpu_check_hw_bp(unsigned long addr, u32 type, u32 dr7,$/;"	f	file:
kvm_vcpu_check_singlestep	x86.c	/^static void kvm_vcpu_check_singlestep(struct kvm_vcpu *vcpu, unsigned long rflags, int *r)$/;"	f	file:
kvm_vcpu_compatible	x86.c	/^bool kvm_vcpu_compatible(struct kvm_vcpu *vcpu)$/;"	f
kvm_vcpu_deliver_sipi_vector	x86.c	/^void kvm_vcpu_deliver_sipi_vector(struct kvm_vcpu *vcpu, unsigned int vector)$/;"	f
kvm_vcpu_flush_tlb	x86.c	/^static void kvm_vcpu_flush_tlb(struct kvm_vcpu *vcpu)$/;"	f	file:
kvm_vcpu_has_lapic	lapic.h	/^static inline bool kvm_vcpu_has_lapic(struct kvm_vcpu *vcpu)$/;"	f
kvm_vcpu_ioctl_get_cpuid2	cpuid.c	/^int kvm_vcpu_ioctl_get_cpuid2(struct kvm_vcpu *vcpu,$/;"	f
kvm_vcpu_ioctl_get_lapic	x86.c	/^static int kvm_vcpu_ioctl_get_lapic(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_interrupt	x86.c	/^static int kvm_vcpu_ioctl_interrupt(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_nmi	x86.c	/^static int kvm_vcpu_ioctl_nmi(struct kvm_vcpu *vcpu)$/;"	f	file:
kvm_vcpu_ioctl_set_cpuid	cpuid.c	/^int kvm_vcpu_ioctl_set_cpuid(struct kvm_vcpu *vcpu,$/;"	f
kvm_vcpu_ioctl_set_cpuid2	cpuid.c	/^int kvm_vcpu_ioctl_set_cpuid2(struct kvm_vcpu *vcpu,$/;"	f
kvm_vcpu_ioctl_set_lapic	x86.c	/^static int kvm_vcpu_ioctl_set_lapic(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_x86_get_debugregs	x86.c	/^static void kvm_vcpu_ioctl_x86_get_debugregs(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_x86_get_vcpu_events	x86.c	/^static void kvm_vcpu_ioctl_x86_get_vcpu_events(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_x86_get_xcrs	x86.c	/^static void kvm_vcpu_ioctl_x86_get_xcrs(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_x86_get_xsave	x86.c	/^static void kvm_vcpu_ioctl_x86_get_xsave(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_x86_set_debugregs	x86.c	/^static int kvm_vcpu_ioctl_x86_set_debugregs(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_x86_set_mce	x86.c	/^static int kvm_vcpu_ioctl_x86_set_mce(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_x86_set_vcpu_events	x86.c	/^static int kvm_vcpu_ioctl_x86_set_vcpu_events(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_x86_set_xcrs	x86.c	/^static int kvm_vcpu_ioctl_x86_set_xcrs(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_x86_set_xsave	x86.c	/^static int kvm_vcpu_ioctl_x86_set_xsave(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_ioctl_x86_setup_mce	x86.c	/^static int kvm_vcpu_ioctl_x86_setup_mce(struct kvm_vcpu *vcpu,$/;"	f	file:
kvm_vcpu_reload_apic_access_page	x86.c	/^EXPORT_SYMBOL_GPL(kvm_vcpu_reload_apic_access_page);$/;"	v
kvm_vcpu_reload_apic_access_page	x86.c	/^void kvm_vcpu_reload_apic_access_page(struct kvm_vcpu *vcpu)$/;"	f
kvm_vcpu_reset	x86.c	/^void kvm_vcpu_reset(struct kvm_vcpu *vcpu)$/;"	f
kvm_vm_ioctl_check_extension	x86.c	/^int kvm_vm_ioctl_check_extension(struct kvm *kvm, long ext)$/;"	f
kvm_vm_ioctl_get_dirty_log	x86.c	/^int kvm_vm_ioctl_get_dirty_log(struct kvm *kvm, struct kvm_dirty_log *log)$/;"	f
kvm_vm_ioctl_get_irqchip	x86.c	/^static int kvm_vm_ioctl_get_irqchip(struct kvm *kvm, struct kvm_irqchip *chip)$/;"	f	file:
kvm_vm_ioctl_get_nr_mmu_pages	x86.c	/^static int kvm_vm_ioctl_get_nr_mmu_pages(struct kvm *kvm)$/;"	f	file:
kvm_vm_ioctl_get_pit	x86.c	/^static int kvm_vm_ioctl_get_pit(struct kvm *kvm, struct kvm_pit_state *ps)$/;"	f	file:
kvm_vm_ioctl_get_pit2	x86.c	/^static int kvm_vm_ioctl_get_pit2(struct kvm *kvm, struct kvm_pit_state2 *ps)$/;"	f	file:
kvm_vm_ioctl_irq_line	x86.c	/^int kvm_vm_ioctl_irq_line(struct kvm *kvm, struct kvm_irq_level *irq_event,$/;"	f
kvm_vm_ioctl_reinject	x86.c	/^static int kvm_vm_ioctl_reinject(struct kvm *kvm,$/;"	f	file:
kvm_vm_ioctl_set_identity_map_addr	x86.c	/^static int kvm_vm_ioctl_set_identity_map_addr(struct kvm *kvm,$/;"	f	file:
kvm_vm_ioctl_set_irqchip	x86.c	/^static int kvm_vm_ioctl_set_irqchip(struct kvm *kvm, struct kvm_irqchip *chip)$/;"	f	file:
kvm_vm_ioctl_set_nr_mmu_pages	x86.c	/^static int kvm_vm_ioctl_set_nr_mmu_pages(struct kvm *kvm,$/;"	f	file:
kvm_vm_ioctl_set_pit	x86.c	/^static int kvm_vm_ioctl_set_pit(struct kvm *kvm, struct kvm_pit_state *ps)$/;"	f	file:
kvm_vm_ioctl_set_pit2	x86.c	/^static int kvm_vm_ioctl_set_pit2(struct kvm *kvm, struct kvm_pit_state2 *ps)$/;"	f	file:
kvm_vm_ioctl_set_tss_addr	x86.c	/^static int kvm_vm_ioctl_set_tss_addr(struct kvm *kvm, unsigned long addr)$/;"	f	file:
kvm_vmx_exit_handlers	vmx.c	/^static int (*const kvm_vmx_exit_handlers[])(struct kvm_vcpu *vcpu) = {$/;"	v	file:
kvm_vmx_max_exit_handlers	vmx.c	/^static const int kvm_vmx_max_exit_handlers =$/;"	v	file:
kvm_vmx_segment_field	vmx.c	/^static const struct kvm_vmx_segment_field {$/;"	s	file:
kvm_vmx_segment_fields	vmx.c	/^} kvm_vmx_segment_fields[] = {$/;"	v	typeref:struct:kvm_vmx_segment_field	file:
kvm_write_guest_virt_system	x86.c	/^EXPORT_SYMBOL_GPL(kvm_write_guest_virt_system);$/;"	v
kvm_write_guest_virt_system	x86.c	/^int kvm_write_guest_virt_system(struct x86_emulate_ctxt *ctxt,$/;"	f
kvm_write_tsc	x86.c	/^EXPORT_SYMBOL_GPL(kvm_write_tsc);$/;"	v
kvm_write_tsc	x86.c	/^void kvm_write_tsc(struct kvm_vcpu *vcpu, struct msr_data *msr)$/;"	f
kvm_write_tsc_offset	x86.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_write_tsc_offset);$/;"	v
kvm_write_wall_clock	x86.c	/^static void kvm_write_wall_clock(struct kvm *kvm, gpa_t wall_clock)$/;"	f	file:
kvm_x2apic_msr_read	lapic.c	/^int kvm_x2apic_msr_read(struct kvm_vcpu *vcpu, u32 msr, u64 *data)$/;"	f
kvm_x2apic_msr_write	lapic.c	/^int kvm_x2apic_msr_write(struct kvm_vcpu *vcpu, u32 msr, u64 data)$/;"	f
kvm_x86_ops	x86.c	/^EXPORT_SYMBOL_GPL(kvm_x86_ops);$/;"	v
kvm_x86_ops	x86.c	/^struct kvm_x86_ops *kvm_x86_ops;$/;"	v	typeref:struct:kvm_x86_ops
kvm_zap_obsolete_pages	mmu.c	/^static void kvm_zap_obsolete_pages(struct kvm *kvm)$/;"	f	file:
kvmclock_cpu_notifier	x86.c	/^static int kvmclock_cpu_notifier(struct notifier_block *nfb,$/;"	f	file:
kvmclock_cpu_notifier_block	x86.c	/^static struct notifier_block kvmclock_cpu_notifier_block = {$/;"	v	typeref:struct:notifier_block	file:
kvmclock_cpufreq_notifier	x86.c	/^static int kvmclock_cpufreq_notifier(struct notifier_block *nb, unsigned long val,$/;"	f	file:
kvmclock_cpufreq_notifier_block	x86.c	/^static struct notifier_block kvmclock_cpufreq_notifier_block = {$/;"	v	typeref:struct:notifier_block	file:
kvmclock_reset	x86.c	/^static void kvmclock_reset(struct kvm_vcpu *vcpu)$/;"	f	file:
kvmclock_sync_fn	x86.c	/^static void kvmclock_sync_fn(struct work_struct *work)$/;"	f	file:
kvmclock_update_fn	x86.c	/^static void kvmclock_update_fn(struct work_struct *work)$/;"	f	file:
lapic_is_periodic	lapic.c	/^static bool lapic_is_periodic(struct kvm_lapic *apic)$/;"	f	file:
lapic_timer	lapic.h	/^	struct kvm_timer lapic_timer;$/;"	m	struct:kvm_lapic	typeref:struct:kvm_lapic::kvm_timer
last_irr	irq.h	/^	u8 last_irr;	\/* edge detection *\/$/;"	m	struct:kvm_kpic_state
latched_count	i8254.h	/^	u16 latched_count;$/;"	m	struct:kvm_kpit_channel_state
launch_state	vmx.c	/^	u32 launch_state; \/* set to 0 by VMCLEAR, to 1 by VMLAUNCH *\/$/;"	m	struct:vmcs12	file:
launched	vmx.c	/^	int launched;$/;"	m	struct:loaded_vmcs	file:
ldt	svm.c	/^		u16 ldt;$/;"	m	struct:vcpu_svm::__anon6	file:
ldt	tss.h	/^	u16 ldt;$/;"	m	struct:tss_segment_16
ldt_sel	vmx.c	/^		u16           fs_sel, gs_sel, ldt_sel;$/;"	m	struct:vcpu_vmx::__anon1	file:
ldt_selector	tss.h	/^	u32 ldt_selector;$/;"	m	struct:tss_segment_32
ldtr_valid	vmx.c	/^static bool ldtr_valid(struct kvm_vcpu *vcpu)$/;"	f	file:
leave_guest_mode	kvm_cache_regs.h	/^static inline void leave_guest_mode(struct kvm_vcpu *vcpu)$/;"	f
level	mmu.c	/^	int level;$/;"	m	struct:kvm_shadow_walk_iterator	file:
level	paging_tmpl.h	/^	int level;$/;"	m	struct:guest_walker
limit	vmx.c	/^			u32 limit;$/;"	m	struct:vcpu_vmx::__anon3::kvm_save_segment	file:
limit	vmx.c	/^	unsigned limit;$/;"	m	struct:kvm_vmx_segment_field	file:
limit0	svm.c	/^	u16 limit0;$/;"	m	struct:kvm_ldttss_desc	file:
limit1	svm.c	/^	unsigned limit1:4, zero0:3, g:1, base2:8;$/;"	m	struct:kvm_ldttss_desc	file:
linearize	emulate.c	/^static int linearize(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
link_shadow_page	mmu.c	/^static void link_shadow_page(u64 *sptep, struct kvm_mmu_page *sp, bool accessed)$/;"	f	file:
list	vmx.c	/^	struct list_head list;$/;"	m	struct:vmcs02_list	typeref:struct:vmcs02_list::list_head	file:
load_pdptrs	x86.c	/^EXPORT_SYMBOL_GPL(load_pdptrs);$/;"	v
load_pdptrs	x86.c	/^int load_pdptrs(struct kvm_vcpu *vcpu, struct kvm_mmu *mmu, unsigned long cr3)$/;"	f
load_segment_descriptor	emulate.c	/^static int load_segment_descriptor(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
load_state_from_tss16	emulate.c	/^static int load_state_from_tss16(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
load_state_from_tss32	emulate.c	/^static int load_state_from_tss32(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
load_vmcs12_host_state	vmx.c	/^static void load_vmcs12_host_state(struct kvm_vcpu *vcpu,$/;"	f	file:
load_xsave	x86.c	/^static void load_xsave(struct kvm_vcpu *vcpu, u8 *src)$/;"	f	file:
loaded	vmx.c	/^		int           loaded;$/;"	m	struct:vcpu_vmx::__anon1	file:
loaded_vmcs	vmx.c	/^	struct loaded_vmcs   *loaded_vmcs;$/;"	m	struct:vcpu_vmx	typeref:struct:vcpu_vmx::loaded_vmcs	file:
loaded_vmcs	vmx.c	/^struct loaded_vmcs {$/;"	s	file:
loaded_vmcs_clear	vmx.c	/^static void loaded_vmcs_clear(struct loaded_vmcs *loaded_vmcs)$/;"	f	file:
loaded_vmcs_init	vmx.c	/^static inline void loaded_vmcs_init(struct loaded_vmcs *loaded_vmcs)$/;"	f	file:
loaded_vmcss_on_cpu_link	vmx.c	/^	struct list_head loaded_vmcss_on_cpu_link;$/;"	m	struct:loaded_vmcs	typeref:struct:loaded_vmcs::list_head	file:
lock	i8254.h	/^	struct mutex lock;$/;"	m	struct:kvm_kpit_state	typeref:struct:kvm_kpit_state::mutex
lock	irq.h	/^	spinlock_t lock;$/;"	m	struct:kvm_pic
lpage_info_slot	mmu.c	/^static struct kvm_lpage_info *lpage_info_slot(gfn_t gfn,$/;"	f	file:
make_mmu_pages_available	mmu.c	/^static void make_mmu_pages_available(struct kvm_vcpu *vcpu)$/;"	f	file:
mapping_level	mmu.c	/^static int mapping_level(struct kvm_vcpu *vcpu, gfn_t large_gfn)$/;"	f	file:
mapping_level_dirty_bitmap	mmu.c	/^static bool mapping_level_dirty_bitmap(struct kvm_vcpu *vcpu, gfn_t large_gfn)$/;"	f	file:
mark_all_clean	svm.c	/^static inline void mark_all_clean(struct vmcb *vmcb)$/;"	f	file:
mark_all_dirty	svm.c	/^static inline void mark_all_dirty(struct vmcb *vmcb)$/;"	f	file:
mark_dirty	svm.c	/^static inline void mark_dirty(struct vmcb *vmcb, int bit)$/;"	f	file:
mark_mmio_spte	mmu.c	/^static void mark_mmio_spte(struct kvm *kvm, u64 *sptep, u64 gfn,$/;"	f	file:
mark_unsync	mmu.c	/^static void mark_unsync(u64 *spte)$/;"	f	file:
mask	vmx.c	/^	u64 mask;$/;"	m	struct:shared_msr_entry	file:
mask	x86.c	/^		cycle_t	mask;$/;"	m	struct:pvclock_gtod_data::__anon4	file:
mask_notifier	i8254.h	/^	struct kvm_irq_mask_notifier mask_notifier;$/;"	m	struct:kvm_pit	typeref:struct:kvm_pit::kvm_irq_mask_notifier
masked_increment	emulate.c	/^static void masked_increment(ulong *reg, ulong mask, int inc)$/;"	f	file:
max_asid	svm.c	/^	u32 max_asid;$/;"	m	struct:svm_cpu_data	file:
max_level	paging_tmpl.h	/^	unsigned max_level;$/;"	m	struct:guest_walker
max_shadow_read_only_fields	vmx.c	/^static int max_shadow_read_only_fields =$/;"	v	file:
max_shadow_read_write_fields	vmx.c	/^static int max_shadow_read_write_fields =$/;"	v	file:
max_tsc_khz	x86.c	/^unsigned long max_tsc_khz;$/;"	v
max_vmcs_field	vmx.c	/^static const int max_vmcs_field = ARRAY_SIZE(vmcs_field_to_offset_table);$/;"	v	file:
mc_interception	svm.c	/^static int mc_interception(struct vcpu_svm *svm)$/;"	f	file:
min_timer_period_us	x86.c	/^unsigned int min_timer_period_us = 500;$/;"	v
mk_cr_64	x86.c	/^static u64 mk_cr_64(u64 curr_cr, u32 new_val)$/;"	f	file:
mmu_alloc_direct_roots	mmu.c	/^static int mmu_alloc_direct_roots(struct kvm_vcpu *vcpu)$/;"	f	file:
mmu_alloc_pte_list_desc	mmu.c	/^static struct pte_list_desc *mmu_alloc_pte_list_desc(struct kvm_vcpu *vcpu)$/;"	f	file:
mmu_alloc_roots	mmu.c	/^static int mmu_alloc_roots(struct kvm_vcpu *vcpu)$/;"	f	file:
mmu_alloc_shadow_roots	mmu.c	/^static int mmu_alloc_shadow_roots(struct kvm_vcpu *vcpu)$/;"	f	file:
mmu_audit	mmu_audit.c	/^static bool mmu_audit;$/;"	v	file:
mmu_audit_disable	mmu.c	/^static void mmu_audit_disable(void) { }$/;"	f	file:
mmu_audit_disable	mmu_audit.c	/^static void mmu_audit_disable(void)$/;"	f	file:
mmu_audit_enable	mmu_audit.c	/^static void mmu_audit_enable(void)$/;"	f	file:
mmu_audit_key	mmu_audit.c	/^static struct static_key mmu_audit_key;$/;"	v	typeref:struct:static_key	file:
mmu_audit_set	mmu_audit.c	/^static int mmu_audit_set(const char *val, const struct kernel_param *kp)$/;"	f	file:
mmu_check_root	mmu.c	/^static int mmu_check_root(struct kvm_vcpu *vcpu, gfn_t root_gfn)$/;"	f	file:
mmu_destroy_caches	mmu.c	/^static void mmu_destroy_caches(void)$/;"	f	file:
mmu_free_memory_cache	mmu.c	/^static void mmu_free_memory_cache(struct kvm_mmu_memory_cache *mc,$/;"	f	file:
mmu_free_memory_cache_page	mmu.c	/^static void mmu_free_memory_cache_page(struct kvm_mmu_memory_cache *mc)$/;"	f	file:
mmu_free_memory_caches	mmu.c	/^static void mmu_free_memory_caches(struct kvm_vcpu *vcpu)$/;"	f	file:
mmu_free_pte_list_desc	mmu.c	/^static void mmu_free_pte_list_desc(struct pte_list_desc *pte_list_desc)$/;"	f	file:
mmu_free_roots	mmu.c	/^static void mmu_free_roots(struct kvm_vcpu *vcpu)$/;"	f	file:
mmu_is_nested	x86.h	/^static inline bool mmu_is_nested(struct kvm_vcpu *vcpu)$/;"	f
mmu_memory_cache_alloc	mmu.c	/^static void *mmu_memory_cache_alloc(struct kvm_mmu_memory_cache *mc)$/;"	f	file:
mmu_memory_cache_free_objects	mmu.c	/^static int mmu_memory_cache_free_objects(struct kvm_mmu_memory_cache *cache)$/;"	f	file:
mmu_need_write_protect	mmu.c	/^static int mmu_need_write_protect(struct kvm_vcpu *vcpu, gfn_t gfn,$/;"	f	file:
mmu_page_add_parent_pte	mmu.c	/^static void mmu_page_add_parent_pte(struct kvm_vcpu *vcpu,$/;"	f	file:
mmu_page_and_offset	mmu.c	/^	struct mmu_page_and_offset {$/;"	s	struct:kvm_mmu_pages	file:
mmu_page_header_cache	mmu.c	/^static struct kmem_cache *mmu_page_header_cache;$/;"	v	typeref:struct:kmem_cache	file:
mmu_page_path	mmu.c	/^struct mmu_page_path {$/;"	s	file:
mmu_page_remove_parent_pte	mmu.c	/^static void mmu_page_remove_parent_pte(struct kvm_mmu_page *sp,$/;"	f	file:
mmu_page_zap_pte	mmu.c	/^static bool mmu_page_zap_pte(struct kvm *kvm, struct kvm_mmu_page *sp,$/;"	f	file:
mmu_pages_add	mmu.c	/^static int mmu_pages_add(struct kvm_mmu_pages *pvec, struct kvm_mmu_page *sp,$/;"	f	file:
mmu_pages_clear_parents	mmu.c	/^static void mmu_pages_clear_parents(struct mmu_page_path *parents)$/;"	f	file:
mmu_pages_next	mmu.c	/^static int mmu_pages_next(struct kvm_mmu_pages *pvec,$/;"	f	file:
mmu_pte_write_fetch_gpte	mmu.c	/^static u64 mmu_pte_write_fetch_gpte(struct kvm_vcpu *vcpu, gpa_t *gpa,$/;"	f	file:
mmu_pte_write_flush_tlb	mmu.c	/^static void mmu_pte_write_flush_tlb(struct kvm_vcpu *vcpu, bool zap_page,$/;"	f	file:
mmu_pte_write_new_pte	mmu.c	/^static void mmu_pte_write_new_pte(struct kvm_vcpu *vcpu,$/;"	f	file:
mmu_set_spte	mmu.c	/^static void mmu_set_spte(struct kvm_vcpu *vcpu, u64 *sptep,$/;"	f	file:
mmu_shrink_count	mmu.c	/^mmu_shrink_count(struct shrinker *shrink, struct shrink_control *sc)$/;"	f	file:
mmu_shrink_scan	mmu.c	/^mmu_shrink_scan(struct shrinker *shrink, struct shrink_control *sc)$/;"	f	file:
mmu_shrinker	mmu.c	/^static struct shrinker mmu_shrinker = {$/;"	v	typeref:struct:shrinker	file:
mmu_spte_clear_no_track	mmu.c	/^static void mmu_spte_clear_no_track(u64 *sptep)$/;"	f	file:
mmu_spte_clear_track_bits	mmu.c	/^static int mmu_spte_clear_track_bits(u64 *sptep)$/;"	f	file:
mmu_spte_get_lockless	mmu.c	/^static u64 mmu_spte_get_lockless(u64 *sptep)$/;"	f	file:
mmu_spte_set	mmu.c	/^static void mmu_spte_set(u64 *sptep, u64 new_spte)$/;"	f	file:
mmu_spte_update	mmu.c	/^static bool mmu_spte_update(u64 *sptep, u64 new_spte)$/;"	f	file:
mmu_spte_walk	mmu_audit.c	/^static void mmu_spte_walk(struct kvm_vcpu *vcpu, inspect_spte_fn fn)$/;"	f	file:
mmu_sync_children	mmu.c	/^static void mmu_sync_children(struct kvm_vcpu *vcpu,$/;"	f	file:
mmu_sync_roots	mmu.c	/^static void mmu_sync_roots(struct kvm_vcpu *vcpu)$/;"	f	file:
mmu_topup_memory_cache	mmu.c	/^static int mmu_topup_memory_cache(struct kvm_mmu_memory_cache *cache,$/;"	f	file:
mmu_topup_memory_cache_page	mmu.c	/^static int mmu_topup_memory_cache_page(struct kvm_mmu_memory_cache *cache,$/;"	f	file:
mmu_topup_memory_caches	mmu.c	/^static int mmu_topup_memory_caches(struct kvm_vcpu *vcpu)$/;"	f	file:
mmu_unsync_walk	mmu.c	/^static int mmu_unsync_walk(struct kvm_mmu_page *sp,$/;"	f	file:
mmu_zap_unsync_children	mmu.c	/^static int mmu_zap_unsync_children(struct kvm *kvm,$/;"	f	file:
mod012	emulate.c	/^	struct opcode mod012[8];$/;"	m	struct:group_dual	typeref:struct:group_dual::opcode	file:
mod3	emulate.c	/^	struct opcode mod3[8];$/;"	m	struct:group_dual	typeref:struct:group_dual::opcode	file:
mod_64	i8254.c	43;"	d	file:
mod_64	i8254.c	45;"	d	file:
mod_64	lapic.c	45;"	d	file:
mod_64	lapic.c	47;"	d	file:
mode	i8254.h	/^	u8 mode;$/;"	m	struct:kvm_kpit_channel_state
monitor_interception	svm.c	/^static int monitor_interception(struct vcpu_svm *svm)$/;"	f	file:
more	mmu.c	/^	struct pte_list_desc *more;$/;"	m	struct:pte_list_desc	typeref:struct:pte_list_desc::pte_list_desc	file:
move_msr_up	vmx.c	/^static void move_msr_up(struct vcpu_vmx *vmx, int from, int to)$/;"	f	file:
move_to_next_stateful_cpuid_entry	cpuid.c	/^static int move_to_next_stateful_cpuid_entry(struct kvm_vcpu *vcpu, int i)$/;"	f	file:
msr_autoload	vmx.c	/^	struct msr_autoload {$/;"	s	struct:vcpu_vmx	file:
msr_autoload	vmx.c	/^	} msr_autoload;$/;"	m	struct:vcpu_vmx	typeref:struct:vcpu_vmx::msr_autoload	file:
msr_bitmap	vmx.c	/^	u64 msr_bitmap;$/;"	m	struct:vmcs12	file:
msr_guest_kernel_gs_base	vmx.c	/^	u64 		      msr_guest_kernel_gs_base;$/;"	m	struct:vcpu_vmx	file:
msr_host_bndcfgs	vmx.c	/^		u64           msr_host_bndcfgs;$/;"	m	struct:vcpu_vmx::__anon1	file:
msr_host_kernel_gs_base	vmx.c	/^	u64 		      msr_host_kernel_gs_base;$/;"	m	struct:vcpu_vmx	file:
msr_ia32_feature_control	vmx.c	/^	u64 msr_ia32_feature_control;$/;"	m	struct:nested_vmx	file:
msr_interception	svm.c	/^static int msr_interception(struct vcpu_svm *svm)$/;"	f	file:
msr_io	x86.c	/^static int msr_io(struct kvm_vcpu *vcpu, struct kvm_msrs __user *user_msrs,$/;"	f	file:
msr_mtrr_valid	x86.c	/^static bool msr_mtrr_valid(unsigned msr)$/;"	f	file:
msrpm	svm.c	/^	u32 *msrpm;$/;"	m	struct:nested_state	file:
msrpm	svm.c	/^	u32 *msrpm;$/;"	m	struct:vcpu_svm	file:
msrpm_ranges	svm.c	/^static const u32 msrpm_ranges[] = {0, 0xc0000000, 0xc0010000};$/;"	v	file:
msrs	x86.c	/^	u32 msrs[KVM_NR_SHARED_MSRS];$/;"	m	struct:kvm_shared_msrs_global	file:
msrs_to_save	x86.c	/^static u32 msrs_to_save[] = {$/;"	v	file:
muldiv64	i8254.c	/^static u64 muldiv64(u64 a, u32 b, u32 c)$/;"	f	file:
mult	x86.c	/^		u32	mult;$/;"	m	struct:pvclock_gtod_data::__anon4	file:
mwait_interception	svm.c	/^static int mwait_interception(struct vcpu_svm *svm)$/;"	f	file:
natural_width	vmx.c	/^typedef u64 natural_width;$/;"	t	file:
need_emulate_wbinvd	x86.c	/^static bool need_emulate_wbinvd(struct kvm_vcpu *vcpu)$/;"	f	file:
need_remote_flush	mmu.c	/^static bool need_remote_flush(u64 old, u64 new)$/;"	f	file:
neg	emulate.c	/^FASTOP1(neg);$/;"	v
nested	svm.c	/^	struct nested_state nested;$/;"	m	struct:vcpu_svm	typeref:struct:vcpu_svm::nested_state	file:
nested	svm.c	/^static int nested = true;$/;"	v	file:
nested	vmx.c	/^	struct nested_vmx nested;$/;"	m	struct:vcpu_vmx	typeref:struct:vcpu_vmx::nested_vmx	file:
nested	vmx.c	/^static bool __read_mostly nested = 0;$/;"	v	file:
nested_cpu_has	vmx.c	/^static inline bool nested_cpu_has(struct vmcs12 *vmcs12, u32 bit)$/;"	f	file:
nested_cpu_has2	vmx.c	/^static inline bool nested_cpu_has2(struct vmcs12 *vmcs12, u32 bit)$/;"	f	file:
nested_cpu_has_ept	vmx.c	/^static inline int nested_cpu_has_ept(struct vmcs12 *vmcs12)$/;"	f	file:
nested_cpu_has_preemption_timer	vmx.c	/^static inline bool nested_cpu_has_preemption_timer(struct vmcs12 *vmcs12)$/;"	f	file:
nested_cpu_has_virtual_nmis	vmx.c	/^static inline bool nested_cpu_has_virtual_nmis(struct vmcs12 *vmcs12)$/;"	f	file:
nested_cr0_valid	vmx.c	/^static bool nested_cr0_valid(struct vmcs12 *vmcs12, unsigned long val)$/;"	f	file:
nested_cr3	svm.c	/^	u64 nested_cr3;$/;"	m	struct:nested_state	file:
nested_ept_get_cr3	vmx.c	/^static unsigned long nested_ept_get_cr3(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_ept_init_mmu_context	vmx.c	/^static void nested_ept_init_mmu_context(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_ept_inject_page_fault	vmx.c	/^static void nested_ept_inject_page_fault(struct kvm_vcpu *vcpu,$/;"	f	file:
nested_ept_uninit_mmu_context	vmx.c	/^static void nested_ept_uninit_mmu_context(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_exit_intr_ack_set	vmx.c	/^static bool nested_exit_intr_ack_set(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_exit_on_intr	vmx.c	/^static bool nested_exit_on_intr(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_exit_on_nmi	vmx.c	/^static bool nested_exit_on_nmi(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_free_all_saved_vmcss	vmx.c	/^static void nested_free_all_saved_vmcss(struct vcpu_vmx *vmx)$/;"	f	file:
nested_free_vmcs02	vmx.c	/^static void nested_free_vmcs02(struct vcpu_vmx *vmx, gpa_t vmptr)$/;"	f	file:
nested_get_current_vmcs02	vmx.c	/^static struct loaded_vmcs *nested_get_current_vmcs02(struct vcpu_vmx *vmx)$/;"	f	file:
nested_get_page	vmx.c	/^static struct page *nested_get_page(struct kvm_vcpu *vcpu, gpa_t addr)$/;"	f	file:
nested_get_vmcs12_pages	vmx.c	/^static bool nested_get_vmcs12_pages(struct kvm_vcpu *vcpu,$/;"	f	file:
nested_read_cr0	vmx.c	/^static inline unsigned long nested_read_cr0(struct vmcs12 *fields)$/;"	f	file:
nested_read_cr4	vmx.c	/^static inline unsigned long nested_read_cr4(struct vmcs12 *fields)$/;"	f	file:
nested_release_page	vmx.c	/^static void nested_release_page(struct page *page)$/;"	f	file:
nested_release_page_clean	vmx.c	/^static void nested_release_page_clean(struct page *page)$/;"	f	file:
nested_release_vmcs12	vmx.c	/^static inline void nested_release_vmcs12(struct vcpu_vmx *vmx)$/;"	f	file:
nested_run_pending	vmx.c	/^	bool nested_run_pending;$/;"	m	struct:nested_vmx	file:
nested_state	svm.c	/^struct nested_state {$/;"	s	file:
nested_svm_check_exception	svm.c	/^static int nested_svm_check_exception(struct vcpu_svm *svm, unsigned nr,$/;"	f	file:
nested_svm_check_permissions	svm.c	/^static int nested_svm_check_permissions(struct vcpu_svm *svm)$/;"	f	file:
nested_svm_exit_handled	svm.c	/^static int nested_svm_exit_handled(struct vcpu_svm *svm)$/;"	f	file:
nested_svm_exit_handled_msr	svm.c	/^static int nested_svm_exit_handled_msr(struct vcpu_svm *svm)$/;"	f	file:
nested_svm_exit_special	svm.c	/^static int nested_svm_exit_special(struct vcpu_svm *svm)$/;"	f	file:
nested_svm_get_tdp_cr3	svm.c	/^static unsigned long nested_svm_get_tdp_cr3(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_svm_get_tdp_pdptr	svm.c	/^static u64 nested_svm_get_tdp_pdptr(struct kvm_vcpu *vcpu, int index)$/;"	f	file:
nested_svm_init_mmu_context	svm.c	/^static void nested_svm_init_mmu_context(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_svm_inject_npf_exit	svm.c	/^static void nested_svm_inject_npf_exit(struct kvm_vcpu *vcpu,$/;"	f	file:
nested_svm_intercept	svm.c	/^static int nested_svm_intercept(struct vcpu_svm *svm)$/;"	f	file:
nested_svm_intercept_ioio	svm.c	/^static int nested_svm_intercept_ioio(struct vcpu_svm *svm)$/;"	f	file:
nested_svm_intr	svm.c	/^static inline bool nested_svm_intr(struct vcpu_svm *svm)$/;"	f	file:
nested_svm_map	svm.c	/^static void *nested_svm_map(struct vcpu_svm *svm, u64 gpa, struct page **_page)$/;"	f	file:
nested_svm_nmi	svm.c	/^static inline bool nested_svm_nmi(struct vcpu_svm *svm)$/;"	f	file:
nested_svm_set_tdp_cr3	svm.c	/^static void nested_svm_set_tdp_cr3(struct kvm_vcpu *vcpu,$/;"	f	file:
nested_svm_uninit_mmu_context	svm.c	/^static void nested_svm_uninit_mmu_context(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_svm_unmap	svm.c	/^static void nested_svm_unmap(struct page *page)$/;"	f	file:
nested_svm_vmexit	svm.c	/^static int nested_svm_vmexit(struct vcpu_svm *svm)$/;"	f	file:
nested_svm_vmloadsave	svm.c	/^static void nested_svm_vmloadsave(struct vmcb *from_vmcb, struct vmcb *to_vmcb)$/;"	f	file:
nested_svm_vmrun	svm.c	/^static bool nested_svm_vmrun(struct vcpu_svm *svm)$/;"	f	file:
nested_svm_vmrun_msrpm	svm.c	/^static bool nested_svm_vmrun_msrpm(struct vcpu_svm *svm)$/;"	f	file:
nested_vmcb_checks	svm.c	/^static bool nested_vmcb_checks(struct vmcb *vmcb)$/;"	f	file:
nested_vmx	vmx.c	/^struct nested_vmx {$/;"	s	file:
nested_vmx_allowed	vmx.c	/^static inline bool nested_vmx_allowed(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_vmx_check_exception	vmx.c	/^static int nested_vmx_check_exception(struct kvm_vcpu *vcpu, unsigned nr)$/;"	f	file:
nested_vmx_check_permission	vmx.c	/^static int nested_vmx_check_permission(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_vmx_check_vmcs12	vmx.c	/^static int nested_vmx_check_vmcs12(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_vmx_check_vmptr	vmx.c	/^static int nested_vmx_check_vmptr(struct kvm_vcpu *vcpu, int exit_reason,$/;"	f	file:
nested_vmx_entry_ctls_high	vmx.c	/^static u32 nested_vmx_entry_ctls_low, nested_vmx_entry_ctls_high;$/;"	v	file:
nested_vmx_entry_ctls_low	vmx.c	/^static u32 nested_vmx_entry_ctls_low, nested_vmx_entry_ctls_high;$/;"	v	file:
nested_vmx_entry_failure	vmx.c	/^static void nested_vmx_entry_failure(struct kvm_vcpu *vcpu,$/;"	f	file:
nested_vmx_ept_caps	vmx.c	/^static u32 nested_vmx_ept_caps;$/;"	v	file:
nested_vmx_exit_ctls_high	vmx.c	/^static u32 nested_vmx_exit_ctls_low, nested_vmx_exit_ctls_high;$/;"	v	file:
nested_vmx_exit_ctls_low	vmx.c	/^static u32 nested_vmx_exit_ctls_low, nested_vmx_exit_ctls_high;$/;"	v	file:
nested_vmx_exit_handled	vmx.c	/^static bool nested_vmx_exit_handled(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_vmx_exit_handled_cr	vmx.c	/^static bool nested_vmx_exit_handled_cr(struct kvm_vcpu *vcpu,$/;"	f	file:
nested_vmx_exit_handled_io	vmx.c	/^static bool nested_vmx_exit_handled_io(struct kvm_vcpu *vcpu,$/;"	f	file:
nested_vmx_exit_handled_msr	vmx.c	/^static bool nested_vmx_exit_handled_msr(struct kvm_vcpu *vcpu,$/;"	f	file:
nested_vmx_failInvalid	vmx.c	/^static void nested_vmx_failInvalid(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_vmx_failValid	vmx.c	/^static void nested_vmx_failValid(struct kvm_vcpu *vcpu,$/;"	f	file:
nested_vmx_misc_high	vmx.c	/^static u32 nested_vmx_misc_low, nested_vmx_misc_high;$/;"	v	file:
nested_vmx_misc_low	vmx.c	/^static u32 nested_vmx_misc_low, nested_vmx_misc_high;$/;"	v	file:
nested_vmx_pinbased_ctls_high	vmx.c	/^static u32 nested_vmx_pinbased_ctls_low, nested_vmx_pinbased_ctls_high;$/;"	v	file:
nested_vmx_pinbased_ctls_low	vmx.c	/^static u32 nested_vmx_pinbased_ctls_low, nested_vmx_pinbased_ctls_high;$/;"	v	file:
nested_vmx_procbased_ctls_high	vmx.c	/^static u32 nested_vmx_procbased_ctls_low, nested_vmx_procbased_ctls_high;$/;"	v	file:
nested_vmx_procbased_ctls_low	vmx.c	/^static u32 nested_vmx_procbased_ctls_low, nested_vmx_procbased_ctls_high;$/;"	v	file:
nested_vmx_run	vmx.c	/^static int nested_vmx_run(struct kvm_vcpu *vcpu, bool launch)$/;"	f	file:
nested_vmx_secondary_ctls_high	vmx.c	/^static u32 nested_vmx_secondary_ctls_low, nested_vmx_secondary_ctls_high;$/;"	v	file:
nested_vmx_secondary_ctls_low	vmx.c	/^static u32 nested_vmx_secondary_ctls_low, nested_vmx_secondary_ctls_high;$/;"	v	file:
nested_vmx_setup_ctls_msrs	vmx.c	/^static __init void nested_vmx_setup_ctls_msrs(void)$/;"	f	file:
nested_vmx_succeed	vmx.c	/^static void nested_vmx_succeed(struct kvm_vcpu *vcpu)$/;"	f	file:
nested_vmx_true_entry_ctls_low	vmx.c	/^static u32 nested_vmx_true_entry_ctls_low;$/;"	v	file:
nested_vmx_true_exit_ctls_low	vmx.c	/^static u32 nested_vmx_true_exit_ctls_low;$/;"	v	file:
nested_vmx_true_procbased_ctls_low	vmx.c	/^static u32 nested_vmx_true_procbased_ctls_low;$/;"	v	file:
nested_vmx_vmexit	vmx.c	/^static void nested_vmx_vmexit(struct kvm_vcpu *vcpu, u32 exit_reason,$/;"	f	file:
new_asid	svm.c	/^static void new_asid(struct vcpu_svm *svm, struct svm_cpu_data *sd)$/;"	f	file:
next_asid	svm.c	/^	u32 next_asid;$/;"	m	struct:svm_cpu_data	file:
next_rip	svm.c	/^	u64 next_rip;$/;"	m	struct:vcpu_svm	file:
nm_interception	svm.c	/^static int nm_interception(struct vcpu_svm *svm)$/;"	f	file:
nmi_interception	svm.c	/^static int nmi_interception(struct vcpu_svm *svm)$/;"	f	file:
nmi_iret_rip	svm.c	/^	ulong nmi_iret_rip;$/;"	m	struct:vcpu_svm	file:
nmi_known_unmasked	vmx.c	/^	bool                  nmi_known_unmasked;$/;"	m	struct:vcpu_vmx	file:
nmi_singlestep	svm.c	/^	bool nmi_singlestep;$/;"	m	struct:vcpu_svm	file:
nmsrs	vmx.c	/^	int                   nmsrs;$/;"	m	struct:vcpu_vmx	file:
nonpaging_gva_to_gpa	mmu.c	/^static gpa_t nonpaging_gva_to_gpa(struct kvm_vcpu *vcpu, gva_t vaddr,$/;"	f	file:
nonpaging_gva_to_gpa_nested	mmu.c	/^static gpa_t nonpaging_gva_to_gpa_nested(struct kvm_vcpu *vcpu, gva_t vaddr,$/;"	f	file:
nonpaging_init_context	mmu.c	/^static void nonpaging_init_context(struct kvm_vcpu *vcpu,$/;"	f	file:
nonpaging_invlpg	mmu.c	/^static void nonpaging_invlpg(struct kvm_vcpu *vcpu, gva_t gva)$/;"	f	file:
nonpaging_map	mmu.c	/^static int nonpaging_map(struct kvm_vcpu *vcpu, gva_t v, u32 error_code,$/;"	f	file:
nonpaging_page_fault	mmu.c	/^static int nonpaging_page_fault(struct kvm_vcpu *vcpu, gva_t gva,$/;"	f	file:
nonpaging_sync_page	mmu.c	/^static int nonpaging_sync_page(struct kvm_vcpu *vcpu,$/;"	f	file:
nonpaging_update_pte	mmu.c	/^static void nonpaging_update_pte(struct kvm_vcpu *vcpu,$/;"	f	file:
nop_interception	svm.c	/^static int nop_interception(struct vcpu_svm *svm)$/;"	f	file:
nop_on_interception	svm.c	/^static int nop_on_interception(struct vcpu_svm *svm)$/;"	f	file:
not	emulate.c	/^FASTOP1(not);$/;"	v
npt	svm.c	/^static int npt = true;$/;"	v	file:
npt_enabled	svm.c	/^static bool npt_enabled = true;$/;"	v	file:
npt_enabled	svm.c	/^static bool npt_enabled;$/;"	v	file:
nr	mmu.c	/^	unsigned int nr;$/;"	m	struct:kvm_mmu_pages	file:
nr	vmx.c	/^		unsigned nr;$/;"	m	struct:vcpu_vmx::msr_autoload	file:
nr	x86.c	/^	int nr;$/;"	m	struct:kvm_shared_msrs_global	file:
nsec_base	x86.c	/^	u64		nsec_base;$/;"	m	struct:pvclock_gtod_data	file:
nsec_to_cycles	x86.c	/^static inline u64 nsec_to_cycles(struct kvm_vcpu *vcpu, u64 nsec)$/;"	f	file:
num_msrs_to_save	x86.c	/^static unsigned num_msrs_to_save;$/;"	v	file:
op	emulate.c	/^	struct opcode op[8];$/;"	m	struct:escape	typeref:struct:escape::opcode	file:
opcode	emulate.c	/^struct opcode {$/;"	s	file:
opcode_map_0f_38	emulate.c	/^static const struct opcode opcode_map_0f_38[256] = {$/;"	v	typeref:struct:opcode	file:
opcode_table	emulate.c	/^static const struct opcode opcode_table[256] = {$/;"	v	typeref:struct:opcode	file:
or	emulate.c	/^FASTOP2(or);$/;"	v
order	vmx.c	/^	int order;$/;"	m	struct:vmcs_config	file:
osvw_len	svm.c	/^static uint64_t osvw_len = 4, osvw_status;$/;"	v	file:
osvw_status	svm.c	/^static uint64_t osvw_len = 4, osvw_status;$/;"	v	file:
output	irq.h	/^	int output;		\/* intr from master PIC *\/$/;"	m	struct:kvm_pic
p	svm.c	/^	unsigned base1:8, type:5, dpl:2, p:1;$/;"	m	struct:kvm_ldttss_desc	file:
padding	vmx.c	/^	u32 padding[7]; \/* room for future expansion *\/$/;"	m	struct:vmcs12	file:
padding32	vmx.c	/^	u32 padding32[7]; \/* room for future expansion *\/$/;"	m	struct:vmcs12	file:
padding64	vmx.c	/^	u64 padding64[8]; \/* room for future expansion *\/$/;"	m	struct:vmcs12	file:
paddingl	vmx.c	/^	natural_width paddingl[8]; \/* room for future expansion *\/$/;"	m	struct:vmcs12	file:
page	mmu.c	/^	} page[KVM_PAGE_ARRAY_NR];$/;"	m	struct:kvm_mmu_pages	typeref:struct:kvm_mmu_pages::mmu_page_and_offset	file:
page_fault	paging_tmpl.h	/^static int FNAME(page_fault)(struct kvm_vcpu *vcpu, gva_t addr, u32 error_code,$/;"	f
page_fault_can_be_fast	mmu.c	/^static bool page_fault_can_be_fast(u32 error_code)$/;"	f	file:
page_fault_error_code_mask	vmx.c	/^	u32 page_fault_error_code_mask;$/;"	m	struct:vmcs12	file:
page_fault_error_code_match	vmx.c	/^	u32 page_fault_error_code_match;$/;"	m	struct:vmcs12	file:
paging32E_init_context	mmu.c	/^static void paging32E_init_context(struct kvm_vcpu *vcpu,$/;"	f	file:
paging32_init_context	mmu.c	/^static void paging32_init_context(struct kvm_vcpu *vcpu,$/;"	f	file:
paging64_init_context	mmu.c	/^static void paging64_init_context(struct kvm_vcpu *vcpu,$/;"	f	file:
paging64_init_context_common	mmu.c	/^static void paging64_init_context_common(struct kvm_vcpu *vcpu,$/;"	f	file:
parent	mmu.c	/^	struct kvm_mmu_page *parent[PT64_ROOT_LEVEL-1];$/;"	m	struct:mmu_page_path	typeref:struct:mmu_page_path::kvm_mmu_page	file:
pause_interception	svm.c	/^static int pause_interception(struct vcpu_svm *svm)$/;"	f	file:
pdptrs_changed	x86.c	/^static bool pdptrs_changed(struct kvm_vcpu *vcpu)$/;"	f	file:
pending	i8254.h	/^	atomic_t pending;			\/* accumulated triggered timers *\/$/;"	m	struct:kvm_kpit_state
pending	lapic.h	/^	atomic_t pending;			\/* accumulated triggered timers *\/$/;"	m	struct:kvm_timer
pending_acks	irq.h	/^	unsigned pending_acks;$/;"	m	struct:kvm_pic
pending_events	lapic.h	/^	unsigned long pending_events;$/;"	m	struct:kvm_lapic
period	i8254.h	/^	s64 period; 				\/* unit: ns *\/$/;"	m	struct:kvm_kpit_state
period	lapic.h	/^	s64 period; 				\/* unit: ns *\/$/;"	m	struct:kvm_timer
permission_fault	mmu.h	/^static inline bool permission_fault(struct kvm_vcpu *vcpu, struct kvm_mmu *mmu,$/;"	f
pf_interception	svm.c	/^static int pf_interception(struct vcpu_svm *svm)$/;"	f	file:
pfx_0f_28_0f_29	emulate.c	/^static const struct gprefix pfx_0f_28_0f_29 = {$/;"	v	typeref:struct:gprefix	file:
pfx_0f_2b	emulate.c	/^static const struct gprefix pfx_0f_2b = {$/;"	v	typeref:struct:gprefix	file:
pfx_0f_6f_0f_7f	emulate.c	/^static const struct gprefix pfx_0f_6f_0f_7f = {$/;"	v	typeref:struct:gprefix	file:
pfx_0f_ae_7	emulate.c	/^static const struct gprefix pfx_0f_ae_7 = {$/;"	v	typeref:struct:gprefix	file:
pfx_0f_e7	emulate.c	/^static const struct gprefix pfx_0f_e7 = {$/;"	v	typeref:struct:gprefix	file:
pfx_66	emulate.c	/^	struct opcode pfx_66;$/;"	m	struct:gprefix	typeref:struct:gprefix::opcode	file:
pfx_f2	emulate.c	/^	struct opcode pfx_f2;$/;"	m	struct:gprefix	typeref:struct:gprefix::opcode	file:
pfx_f3	emulate.c	/^	struct opcode pfx_f3;$/;"	m	struct:gprefix	typeref:struct:gprefix::opcode	file:
pfx_no	emulate.c	/^	struct opcode pfx_no;$/;"	m	struct:gprefix	typeref:struct:gprefix::opcode	file:
pgprintk	mmu.c	67;"	d	file:
pgprintk	mmu.c	72;"	d	file:
pi_desc	vmx.c	/^	struct pi_desc pi_desc;$/;"	m	struct:vcpu_vmx	typeref:struct:vcpu_vmx::pi_desc	file:
pi_desc	vmx.c	/^struct pi_desc {$/;"	s	file:
pi_test_and_clear_on	vmx.c	/^static bool pi_test_and_clear_on(struct pi_desc *pi_desc)$/;"	f	file:
pi_test_and_set_on	vmx.c	/^static bool pi_test_and_set_on(struct pi_desc *pi_desc)$/;"	f	file:
pi_test_and_set_pir	vmx.c	/^static int pi_test_and_set_pir(int vector, struct pi_desc *pi_desc)$/;"	f	file:
pic_clear_isr	i8259.c	/^static void pic_clear_isr(struct kvm_kpic_state *s, int irq)$/;"	f	file:
pic_get_irq	i8259.c	/^static int pic_get_irq(struct kvm_kpic_state *s)$/;"	f	file:
pic_intack	i8259.c	/^static inline void pic_intack(struct kvm_kpic_state *s, int irq)$/;"	f	file:
pic_ioport_read	i8259.c	/^static u32 pic_ioport_read(void *opaque, u32 addr1)$/;"	f	file:
pic_ioport_write	i8259.c	/^static void pic_ioport_write(void *opaque, u32 addr, u32 val)$/;"	f	file:
pic_irq_request	i8259.c	/^static void pic_irq_request(struct kvm *kvm, int level)$/;"	f	file:
pic_irqchip	irq.h	/^static inline struct kvm_pic *pic_irqchip(struct kvm *kvm)$/;"	f
pic_poll_read	i8259.c	/^static u32 pic_poll_read(struct kvm_kpic_state *s, u32 addr1)$/;"	f	file:
pic_set_irq1	i8259.c	/^static inline int pic_set_irq1(struct kvm_kpic_state *s, int irq, int level)$/;"	f	file:
pic_update_irq	i8259.c	/^static void pic_update_irq(struct kvm_pic *s)$/;"	f	file:
picdev_eclr_ops	i8259.c	/^static const struct kvm_io_device_ops picdev_eclr_ops = {$/;"	v	typeref:struct:kvm_io_device_ops	file:
picdev_eclr_read	i8259.c	/^static int picdev_eclr_read(struct kvm_io_device *dev,$/;"	f	file:
picdev_eclr_write	i8259.c	/^static int picdev_eclr_write(struct kvm_io_device *dev,$/;"	f	file:
picdev_in_range	i8259.c	/^static int picdev_in_range(gpa_t addr)$/;"	f	file:
picdev_master_ops	i8259.c	/^static const struct kvm_io_device_ops picdev_master_ops = {$/;"	v	typeref:struct:kvm_io_device_ops	file:
picdev_master_read	i8259.c	/^static int picdev_master_read(struct kvm_io_device *dev,$/;"	f	file:
picdev_master_write	i8259.c	/^static int picdev_master_write(struct kvm_io_device *dev,$/;"	f	file:
picdev_read	i8259.c	/^static int picdev_read(struct kvm_pic *s,$/;"	f	file:
picdev_slave_ops	i8259.c	/^static const struct kvm_io_device_ops picdev_slave_ops = {$/;"	v	typeref:struct:kvm_io_device_ops	file:
picdev_slave_read	i8259.c	/^static int picdev_slave_read(struct kvm_io_device *dev,$/;"	f	file:
picdev_slave_write	i8259.c	/^static int picdev_slave_write(struct kvm_io_device *dev,$/;"	f	file:
picdev_write	i8259.c	/^static int picdev_write(struct kvm_pic *s,$/;"	f	file:
pics	irq.h	/^	struct kvm_kpic_state pics[2]; \/* 0 is master pic, 1 is slave pic *\/$/;"	m	struct:kvm_pic	typeref:struct:kvm_pic::kvm_kpic_state
pics_state	irq.h	/^	struct kvm_pic *pics_state;$/;"	m	struct:kvm_kpic_state	typeref:struct:kvm_kpic_state::kvm_pic
pin_based_exec_ctrl	vmx.c	/^	u32 pin_based_exec_ctrl;$/;"	m	struct:vmcs_config	file:
pin_based_vm_exec_control	vmx.c	/^	u32 pin_based_vm_exec_control;$/;"	m	struct:vmcs12	file:
pio_in_emulated	emulate.c	/^static int pio_in_emulated(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
pir	vmx.c	/^	u32 pir[8];     \/* Posted interrupt requested *\/$/;"	m	struct:pi_desc	file:
pit	i8254.h	/^	struct kvm_pit *pit;$/;"	m	struct:kvm_kpit_state	typeref:struct:kvm_kpit_state::kvm_pit
pit_dev_ops	i8254.c	/^static const struct kvm_io_device_ops pit_dev_ops = {$/;"	v	typeref:struct:kvm_io_device_ops	file:
pit_do_work	i8254.c	/^static void pit_do_work(struct kthread_work *work)$/;"	f	file:
pit_get_count	i8254.c	/^static int pit_get_count(struct kvm *kvm, int channel)$/;"	f	file:
pit_get_gate	i8254.c	/^static int pit_get_gate(struct kvm *kvm, int channel)$/;"	f	file:
pit_get_out	i8254.c	/^static int pit_get_out(struct kvm *kvm, int channel)$/;"	f	file:
pit_in_range	i8254.c	/^static inline int pit_in_range(gpa_t addr)$/;"	f	file:
pit_ioport_read	i8254.c	/^static int pit_ioport_read(struct kvm_io_device *this,$/;"	f	file:
pit_ioport_write	i8254.c	/^static int pit_ioport_write(struct kvm_io_device *this,$/;"	f	file:
pit_latch_count	i8254.c	/^static void pit_latch_count(struct kvm *kvm, int channel)$/;"	f	file:
pit_latch_status	i8254.c	/^static void pit_latch_status(struct kvm *kvm, int channel)$/;"	f	file:
pit_load_count	i8254.c	/^static void pit_load_count(struct kvm *kvm, int channel, u32 val)$/;"	f	file:
pit_mask_notifer	i8254.c	/^static void pit_mask_notifer(struct kvm_irq_mask_notifier *kimn, bool mask)$/;"	f	file:
pit_set_gate	i8254.c	/^static void pit_set_gate(struct kvm *kvm, int channel, u32 val)$/;"	f	file:
pit_state	i8254.h	/^	struct kvm_kpit_state pit_state;$/;"	m	struct:kvm_pit	typeref:struct:kvm_pit::kvm_kpit_state
pit_timer_fn	i8254.c	/^static enum hrtimer_restart pit_timer_fn(struct hrtimer *data)$/;"	f	file:
ple_gap	vmx.c	/^static int ple_gap = KVM_VMX_DEFAULT_PLE_GAP;$/;"	v	file:
ple_window	vmx.c	/^	int ple_window;$/;"	m	struct:vcpu_vmx	file:
ple_window	vmx.c	/^static int ple_window = KVM_VMX_DEFAULT_PLE_WINDOW;$/;"	v	file:
ple_window_actual_max	vmx.c	/^static int ple_window_actual_max = KVM_VMX_DEFAULT_PLE_WINDOW_MAX;$/;"	v	file:
ple_window_dirty	vmx.c	/^	bool ple_window_dirty;$/;"	m	struct:vcpu_vmx	file:
ple_window_grow	vmx.c	/^static int ple_window_grow = KVM_VMX_DEFAULT_PLE_WINDOW_GROW;$/;"	v	file:
ple_window_max	vmx.c	/^static int ple_window_max        = KVM_VMX_DEFAULT_PLE_WINDOW_MAX;$/;"	v	file:
ple_window_shrink	vmx.c	/^static int ple_window_shrink = KVM_VMX_DEFAULT_PLE_WINDOW_SHRINK;$/;"	v	file:
pmc_bitmask	pmu.c	/^static inline u64 pmc_bitmask(struct kvm_pmc *pmc)$/;"	f	file:
pmc_enabled	pmu.c	/^static inline bool pmc_enabled(struct kvm_pmc *pmc)$/;"	f	file:
pmc_is_gp	pmu.c	/^static bool pmc_is_gp(struct kvm_pmc *pmc)$/;"	f	file:
poll	irq.h	/^	u8 poll;$/;"	m	struct:kvm_kpic_state
pos	mmu.c	/^	int pos;			\/* index of the sptep *\/$/;"	m	struct:rmap_iterator	file:
post_kvm_run_save	x86.c	/^static void post_kvm_run_save(struct kvm_vcpu *vcpu)$/;"	f	file:
pr_fmt	i8254.c	33;"	d	file:
pr_pic_unimpl	i8259.c	37;"	d	file:
pre_svm_run	svm.c	/^static void pre_svm_run(struct vcpu_svm *svm)$/;"	f	file:
preemption_timer	vmx.c	/^	struct hrtimer preemption_timer;$/;"	m	struct:nested_vmx	typeref:struct:nested_vmx::hrtimer	file:
preemption_timer_expired	vmx.c	/^	bool preemption_timer_expired;$/;"	m	struct:nested_vmx	file:
prefetch_gpte	paging_tmpl.h	/^FNAME(prefetch_gpte)(struct kvm_vcpu *vcpu, struct kvm_mmu_page *sp,$/;"	f
prefetch_invalid_gpte	paging_tmpl.h	/^static bool FNAME(prefetch_invalid_gpte)(struct kvm_vcpu *vcpu,$/;"	f
prefetch_ptes	paging_tmpl.h	/^	pt_element_t prefetch_ptes[PTE_PREFETCH_NUM];$/;"	m	struct:guest_walker
prepare_vmcs02	vmx.c	/^static void prepare_vmcs02(struct kvm_vcpu *vcpu, struct vmcs12 *vmcs12)$/;"	f	file:
prepare_vmcs12	vmx.c	/^static void prepare_vmcs12(struct kvm_vcpu *vcpu, struct vmcs12 *vmcs12,$/;"	f	file:
prepare_zap_oldest_mmu_page	mmu.c	/^static bool prepare_zap_oldest_mmu_page(struct kvm *kvm,$/;"	f	file:
prev_task_link	tss.h	/^	u16 prev_task_link;$/;"	m	struct:tss_segment_16
prev_task_link	tss.h	/^	u32 prev_task_link;$/;"	m	struct:tss_segment_32
priority_add	irq.h	/^	u8 priority_add;	\/* highest irq priority *\/$/;"	m	struct:kvm_kpic_state
process_nmi	x86.c	/^static void process_nmi(struct kvm_vcpu *vcpu)$/;"	f	file:
protect_clean_gpte	paging_tmpl.h	/^static inline void FNAME(protect_clean_gpte)(unsigned *access, unsigned gpte)$/;"	f
pse36_gfn_delta	mmu.c	/^static gfn_t pse36_gfn_delta(u32 gpte)$/;"	f	file:
pt_access	paging_tmpl.h	/^	unsigned pt_access;$/;"	m	struct:guest_walker
pt_element_t	paging_tmpl.h	34;"	d
pt_element_t	paging_tmpl.h	54;"	d
pt_element_t	paging_tmpl.h	69;"	d
pt_element_t	paging_tmpl.h	996;"	d
pte_access	paging_tmpl.h	/^	unsigned pte_access;$/;"	m	struct:guest_walker
pte_gpa	paging_tmpl.h	/^	gpa_t pte_gpa[PT_MAX_FULL_LEVELS];$/;"	m	struct:guest_walker
pte_list_add	mmu.c	/^static int pte_list_add(struct kvm_vcpu *vcpu, u64 *spte,$/;"	f	file:
pte_list_desc	mmu.c	/^struct pte_list_desc {$/;"	s	file:
pte_list_desc_cache	mmu.c	/^static struct kmem_cache *pte_list_desc_cache;$/;"	v	typeref:struct:kmem_cache	file:
pte_list_desc_remove_entry	mmu.c	/^pte_list_desc_remove_entry(unsigned long *pte_list, struct pte_list_desc *desc,$/;"	f	file:
pte_list_remove	mmu.c	/^static void pte_list_remove(u64 *spte, unsigned long *pte_list)$/;"	f	file:
pte_list_walk	mmu.c	/^static void pte_list_walk(unsigned long *pte_list, pte_list_walk_fn fn)$/;"	f	file:
pte_list_walk_fn	mmu.c	/^typedef void (*pte_list_walk_fn) (u64 *spte);$/;"	t	file:
pte_prefetch	paging_tmpl.h	/^static void FNAME(pte_prefetch)(struct kvm_vcpu *vcpu, struct guest_walker *gw,$/;"	f
pte_prefetch_gfn_to_pfn	mmu.c	/^static pfn_t pte_prefetch_gfn_to_pfn(struct kvm_vcpu *vcpu, gfn_t gfn,$/;"	f	file:
pte_writable	paging_tmpl.h	/^	bool pte_writable[PT_MAX_FULL_LEVELS];$/;"	m	struct:guest_walker
ptep_user	paging_tmpl.h	/^	pt_element_t __user *ptep_user[PT_MAX_FULL_LEVELS];$/;"	m	struct:guest_walker
ptes	paging_tmpl.h	/^	pt_element_t ptes[PT_MAX_FULL_LEVELS];$/;"	m	struct:guest_walker
push	emulate.c	/^static int push(struct x86_emulate_ctxt *ctxt, void *data, int bytes)$/;"	f	file:
pv_eoi_clr_pending	lapic.c	/^static void pv_eoi_clr_pending(struct kvm_vcpu *vcpu)$/;"	f	file:
pv_eoi_enabled	lapic.c	/^static inline bool pv_eoi_enabled(struct kvm_vcpu *vcpu)$/;"	f	file:
pv_eoi_get_pending	lapic.c	/^static bool pv_eoi_get_pending(struct kvm_vcpu *vcpu)$/;"	f	file:
pv_eoi_get_user	lapic.c	/^static int pv_eoi_get_user(struct kvm_vcpu *vcpu, u8 *val)$/;"	f	file:
pv_eoi_put_user	lapic.c	/^static int pv_eoi_put_user(struct kvm_vcpu *vcpu, u8 val)$/;"	f	file:
pv_eoi_set_pending	lapic.c	/^static void pv_eoi_set_pending(struct kvm_vcpu *vcpu)$/;"	f	file:
pvclock_gtod_data	x86.c	/^static struct pvclock_gtod_data pvclock_gtod_data;$/;"	v	typeref:struct:pvclock_gtod_data	file:
pvclock_gtod_data	x86.c	/^struct pvclock_gtod_data {$/;"	s	file:
pvclock_gtod_notifier	x86.c	/^static struct notifier_block pvclock_gtod_notifier = {$/;"	v	typeref:struct:notifier_block	file:
pvclock_gtod_notify	x86.c	/^static int pvclock_gtod_notify(struct notifier_block *nb, unsigned long unused,$/;"	f	file:
pvclock_gtod_update_fn	x86.c	/^static void pvclock_gtod_update_fn(struct work_struct *work)$/;"	f	file:
pvclock_update_vm_gtod_copy	x86.c	/^static void pvclock_update_vm_gtod_copy(struct kvm *kvm)$/;"	f	file:
qualifier	cpuid.c	/^	bool (*qualifier)(const struct kvm_cpuid_param *param);$/;"	m	struct:kvm_cpuid_param	file:
quickly_check_mmio_pf	mmu.c	/^static bool quickly_check_mmio_pf(struct kvm_vcpu *vcpu, u64 addr, bool direct)$/;"	f	file:
r	svm.c	/^	int r;$/;"	m	struct:svm_init_data	file:
rcl	emulate.c	/^FASTOP2CL(rcl);$/;"	v
rcr	emulate.c	/^FASTOP2CL(rcr);$/;"	v
rdmsr_interception	svm.c	/^static int rdmsr_interception(struct vcpu_svm *svm)$/;"	f	file:
rdpmc_interception	svm.c	/^static int rdpmc_interception(struct vcpu_svm *svm)$/;"	f	file:
rdtscp_enabled	vmx.c	/^	bool rdtscp_enabled;$/;"	m	struct:vcpu_vmx	file:
read_descriptor	emulate.c	/^static int read_descriptor(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
read_emulate	x86.c	/^static int read_emulate(struct kvm_vcpu *vcpu, gpa_t gpa,$/;"	f	file:
read_emulated	emulate.c	/^static int read_emulated(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
read_emultor	x86.c	/^static const struct read_write_emulator_ops read_emultor = {$/;"	v	typeref:struct:read_write_emulator_ops	file:
read_exit_mmio	x86.c	/^static int read_exit_mmio(struct kvm_vcpu *vcpu, gpa_t gpa,$/;"	f	file:
read_interrupt_descriptor	emulate.c	/^static int read_interrupt_descriptor(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
read_mmx_reg	emulate.c	/^static void read_mmx_reg(struct x86_emulate_ctxt *ctxt, u64 *data, int reg)$/;"	f	file:
read_pmc	pmu.c	/^static u64 read_pmc(struct kvm_pmc *pmc)$/;"	f	file:
read_prepare	x86.c	/^static int read_prepare(struct kvm_vcpu *vcpu, void *val, int bytes)$/;"	f	file:
read_reg_select	irq.h	/^	u8 read_reg_select;$/;"	m	struct:kvm_kpic_state
read_segment_descriptor	emulate.c	/^static int read_segment_descriptor(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
read_sse_reg	emulate.c	/^static void read_sse_reg(struct x86_emulate_ctxt *ctxt, sse128_t *data, int reg)$/;"	f	file:
read_state	i8254.h	/^	u8 read_state;$/;"	m	struct:kvm_kpit_channel_state
read_tsc	x86.c	/^static cycle_t read_tsc(void)$/;"	f	file:
read_write_emulate	x86.c	/^	int (*read_write_emulate)(struct kvm_vcpu *vcpu, gpa_t gpa,$/;"	m	struct:read_write_emulator_ops	file:
read_write_emulator_ops	x86.c	/^struct read_write_emulator_ops {$/;"	s	file:
read_write_exit_mmio	x86.c	/^	int (*read_write_exit_mmio)(struct kvm_vcpu *vcpu, gpa_t gpa,$/;"	m	struct:read_write_emulator_ops	file:
read_write_mmio	x86.c	/^	int (*read_write_mmio)(struct kvm_vcpu *vcpu, gpa_t gpa,$/;"	m	struct:read_write_emulator_ops	file:
read_write_prepare	x86.c	/^	int (*read_write_prepare)(struct kvm_vcpu *vcpu, void *val,$/;"	m	struct:read_write_emulator_ops	file:
recalc_intercepts	svm.c	/^static void recalc_intercepts(struct vcpu_svm *svm)$/;"	f	file:
recalculate_apic_map	lapic.c	/^static void recalculate_apic_map(struct kvm *kvm)$/;"	f	file:
record_steal_time	x86.c	/^static void record_steal_time(struct kvm_vcpu *vcpu)$/;"	f	file:
reexecute_instruction	x86.c	/^static bool reexecute_instruction(struct kvm_vcpu *vcpu, gva_t cr2,$/;"	f	file:
reg_read	emulate.c	/^static ulong reg_read(struct x86_emulate_ctxt *ctxt, unsigned nr)$/;"	f	file:
reg_rmw	emulate.c	/^static ulong *reg_rmw(struct x86_emulate_ctxt *ctxt, unsigned nr)$/;"	f	file:
reg_write	emulate.c	/^static ulong *reg_write(struct x86_emulate_ctxt *ctxt, unsigned nr)$/;"	f	file:
register_address	emulate.c	/^register_address(struct x86_emulate_ctxt *ctxt, unsigned long reg)$/;"	f	file:
register_address_increment	emulate.c	/^register_address_increment(struct x86_emulate_ctxt *ctxt, unsigned long *reg, int inc)$/;"	f	file:
registered	x86.c	/^	bool registered;$/;"	m	struct:kvm_shared_msrs	file:
regs	lapic.h	/^	void *regs;$/;"	m	struct:kvm_lapic
reinject	i8254.h	/^	bool reinject;$/;"	m	struct:kvm_kpit_state
reload_tss	svm.c	/^static void reload_tss(struct kvm_vcpu *vcpu)$/;"	f	file:
reload_tss	vmx.c	/^static void reload_tss(void)$/;"	f	file:
report_flexpriority	vmx.c	/^static inline bool report_flexpriority(void)$/;"	f	file:
report_tpr_access	lapic.c	/^static inline void report_tpr_access(struct kvm_lapic *apic, bool write)$/;"	f	file:
reprogram_counter	pmu.c	/^static void reprogram_counter(struct kvm_pmc *pmc, u32 type,$/;"	f	file:
reprogram_fixed_counter	pmu.c	/^static void reprogram_fixed_counter(struct kvm_pmc *pmc, u8 en_pmi, int idx)$/;"	f	file:
reprogram_fixed_counters	pmu.c	/^static void reprogram_fixed_counters(struct kvm_pmu *pmu, u64 data)$/;"	f	file:
reprogram_gp_counter	pmu.c	/^static void reprogram_gp_counter(struct kvm_pmc *pmc, u64 eventsel)$/;"	f	file:
reprogram_idx	pmu.c	/^static void reprogram_idx(struct kvm_pmu *pmu, int idx)$/;"	f	file:
reset_rsvds_bits_mask	mmu.c	/^static void reset_rsvds_bits_mask(struct kvm_vcpu *vcpu,$/;"	f	file:
reset_rsvds_bits_mask_ept	mmu.c	/^static void reset_rsvds_bits_mask_ept(struct kvm_vcpu *vcpu,$/;"	f	file:
retry_instruction	x86.c	/^static bool retry_instruction(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
revision_id	vmx.c	/^	u32 revision_id;$/;"	m	struct:vmcs	file:
revision_id	vmx.c	/^	u32 revision_id;$/;"	m	struct:vmcs12	file:
revision_id	vmx.c	/^	u32 revision_id;$/;"	m	struct:vmcs_config	file:
rflags	vmx.c	/^	ulong                 rflags;$/;"	m	struct:vcpu_vmx	file:
rmap_add	mmu.c	/^static int rmap_add(struct kvm_vcpu *vcpu, u64 *spte, gfn_t gfn)$/;"	f	file:
rmap_can_add	mmu.c	/^static bool rmap_can_add(struct kvm_vcpu *vcpu)$/;"	f	file:
rmap_get_first	mmu.c	/^static u64 *rmap_get_first(unsigned long rmap, struct rmap_iterator *iter)$/;"	f	file:
rmap_get_next	mmu.c	/^static u64 *rmap_get_next(struct rmap_iterator *iter)$/;"	f	file:
rmap_iterator	mmu.c	/^struct rmap_iterator {$/;"	s	file:
rmap_printk	mmu.c	68;"	d	file:
rmap_printk	mmu.c	73;"	d	file:
rmap_recycle	mmu.c	/^static void rmap_recycle(struct kvm_vcpu *vcpu, u64 *spte, gfn_t gfn)$/;"	f	file:
rmap_remove	mmu.c	/^static void rmap_remove(struct kvm *kvm, u64 *spte)$/;"	f	file:
rmap_write_protect	mmu.c	/^static bool rmap_write_protect(struct kvm *kvm, u64 gfn)$/;"	f	file:
rmode	vmx.c	/^	} rmode;$/;"	m	struct:vcpu_vmx	typeref:struct:vcpu_vmx::__anon2	file:
rmode_exception	vmx.c	/^static bool rmode_exception(struct kvm_vcpu *vcpu, int vec)$/;"	f	file:
rmode_segment_valid	vmx.c	/^static bool rmode_segment_valid(struct kvm_vcpu *vcpu, int seg)$/;"	f	file:
rol	emulate.c	/^FASTOP2CL(rol);$/;"	v
ror	emulate.c	/^FASTOP2CL(ror);$/;"	v
rotate_on_auto_eoi	irq.h	/^	u8 rotate_on_auto_eoi;$/;"	m	struct:kvm_kpic_state
rsp_increment	emulate.c	/^static void rsp_increment(struct x86_emulate_ctxt *ctxt, int inc)$/;"	f	file:
rsvd	vmx.c	/^	u32 rsvd[7];$/;"	m	struct:pi_desc	file:
rsvd_bits	mmu.h	/^static inline u64 rsvd_bits(int s, int e)$/;"	f
rw_mode	i8254.h	/^	u8 rw_mode;$/;"	m	struct:kvm_kpit_channel_state
sanity_check_entries	cpuid.c	/^static bool sanity_check_entries(struct kvm_cpuid_entry2 __user *entries,$/;"	f	file:
sar	emulate.c	/^FASTOP2CL(sar);$/;"	v
save_area	svm.c	/^	struct page *save_area;$/;"	m	struct:svm_cpu_data	typeref:struct:svm_cpu_data::page	file:
save_nmsrs	vmx.c	/^	int                   save_nmsrs;$/;"	m	struct:vcpu_vmx	file:
save_rflags	vmx.c	/^		ulong save_rflags;$/;"	m	struct:vcpu_vmx::__anon2	file:
save_state_to_tss16	emulate.c	/^static void save_state_to_tss16(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
save_state_to_tss32	emulate.c	/^static void save_state_to_tss32(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
sbb	emulate.c	/^FASTOP2(sbb);$/;"	v
secondary_vm_exec_control	vmx.c	/^	u32 secondary_vm_exec_control;$/;"	m	struct:vmcs12	file:
seg	vmx.c	/^		} seg[8];$/;"	m	struct:vcpu_vmx::__anon3	typeref:struct:vcpu_vmx::__anon3::kvm_save_segment	file:
seg_base	emulate.c	/^static unsigned long seg_base(struct x86_emulate_ctxt *ctxt, int seg)$/;"	f	file:
seg_setup	vmx.c	/^static void seg_setup(int seg)$/;"	f	file:
segment_base	vmx.c	/^static unsigned long segment_base(u16 selector)$/;"	f	file:
segment_cache	vmx.c	/^	} segment_cache;$/;"	m	struct:vcpu_vmx	typeref:struct:vcpu_vmx::__anon3	file:
segment_cache_field	vmx.c	/^enum segment_cache_field {$/;"	g	file:
segmented_cmpxchg	emulate.c	/^static int segmented_cmpxchg(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
segmented_read	emulate.c	/^static int segmented_read(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
segmented_read_std	emulate.c	/^static int segmented_read_std(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
segmented_write	emulate.c	/^static int segmented_write(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
segs	vmx.c	/^		struct kvm_segment segs[8];$/;"	m	struct:vcpu_vmx::__anon2	typeref:struct:vcpu_vmx::__anon2::kvm_segment	file:
selector	vmx.c	/^			u16 selector;$/;"	m	struct:vcpu_vmx::__anon3::kvm_save_segment	file:
selector	vmx.c	/^	unsigned selector;$/;"	m	struct:kvm_vmx_segment_field	file:
seq	x86.c	/^	seqcount_t	seq;$/;"	m	struct:pvclock_gtod_data	file:
set_cr4_guest_host_mask	vmx.c	/^static void set_cr4_guest_host_mask(struct vcpu_vmx *vmx)$/;"	f	file:
set_cr_intercept	svm.c	/^static inline void set_cr_intercept(struct vcpu_svm *svm, int bit)$/;"	f	file:
set_dr_intercepts	svm.c	/^static inline void set_dr_intercepts(struct vcpu_svm *svm)$/;"	f	file:
set_efer	x86.c	/^static int set_efer(struct kvm_vcpu *vcpu, u64 efer)$/;"	f	file:
set_exception_intercept	svm.c	/^static inline void set_exception_intercept(struct vcpu_svm *svm, int bit)$/;"	f	file:
set_intercept	svm.c	/^static inline void set_intercept(struct vcpu_svm *svm, int bit)$/;"	f	file:
set_mmio_spte	mmu.c	/^static bool set_mmio_spte(struct kvm *kvm, u64 *sptep, gfn_t gfn,$/;"	f	file:
set_msr_hyperv	x86.c	/^static int set_msr_hyperv(struct kvm_vcpu *vcpu, u32 msr, u64 data)$/;"	f	file:
set_msr_hyperv_pw	x86.c	/^static int set_msr_hyperv_pw(struct kvm_vcpu *vcpu, u32 msr, u64 data)$/;"	f	file:
set_msr_interception	svm.c	/^static void set_msr_interception(u32 *msrpm, unsigned msr,$/;"	f	file:
set_msr_mce	x86.c	/^static int set_msr_mce(struct kvm_vcpu *vcpu, u32 msr, u64 data)$/;"	f	file:
set_msr_mtrr	x86.c	/^static int set_msr_mtrr(struct kvm_vcpu *vcpu, u32 msr, u64 data)$/;"	f	file:
set_segment_selector	emulate.c	/^static void set_segment_selector(struct x86_emulate_ctxt *ctxt, u16 selector,$/;"	f	file:
set_spte	mmu.c	/^static int set_spte(struct kvm_vcpu *vcpu, u64 *sptep,$/;"	f	file:
set_tdp_cr3	svm.c	/^static void set_tdp_cr3(struct kvm_vcpu *vcpu, unsigned long root)$/;"	f	file:
setup_msrs	vmx.c	/^static void setup_msrs(struct vcpu_vmx *vmx)$/;"	f	file:
setup_syscalls_segments	emulate.c	/^setup_syscalls_segments(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
setup_vmcs_config	vmx.c	/^static __init int setup_vmcs_config(struct vmcs_config *vmcs_conf)$/;"	f	file:
shadow_accessed_mask	mmu.c	/^static u64 __read_mostly shadow_accessed_mask;$/;"	v	file:
shadow_addr	mmu.c	/^	hpa_t shadow_addr;$/;"	m	struct:kvm_shadow_walk_iterator	file:
shadow_dirty_mask	mmu.c	/^static u64 __read_mostly shadow_dirty_mask;$/;"	v	file:
shadow_mmio_mask	mmu.c	/^static u64 __read_mostly shadow_mmio_mask;$/;"	v	file:
shadow_nx_mask	mmu.c	/^static u64 __read_mostly shadow_nx_mask;$/;"	v	file:
shadow_read_only_fields	vmx.c	/^static unsigned long shadow_read_only_fields[] = {$/;"	v	file:
shadow_read_write_fields	vmx.c	/^static unsigned long shadow_read_write_fields[] = {$/;"	v	file:
shadow_user_mask	mmu.c	/^static u64 __read_mostly shadow_user_mask;$/;"	v	file:
shadow_walk_init	mmu.c	/^static void shadow_walk_init(struct kvm_shadow_walk_iterator *iterator,$/;"	f	file:
shadow_walk_next	mmu.c	/^static void shadow_walk_next(struct kvm_shadow_walk_iterator *iterator)$/;"	f	file:
shadow_walk_okay	mmu.c	/^static bool shadow_walk_okay(struct kvm_shadow_walk_iterator *iterator)$/;"	f	file:
shadow_x_mask	mmu.c	/^static u64 __read_mostly shadow_x_mask;	\/* mutual exclusive with nx_mask *\/$/;"	v	file:
shared_msr_entry	vmx.c	/^struct shared_msr_entry {$/;"	s	file:
shared_msr_update	x86.c	/^static void shared_msr_update(unsigned slot, u32 msr)$/;"	f	file:
shared_msrs	x86.c	/^static struct kvm_shared_msrs __percpu *shared_msrs;$/;"	v	typeref:struct:__percpu	file:
shared_msrs_global	x86.c	/^static struct kvm_shared_msrs_global __read_mostly shared_msrs_global;$/;"	v	typeref:struct:__read_mostly	file:
shift	x86.c	/^		u32	shift;$/;"	m	struct:pvclock_gtod_data::__anon4	file:
shl	emulate.c	/^FASTOP2CL(shl);$/;"	v
shld	emulate.c	/^FASTOP3WCL(shld);$/;"	v
shr	emulate.c	/^FASTOP2CL(shr);$/;"	v
shrd	emulate.c	/^FASTOP3WCL(shrd);$/;"	v
shrink_ple_window	vmx.c	/^static void shrink_ple_window(struct kvm_vcpu *vcpu)$/;"	f	file:
shutdown_interception	svm.c	/^static int shutdown_interception(struct vcpu_svm *svm)$/;"	f	file:
si	tss.h	/^	u16 si;$/;"	m	struct:tss_segment_16
sipi_vector	lapic.h	/^	unsigned int sipi_vector;$/;"	m	struct:kvm_lapic
size	vmx.c	/^	int size;$/;"	m	struct:vmcs_config	file:
skinit_interception	svm.c	/^static int skinit_interception(struct vcpu_svm *svm)$/;"	f	file:
skip_emulated_instruction	svm.c	/^static void skip_emulated_instruction(struct kvm_vcpu *vcpu)$/;"	f	file:
skip_emulated_instruction	vmx.c	/^static void skip_emulated_instruction(struct kvm_vcpu *vcpu)$/;"	f	file:
soft_vnmi_blocked	vmx.c	/^	int soft_vnmi_blocked;$/;"	m	struct:vcpu_vmx	file:
sp	mmu.c	/^		struct kvm_mmu_page *sp;$/;"	m	struct:kvm_mmu_pages::mmu_page_and_offset	typeref:struct:kvm_mmu_pages::mmu_page_and_offset::kvm_mmu_page	file:
sp	tss.h	/^	u16 sp;$/;"	m	struct:tss_segment_16
sp0	tss.h	/^	u16 sp0;$/;"	m	struct:tss_segment_16
sp1	tss.h	/^	u16 sp1;$/;"	m	struct:tss_segment_16
sp2	tss.h	/^	u16 sp2;$/;"	m	struct:tss_segment_16
sp_handler	mmu_audit.c	/^typedef void (*sp_handler) (struct kvm *kvm, struct kvm_mmu_page *sp);$/;"	t	file:
speaker_data_on	i8254.h	/^	u32    speaker_data_on;$/;"	m	struct:kvm_kpit_state
speaker_dev	i8254.h	/^	struct kvm_io_device speaker_dev;$/;"	m	struct:kvm_pit	typeref:struct:kvm_pit::kvm_io_device
speaker_dev_ops	i8254.c	/^static const struct kvm_io_device_ops speaker_dev_ops = {$/;"	v	typeref:struct:kvm_io_device_ops	file:
speaker_ioport_read	i8254.c	/^static int speaker_ioport_read(struct kvm_io_device *this,$/;"	f	file:
speaker_ioport_write	i8254.c	/^static int speaker_ioport_write(struct kvm_io_device *this,$/;"	f	file:
speaker_to_pit	i8254.c	/^static inline struct kvm_pit *speaker_to_pit(struct kvm_io_device *dev)$/;"	f	file:
special_fully_nested_mode	irq.h	/^	u8 special_fully_nested_mode;$/;"	m	struct:kvm_kpic_state
special_mask	irq.h	/^	u8 special_mask;$/;"	m	struct:kvm_kpic_state
split_spte	mmu.c	/^union split_spte {$/;"	u	file:
spte	mmu.c	/^	u64 spte;$/;"	m	union:split_spte	file:
spte_has_volatile_bits	mmu.c	/^static bool spte_has_volatile_bits(u64 spte)$/;"	f	file:
spte_high	mmu.c	/^		u32 spte_high;$/;"	m	struct:split_spte::__anon9	file:
spte_is_bit_cleared	mmu.c	/^static bool spte_is_bit_cleared(u64 old_spte, u64 new_spte, u64 bit_mask)$/;"	f	file:
spte_is_locklessly_modifiable	mmu.c	/^static bool spte_is_locklessly_modifiable(u64 spte)$/;"	f	file:
spte_low	mmu.c	/^		u32 spte_low;$/;"	m	struct:split_spte::__anon9	file:
spte_to_pfn	mmu.c	/^static pfn_t spte_to_pfn(u64 pte)$/;"	f	file:
spte_write_protect	mmu.c	/^static bool spte_write_protect(struct kvm *kvm, u64 *sptep, bool pt_protect)$/;"	f	file:
sptep	mmu.c	/^	u64 *sptep;$/;"	m	struct:kvm_shadow_walk_iterator	file:
sptes	mmu.c	/^	u64 *sptes[PTE_LIST_EXT];$/;"	m	struct:pte_list_desc	file:
ss	tss.h	/^	u16 ss;$/;"	m	struct:tss_segment_16
ss	tss.h	/^	u32 ss;$/;"	m	struct:tss_segment_32
ss0	tss.h	/^	u16 ss0;$/;"	m	struct:tss_segment_16
ss0	tss.h	/^	u32 ss0;$/;"	m	struct:tss_segment_32
ss1	tss.h	/^	u16 ss1;$/;"	m	struct:tss_segment_16
ss1	tss.h	/^	u32 ss1;$/;"	m	struct:tss_segment_32
ss2	tss.h	/^	u16 ss2;$/;"	m	struct:tss_segment_16
ss2	tss.h	/^	u32 ss2;$/;"	m	struct:tss_segment_32
stack_mask	emulate.c	/^static ulong stack_mask(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
stack_segment_valid	vmx.c	/^static bool stack_segment_valid(struct kvm_vcpu *vcpu)$/;"	f	file:
stack_size	emulate.c	/^static int stack_size(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
stage	svm.c	/^	enum x86_intercept_stage stage;$/;"	m	struct:__x86_intercept	typeref:enum:__x86_intercept::x86_intercept_stage	file:
start_apic_timer	lapic.c	/^static void start_apic_timer(struct kvm_lapic *apic)$/;"	f	file:
status	i8254.h	/^	u8 status;$/;"	m	struct:kvm_kpit_channel_state
status_latched	i8254.h	/^	u8 status_latched;$/;"	m	struct:kvm_kpit_channel_state
stgi	svm.c	/^static inline void stgi(void)$/;"	f	file:
stgi_interception	svm.c	/^static int stgi_interception(struct vcpu_svm *svm)$/;"	f	file:
stop_counter	pmu.c	/^static void stop_counter(struct kvm_pmc *pmc)$/;"	f	file:
string_addr_inc	emulate.c	/^static void string_addr_inc(struct x86_emulate_ctxt *ctxt, int reg,$/;"	f	file:
string_insn_completed	emulate.c	/^static bool string_insn_completed(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
sub	emulate.c	/^FASTOP2(sub);$/;"	v
svm_adjust_tsc_offset	svm.c	/^static void svm_adjust_tsc_offset(struct kvm_vcpu *vcpu, s64 adjustment, bool host)$/;"	f	file:
svm_cache_reg	svm.c	/^static void svm_cache_reg(struct kvm_vcpu *vcpu, enum kvm_reg reg)$/;"	f	file:
svm_cancel_injection	svm.c	/^static void svm_cancel_injection(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_check_intercept	svm.c	/^static int svm_check_intercept(struct kvm_vcpu *vcpu,$/;"	f	file:
svm_check_processor_compat	svm.c	/^static void svm_check_processor_compat(void *rtn)$/;"	f	file:
svm_clear_vintr	svm.c	/^static void svm_clear_vintr(struct vcpu_svm *svm)$/;"	f	file:
svm_complete_interrupts	svm.c	/^static void svm_complete_interrupts(struct vcpu_svm *svm)$/;"	f	file:
svm_compute_tsc_offset	svm.c	/^static u64 svm_compute_tsc_offset(struct kvm_vcpu *vcpu, u64 target_tsc)$/;"	f	file:
svm_cpu_data	svm.c	/^struct svm_cpu_data {$/;"	s	file:
svm_cpu_has_accelerated_tpr	svm.c	/^static bool svm_cpu_has_accelerated_tpr(void)$/;"	f	file:
svm_cpu_id	svm.c	/^static const struct x86_cpu_id svm_cpu_id[] = {$/;"	v	typeref:struct:x86_cpu_id	file:
svm_cpu_init	svm.c	/^static int svm_cpu_init(int cpu)$/;"	f	file:
svm_cpu_uninit	svm.c	/^static void svm_cpu_uninit(int cpu)$/;"	f	file:
svm_cpuid_update	svm.c	/^static void svm_cpuid_update(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_create_vcpu	svm.c	/^static struct kvm_vcpu *svm_create_vcpu(struct kvm *kvm, unsigned int id)$/;"	f	file:
svm_data	svm.c	/^	struct svm_cpu_data *svm_data;$/;"	m	struct:vcpu_svm	typeref:struct:vcpu_svm::svm_cpu_data	file:
svm_decache_cr0_guest_bits	svm.c	/^static void svm_decache_cr0_guest_bits(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_decache_cr3	svm.c	/^static void svm_decache_cr3(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_decache_cr4_guest_bits	svm.c	/^static void svm_decache_cr4_guest_bits(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_direct_access_msrs	svm.c	/^static const struct svm_direct_access_msrs {$/;"	s	file:
svm_disable_lbrv	svm.c	/^static void svm_disable_lbrv(struct vcpu_svm *svm)$/;"	f	file:
svm_enable_lbrv	svm.c	/^static void svm_enable_lbrv(struct vcpu_svm *svm)$/;"	f	file:
svm_exit	svm.c	/^static void __exit svm_exit(void)$/;"	f	file:
svm_exit_handlers	svm.c	/^static int (*const svm_exit_handlers[])(struct vcpu_svm *svm) = {$/;"	v	file:
svm_flush_tlb	svm.c	/^static void svm_flush_tlb(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_fpu_activate	svm.c	/^static void svm_fpu_activate(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_fpu_deactivate	svm.c	/^static void svm_fpu_deactivate(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_free_vcpu	svm.c	/^static void svm_free_vcpu(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_get_cpl	svm.c	/^static int svm_get_cpl(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_get_dr6	svm.c	/^static u64 svm_get_dr6(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_get_exit_info	svm.c	/^static void svm_get_exit_info(struct kvm_vcpu *vcpu, u64 *info1, u64 *info2)$/;"	f	file:
svm_get_gdt	svm.c	/^static void svm_get_gdt(struct kvm_vcpu *vcpu, struct desc_ptr *dt)$/;"	f	file:
svm_get_idt	svm.c	/^static void svm_get_idt(struct kvm_vcpu *vcpu, struct desc_ptr *dt)$/;"	f	file:
svm_get_interrupt_shadow	svm.c	/^static u32 svm_get_interrupt_shadow(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_get_lpage_level	svm.c	/^static int svm_get_lpage_level(void)$/;"	f	file:
svm_get_msr	svm.c	/^static int svm_get_msr(struct kvm_vcpu *vcpu, unsigned ecx, u64 *data)$/;"	f	file:
svm_get_mt_mask	svm.c	/^static u64 svm_get_mt_mask(struct kvm_vcpu *vcpu, gfn_t gfn, bool is_mmio)$/;"	f	file:
svm_get_nmi_mask	svm.c	/^static bool svm_get_nmi_mask(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_get_rflags	svm.c	/^static unsigned long svm_get_rflags(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_get_segment	svm.c	/^static void svm_get_segment(struct kvm_vcpu *vcpu,$/;"	f	file:
svm_get_segment_base	svm.c	/^static u64 svm_get_segment_base(struct kvm_vcpu *vcpu, int seg)$/;"	f	file:
svm_handle_external_intr	svm.c	/^static void svm_handle_external_intr(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_handle_mce	svm.c	/^static void svm_handle_mce(struct vcpu_svm *svm)$/;"	f	file:
svm_hardware_disable	svm.c	/^static void svm_hardware_disable(void)$/;"	f	file:
svm_hardware_enable	svm.c	/^static int svm_hardware_enable(void)$/;"	f	file:
svm_hardware_setup	svm.c	/^static __init int svm_hardware_setup(void)$/;"	f	file:
svm_hardware_unsetup	svm.c	/^static __exit void svm_hardware_unsetup(void)$/;"	f	file:
svm_has_wbinvd_exit	svm.c	/^static bool svm_has_wbinvd_exit(void)$/;"	f	file:
svm_hwapic_isr_update	svm.c	/^static void svm_hwapic_isr_update(struct kvm *kvm, int isr)$/;"	f	file:
svm_init	svm.c	/^static int __init svm_init(void)$/;"	f	file:
svm_init_data	svm.c	/^struct svm_init_data {$/;"	s	file:
svm_init_erratum_383	svm.c	/^static void svm_init_erratum_383(void)$/;"	f	file:
svm_init_osvw	svm.c	/^static void svm_init_osvw(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_inject_irq	svm.c	/^static inline void svm_inject_irq(struct vcpu_svm *svm, int irq)$/;"	f	file:
svm_inject_nmi	svm.c	/^static void svm_inject_nmi(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_interrupt_allowed	svm.c	/^static int svm_interrupt_allowed(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_invpcid_supported	svm.c	/^static bool svm_invpcid_supported(void)$/;"	f	file:
svm_load_eoi_exitmap	svm.c	/^static void svm_load_eoi_exitmap(struct kvm_vcpu *vcpu, u64 *eoi_exit_bitmap)$/;"	f	file:
svm_mpx_supported	svm.c	/^static bool svm_mpx_supported(void)$/;"	f	file:
svm_msrpm_offset	svm.c	/^static u32 svm_msrpm_offset(u32 msr)$/;"	f	file:
svm_nmi_allowed	svm.c	/^static int svm_nmi_allowed(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_patch_hypercall	svm.c	/^svm_patch_hypercall(struct kvm_vcpu *vcpu, unsigned char *hypercall)$/;"	f	file:
svm_prepare_guest_switch	svm.c	/^static void svm_prepare_guest_switch(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_queue_exception	svm.c	/^static void svm_queue_exception(struct kvm_vcpu *vcpu, unsigned nr,$/;"	f	file:
svm_rdtscp_supported	svm.c	/^static bool svm_rdtscp_supported(void)$/;"	f	file:
svm_read_l1_tsc	svm.c	/^static u64 svm_read_l1_tsc(struct kvm_vcpu *vcpu, u64 host_tsc)$/;"	f	file:
svm_read_tsc_offset	svm.c	/^static u64 svm_read_tsc_offset(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_scale_tsc	svm.c	/^static u64 svm_scale_tsc(struct kvm_vcpu *vcpu, u64 tsc)$/;"	f	file:
svm_sched_in	svm.c	/^static void svm_sched_in(struct kvm_vcpu *vcpu, int cpu)$/;"	f	file:
svm_seg	svm.c	/^static struct vmcb_seg *svm_seg(struct kvm_vcpu *vcpu, int seg)$/;"	f	file:
svm_set_cr0	svm.c	/^static void svm_set_cr0(struct kvm_vcpu *vcpu, unsigned long cr0)$/;"	f	file:
svm_set_cr3	svm.c	/^static void svm_set_cr3(struct kvm_vcpu *vcpu, unsigned long root)$/;"	f	file:
svm_set_cr4	svm.c	/^static int svm_set_cr4(struct kvm_vcpu *vcpu, unsigned long cr4)$/;"	f	file:
svm_set_dr6	svm.c	/^static void svm_set_dr6(struct kvm_vcpu *vcpu, unsigned long value)$/;"	f	file:
svm_set_dr7	svm.c	/^static void svm_set_dr7(struct kvm_vcpu *vcpu, unsigned long value)$/;"	f	file:
svm_set_efer	svm.c	/^static void svm_set_efer(struct kvm_vcpu *vcpu, u64 efer)$/;"	f	file:
svm_set_gdt	svm.c	/^static void svm_set_gdt(struct kvm_vcpu *vcpu, struct desc_ptr *dt)$/;"	f	file:
svm_set_idt	svm.c	/^static void svm_set_idt(struct kvm_vcpu *vcpu, struct desc_ptr *dt)$/;"	f	file:
svm_set_interrupt_shadow	svm.c	/^static void svm_set_interrupt_shadow(struct kvm_vcpu *vcpu, int mask)$/;"	f	file:
svm_set_irq	svm.c	/^static void svm_set_irq(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_set_msr	svm.c	/^static int svm_set_msr(struct kvm_vcpu *vcpu, struct msr_data *msr)$/;"	f	file:
svm_set_nmi_mask	svm.c	/^static void svm_set_nmi_mask(struct kvm_vcpu *vcpu, bool masked)$/;"	f	file:
svm_set_rflags	svm.c	/^static void svm_set_rflags(struct kvm_vcpu *vcpu, unsigned long rflags)$/;"	f	file:
svm_set_segment	svm.c	/^static void svm_set_segment(struct kvm_vcpu *vcpu,$/;"	f	file:
svm_set_supported_cpuid	svm.c	/^static void svm_set_supported_cpuid(u32 func, struct kvm_cpuid_entry2 *entry)$/;"	f	file:
svm_set_tsc_khz	svm.c	/^static void svm_set_tsc_khz(struct kvm_vcpu *vcpu, u32 user_tsc_khz, bool scale)$/;"	f	file:
svm_set_tss_addr	svm.c	/^static int svm_set_tss_addr(struct kvm *kvm, unsigned int addr)$/;"	f	file:
svm_set_vintr	svm.c	/^static void svm_set_vintr(struct vcpu_svm *svm)$/;"	f	file:
svm_set_virtual_x2apic_mode	svm.c	/^static void svm_set_virtual_x2apic_mode(struct kvm_vcpu *vcpu, bool set)$/;"	f	file:
svm_set_vm_cr	svm.c	/^static int svm_set_vm_cr(struct kvm_vcpu *vcpu, u64 data)$/;"	f	file:
svm_sync_dirty_debug_regs	svm.c	/^static void svm_sync_dirty_debug_regs(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_sync_pir_to_irr	svm.c	/^static void svm_sync_pir_to_irr(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_vcpu_init_msrpm	svm.c	/^static void svm_vcpu_init_msrpm(u32 *msrpm)$/;"	f	file:
svm_vcpu_load	svm.c	/^static void svm_vcpu_load(struct kvm_vcpu *vcpu, int cpu)$/;"	f	file:
svm_vcpu_put	svm.c	/^static void svm_vcpu_put(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_vcpu_reset	svm.c	/^static void svm_vcpu_reset(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_vcpu_run	svm.c	/^static void svm_vcpu_run(struct kvm_vcpu *vcpu)$/;"	f	file:
svm_vm_has_apicv	svm.c	/^static int svm_vm_has_apicv(struct kvm *kvm)$/;"	f	file:
svm_write_tsc_offset	svm.c	/^static void svm_write_tsc_offset(struct kvm_vcpu *vcpu, u64 offset)$/;"	f	file:
svm_x86_ops	svm.c	/^static struct kvm_x86_ops svm_x86_ops = {$/;"	v	typeref:struct:kvm_x86_ops	file:
sync_cr8_to_lapic	svm.c	/^static inline void sync_cr8_to_lapic(struct kvm_vcpu *vcpu)$/;"	f	file:
sync_lapic_to_cr8	svm.c	/^static inline void sync_lapic_to_cr8(struct kvm_vcpu *vcpu)$/;"	f	file:
sync_mmio_spte	mmu.c	/^static bool sync_mmio_spte(struct kvm *kvm, u64 *sptep, gfn_t gfn,$/;"	f	file:
sync_page	paging_tmpl.h	/^static int FNAME(sync_page)(struct kvm_vcpu *vcpu, struct kvm_mmu_page *sp)$/;"	f
sync_shadow_vmcs	vmx.c	/^	bool sync_shadow_vmcs;$/;"	m	struct:nested_vmx	file:
sysenter_eip	svm.c	/^	uint64_t sysenter_eip;$/;"	m	struct:vcpu_svm	file:
sysenter_esp	svm.c	/^	uint64_t sysenter_esp;$/;"	m	struct:vcpu_svm	file:
t	tss.h	/^	u16 t;$/;"	m	struct:tss_segment_32
table_gfn	paging_tmpl.h	/^	gfn_t table_gfn[PT_MAX_FULL_LEVELS];$/;"	m	struct:guest_walker
task_switch_16	emulate.c	/^static int task_switch_16(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
task_switch_32	emulate.c	/^static int task_switch_32(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
task_switch_interception	svm.c	/^static int task_switch_interception(struct vcpu_svm *svm)$/;"	f	file:
tdp_enabled	mmu.c	/^bool tdp_enabled = false;$/;"	v
tdp_page_fault	mmu.c	/^static int tdp_page_fault(struct kvm_vcpu *vcpu, gva_t gpa, u32 error_code,$/;"	f	file:
test	emulate.c	/^FASTOP2(test);$/;"	v
test_cc	emulate.c	/^static u8 test_cc(unsigned int condition, unsigned long flags)$/;"	f	file:
three_byte_0f_38_f0	emulate.c	/^static const struct gprefix three_byte_0f_38_f0 = {$/;"	v	typeref:struct:gprefix	file:
three_byte_0f_38_f1	emulate.c	/^static const struct gprefix three_byte_0f_38_f1 = {$/;"	v	typeref:struct:gprefix	file:
timer	i8254.h	/^	struct hrtimer timer;$/;"	m	struct:kvm_kpit_state	typeref:struct:kvm_kpit_state::hrtimer
timer	lapic.h	/^	struct hrtimer timer;$/;"	m	struct:kvm_timer	typeref:struct:kvm_timer::hrtimer
timer_mode_mask	lapic.h	/^	u32 timer_mode_mask;$/;"	m	struct:kvm_timer
to_lapic	lapic.c	/^static inline struct kvm_lapic *to_lapic(struct kvm_io_device *dev)$/;"	f	file:
to_svm	svm.c	/^static inline struct vcpu_svm *to_svm(struct kvm_vcpu *vcpu)$/;"	f	file:
to_vmx	vmx.c	/^static inline struct vcpu_vmx *to_vmx(struct kvm_vcpu *vcpu)$/;"	f	file:
toggle_interruptibility	x86.c	/^static void toggle_interruptibility(struct kvm_vcpu *vcpu, u32 mask)$/;"	f	file:
tpr_threshold	vmx.c	/^	u32 tpr_threshold;$/;"	m	struct:vmcs12	file:
tr_valid	vmx.c	/^static bool tr_valid(struct kvm_vcpu *vcpu)$/;"	f	file:
trace_kvm_apic_read	trace.h	193;"	d
trace_kvm_apic_write	trace.h	194;"	d
trace_kvm_cr_read	trace.h	356;"	d
trace_kvm_cr_write	trace.h	357;"	d
trace_kvm_emulate_insn_failed	trace.h	742;"	d
trace_kvm_emulate_insn_start	trace.h	741;"	d
trace_kvm_msr_read	trace.h	327;"	d
trace_kvm_msr_read_ex	trace.h	329;"	d
trace_kvm_msr_write	trace.h	328;"	d
trace_kvm_msr_write_ex	trace.h	330;"	d
trace_kvm_ple_window_grow	trace.h	875;"	d
trace_kvm_ple_window_shrink	trace.h	877;"	d
translate_nested_gpa	x86.c	/^gpa_t translate_nested_gpa(struct kvm_vcpu *vcpu, gpa_t gpa, u32 access,$/;"	f
transparent_hugepage_adjust	mmu.c	/^static void transparent_hugepage_adjust(struct kvm_vcpu *vcpu,$/;"	f	file:
trigger_pmi	pmu.c	/^static void trigger_pmi(struct irq_work *irq_work)$/;"	f	file:
try_async_pf	mmu.c	/^static bool try_async_pf(struct kvm_vcpu *vcpu, bool prefault, gfn_t gfn,$/;"	f	file:
tsc_bad	x86.c	/^static void tsc_bad(void *info)$/;"	f	file:
tsc_khz_changed	x86.c	/^static void tsc_khz_changed(void *data)$/;"	f	file:
tsc_offset	vmx.c	/^	u64 tsc_offset;$/;"	m	struct:vmcs12	file:
tsc_ratio	svm.c	/^	u64  tsc_ratio;$/;"	m	struct:vcpu_svm	file:
tsc_tolerance_ppm	x86.c	/^static u32 tsc_tolerance_ppm = 250;$/;"	v	file:
tscdeadline	lapic.h	/^	u64 tscdeadline;$/;"	m	struct:kvm_timer
tss_desc	svm.c	/^	struct kvm_ldttss_desc *tss_desc;$/;"	m	struct:svm_cpu_data	typeref:struct:svm_cpu_data::kvm_ldttss_desc	file:
tss_segment_16	tss.h	/^struct tss_segment_16 {$/;"	s
tss_segment_32	tss.h	/^struct tss_segment_32 {$/;"	s
twobyte_table	emulate.c	/^static const struct opcode twobyte_table[256] = {$/;"	v	typeref:struct:opcode	file:
type	svm.c	/^	unsigned base1:8, type:5, dpl:2, p:1;$/;"	m	struct:kvm_ldttss_desc	file:
u	emulate.c	/^	} u;$/;"	m	struct:opcode	typeref:union:opcode::__anon10	file:
ud_interception	svm.c	/^static int ud_interception(struct vcpu_svm *svm)$/;"	f	file:
unaccount_shadowed	mmu.c	/^static void unaccount_shadowed(struct kvm *kvm, gfn_t gfn)$/;"	f	file:
unit_mask	pmu.c	/^	u8 unit_mask;$/;"	m	struct:kvm_arch_event_perf_mapping	file:
update_accessed_dirty_bits	paging_tmpl.h	/^static int FNAME(update_accessed_dirty_bits)(struct kvm_vcpu *vcpu,$/;"	f
update_cr0_intercept	svm.c	/^static void update_cr0_intercept(struct vcpu_svm *svm)$/;"	f	file:
update_cr8_intercept	svm.c	/^static void update_cr8_intercept(struct kvm_vcpu *vcpu, int tpr, int irr)$/;"	f	file:
update_cr8_intercept	vmx.c	/^static void update_cr8_intercept(struct kvm_vcpu *vcpu, int tpr, int irr)$/;"	f	file:
update_cr8_intercept	x86.c	/^static void update_cr8_intercept(struct kvm_vcpu *vcpu)$/;"	f	file:
update_db_bp_intercept	svm.c	/^static void update_db_bp_intercept(struct kvm_vcpu *vcpu)$/;"	f	file:
update_divide_count	lapic.c	/^static void update_divide_count(struct kvm_lapic *apic)$/;"	f	file:
update_exception_bitmap	vmx.c	/^static void update_exception_bitmap(struct kvm_vcpu *vcpu)$/;"	f	file:
update_ia32_tsc_adjust_msr	x86.c	/^static void update_ia32_tsc_adjust_msr(struct kvm_vcpu *vcpu, s64 offset)$/;"	f	file:
update_last_pte_bitmap	mmu.c	/^static void update_last_pte_bitmap(struct kvm_vcpu *vcpu, struct kvm_mmu *mmu)$/;"	f	file:
update_permission_bitmask	mmu.c	/^static void update_permission_bitmask(struct kvm_vcpu *vcpu,$/;"	f	file:
update_ple_window_actual_max	vmx.c	/^static void update_ple_window_actual_max(void)$/;"	f	file:
update_pte	paging_tmpl.h	/^static void FNAME(update_pte)(struct kvm_vcpu *vcpu, struct kvm_mmu_page *sp,$/;"	f
update_pvclock_gtod	x86.c	/^static void update_pvclock_gtod(struct timekeeper *tk)$/;"	f	file:
update_transition_efer	vmx.c	/^static bool update_transition_efer(struct vcpu_vmx *vmx, int efer_offset)$/;"	f	file:
urn	x86.c	/^	struct user_return_notifier urn;$/;"	m	struct:kvm_shared_msrs	typeref:struct:kvm_shared_msrs::user_return_notifier	file:
valid_cr	emulate.c	/^static bool valid_cr(int nr)$/;"	f	file:
valid_msr_intercept	svm.c	/^static bool valid_msr_intercept(u32 index)$/;"	f	file:
valid_mtrr_type	x86.c	/^static bool valid_mtrr_type(unsigned t)$/;"	f	file:
valid_pat_type	x86.c	/^static bool valid_pat_type(unsigned t)$/;"	f	file:
validate_direct_spte	mmu.c	/^static void validate_direct_spte(struct kvm_vcpu *vcpu, u64 *sptep,$/;"	f	file:
values	x86.c	/^	} values[KVM_NR_SHARED_MSRS];$/;"	m	struct:kvm_shared_msrs	typeref:struct:kvm_shared_msrs::kvm_shared_msr_values	file:
vapic_addr	lapic.h	/^	gpa_t vapic_addr;$/;"	m	struct:kvm_lapic
vapic_cache	lapic.h	/^	struct gfn_to_hva_cache vapic_cache;$/;"	m	struct:kvm_lapic	typeref:struct:kvm_lapic::gfn_to_hva_cache
vclock_mode	x86.c	/^		int vclock_mode;$/;"	m	struct:pvclock_gtod_data::__anon4	file:
vcpu	lapic.h	/^	struct kvm_vcpu *vcpu;$/;"	m	struct:kvm_lapic	typeref:struct:kvm_lapic::kvm_vcpu
vcpu	svm.c	/^	struct kvm_vcpu vcpu;$/;"	m	struct:vcpu_svm	typeref:struct:vcpu_svm::kvm_vcpu	file:
vcpu	vmx.c	/^	struct kvm_vcpu       vcpu;$/;"	m	struct:vcpu_vmx	typeref:struct:vcpu_vmx::kvm_vcpu	file:
vcpu_cache_mmio_info	x86.h	/^static inline void vcpu_cache_mmio_info(struct kvm_vcpu *vcpu,$/;"	f
vcpu_clear_mmio_info	x86.h	/^static inline void vcpu_clear_mmio_info(struct kvm_vcpu *vcpu, gva_t gva)$/;"	f
vcpu_enter_guest	x86.c	/^static int vcpu_enter_guest(struct kvm_vcpu *vcpu)$/;"	f	file:
vcpu_ioctl_tpr_access_reporting	x86.c	/^static int vcpu_ioctl_tpr_access_reporting(struct kvm_vcpu *vcpu,$/;"	f	file:
vcpu_match_mmio_gen	x86.h	/^static inline bool vcpu_match_mmio_gen(struct kvm_vcpu *vcpu)$/;"	f
vcpu_match_mmio_gpa	x86.h	/^static inline bool vcpu_match_mmio_gpa(struct kvm_vcpu *vcpu, gpa_t gpa)$/;"	f
vcpu_match_mmio_gva	x86.h	/^static inline bool vcpu_match_mmio_gva(struct kvm_vcpu *vcpu, unsigned long gva)$/;"	f
vcpu_mmio_gva_to_gpa	x86.c	/^static int vcpu_mmio_gva_to_gpa(struct kvm_vcpu *vcpu, unsigned long gva,$/;"	f	file:
vcpu_mmio_read	x86.c	/^static int vcpu_mmio_read(struct kvm_vcpu *vcpu, gpa_t addr, int len, void *v)$/;"	f	file:
vcpu_mmio_write	x86.c	/^static int vcpu_mmio_write(struct kvm_vcpu *vcpu, gpa_t addr, int len,$/;"	f	file:
vcpu_scan_ioapic	x86.c	/^static void vcpu_scan_ioapic(struct kvm_vcpu *vcpu)$/;"	f	file:
vcpu_svm	svm.c	/^struct vcpu_svm {$/;"	s	file:
vcpu_vmx	vmx.c	/^struct vcpu_vmx {$/;"	s	file:
vendor_intel	emulate.c	/^static bool vendor_intel(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
vgettsc	x86.c	/^static inline u64 vgettsc(cycle_t *cycle_now)$/;"	f	file:
virtual_apic_page	vmx.c	/^	struct page *virtual_apic_page;$/;"	m	struct:nested_vmx	typeref:struct:nested_vmx::page	file:
virtual_apic_page_addr	vmx.c	/^	u64 virtual_apic_page_addr;$/;"	m	struct:vmcs12	file:
virtual_processor_id	vmx.c	/^	u16 virtual_processor_id;$/;"	m	struct:vmcs12	file:
vm86_active	vmx.c	/^		int vm86_active;$/;"	m	struct:vcpu_vmx::__anon2	file:
vm_cr_msr	svm.c	/^	u64 vm_cr_msr;$/;"	m	struct:nested_state	file:
vm_entry_controls	vmx.c	/^	u32 vm_entry_controls;$/;"	m	struct:vmcs12	file:
vm_entry_controls_clearbit	vmx.c	/^static inline void vm_entry_controls_clearbit(struct vcpu_vmx *vmx, u32 val)$/;"	f	file:
vm_entry_controls_get	vmx.c	/^static inline u32 vm_entry_controls_get(struct vcpu_vmx *vmx)$/;"	f	file:
vm_entry_controls_init	vmx.c	/^static inline void vm_entry_controls_init(struct vcpu_vmx *vmx, u32 val)$/;"	f	file:
vm_entry_controls_set	vmx.c	/^static inline void vm_entry_controls_set(struct vcpu_vmx *vmx, u32 val)$/;"	f	file:
vm_entry_controls_setbit	vmx.c	/^static inline void vm_entry_controls_setbit(struct vcpu_vmx *vmx, u32 val)$/;"	f	file:
vm_entry_controls_shadow	vmx.c	/^	u32 vm_entry_controls_shadow;$/;"	m	struct:vcpu_vmx	file:
vm_entry_exception_error_code	vmx.c	/^	u32 vm_entry_exception_error_code;$/;"	m	struct:vmcs12	file:
vm_entry_instruction_len	vmx.c	/^	u32 vm_entry_instruction_len;$/;"	m	struct:vmcs12	file:
vm_entry_intr_info_field	vmx.c	/^	u32 vm_entry_intr_info_field;$/;"	m	struct:vmcs12	file:
vm_entry_msr_load_addr	vmx.c	/^	u64 vm_entry_msr_load_addr;$/;"	m	struct:vmcs12	file:
vm_entry_msr_load_count	vmx.c	/^	u32 vm_entry_msr_load_count;$/;"	m	struct:vmcs12	file:
vm_exit_controls	vmx.c	/^	u32 vm_exit_controls;$/;"	m	struct:vmcs12	file:
vm_exit_controls_clearbit	vmx.c	/^static inline void vm_exit_controls_clearbit(struct vcpu_vmx *vmx, u32 val)$/;"	f	file:
vm_exit_controls_get	vmx.c	/^static inline u32 vm_exit_controls_get(struct vcpu_vmx *vmx)$/;"	f	file:
vm_exit_controls_init	vmx.c	/^static inline void vm_exit_controls_init(struct vcpu_vmx *vmx, u32 val)$/;"	f	file:
vm_exit_controls_set	vmx.c	/^static inline void vm_exit_controls_set(struct vcpu_vmx *vmx, u32 val)$/;"	f	file:
vm_exit_controls_setbit	vmx.c	/^static inline void vm_exit_controls_setbit(struct vcpu_vmx *vmx, u32 val)$/;"	f	file:
vm_exit_controls_shadow	vmx.c	/^	u32 vm_exit_controls_shadow;$/;"	m	struct:vcpu_vmx	file:
vm_exit_instruction_len	vmx.c	/^	u32 vm_exit_instruction_len;$/;"	m	struct:vmcs12	file:
vm_exit_intr_error_code	vmx.c	/^	u32 vm_exit_intr_error_code;$/;"	m	struct:vmcs12	file:
vm_exit_intr_info	vmx.c	/^	u32 vm_exit_intr_info;$/;"	m	struct:vmcs12	file:
vm_exit_msr_load_addr	vmx.c	/^	u64 vm_exit_msr_load_addr;$/;"	m	struct:vmcs12	file:
vm_exit_msr_load_count	vmx.c	/^	u32 vm_exit_msr_load_count;$/;"	m	struct:vmcs12	file:
vm_exit_msr_store_addr	vmx.c	/^	u64 vm_exit_msr_store_addr;$/;"	m	struct:vmcs12	file:
vm_exit_msr_store_count	vmx.c	/^	u32 vm_exit_msr_store_count;$/;"	m	struct:vmcs12	file:
vm_exit_reason	vmx.c	/^	u32 vm_exit_reason;$/;"	m	struct:vmcs12	file:
vm_instruction_error	vmx.c	/^	u32 vm_instruction_error;$/;"	m	struct:vmcs12	file:
vm_need_tpr_shadow	vmx.c	/^static inline bool vm_need_tpr_shadow(struct kvm *kvm)$/;"	f	file:
vm_need_virtualize_apic_accesses	vmx.c	/^static inline bool vm_need_virtualize_apic_accesses(struct kvm *kvm)$/;"	f	file:
vmcb	svm.c	/^	struct vmcb *vmcb;$/;"	m	struct:vcpu_svm	typeref:struct:vcpu_svm::vmcb	file:
vmcb	svm.c	/^	u64 vmcb;$/;"	m	struct:nested_state	file:
vmcb_iopm	svm.c	/^	u64 vmcb_iopm;$/;"	m	struct:nested_state	file:
vmcb_msrpm	svm.c	/^	u64 vmcb_msrpm;$/;"	m	struct:nested_state	file:
vmcb_pa	svm.c	/^	unsigned long vmcb_pa;$/;"	m	struct:vcpu_svm	file:
vmclear_local_loaded_vmcss	vmx.c	/^static void vmclear_local_loaded_vmcss(void)$/;"	f	file:
vmcs	vmx.c	/^	struct vmcs *vmcs;$/;"	m	struct:loaded_vmcs	typeref:struct:loaded_vmcs::vmcs	file:
vmcs	vmx.c	/^struct vmcs {$/;"	s	file:
vmcs01	vmx.c	/^	struct loaded_vmcs    vmcs01;$/;"	m	struct:vcpu_vmx	typeref:struct:vcpu_vmx::loaded_vmcs	file:
vmcs01_debugctl	vmx.c	/^	u64 vmcs01_debugctl;$/;"	m	struct:nested_vmx	file:
vmcs01_tsc_offset	vmx.c	/^	u64 vmcs01_tsc_offset;$/;"	m	struct:nested_vmx	file:
vmcs02	vmx.c	/^	struct loaded_vmcs vmcs02;$/;"	m	struct:vmcs02_list	typeref:struct:vmcs02_list::loaded_vmcs	file:
vmcs02_list	vmx.c	/^struct vmcs02_list {$/;"	s	file:
vmcs02_num	vmx.c	/^	int vmcs02_num;$/;"	m	struct:nested_vmx	file:
vmcs02_pool	vmx.c	/^	struct list_head vmcs02_pool;$/;"	m	struct:nested_vmx	typeref:struct:nested_vmx::list_head	file:
vmcs12	vmx.c	/^struct __packed vmcs12 {$/;"	s	file:
vmcs12_guest_cr0	vmx.c	/^vmcs12_guest_cr0(struct kvm_vcpu *vcpu, struct vmcs12 *vmcs12)$/;"	f	file:
vmcs12_guest_cr4	vmx.c	/^vmcs12_guest_cr4(struct kvm_vcpu *vcpu, struct vmcs12 *vmcs12)$/;"	f	file:
vmcs12_read_any	vmx.c	/^static inline bool vmcs12_read_any(struct kvm_vcpu *vcpu,$/;"	f	file:
vmcs12_save_pending_event	vmx.c	/^static void vmcs12_save_pending_event(struct kvm_vcpu *vcpu,$/;"	f	file:
vmcs12_write_any	vmx.c	/^static inline bool vmcs12_write_any(struct kvm_vcpu *vcpu,$/;"	f	file:
vmcs_clear	vmx.c	/^static void vmcs_clear(struct vmcs *vmcs)$/;"	f	file:
vmcs_clear_bits	vmx.c	/^static void vmcs_clear_bits(unsigned long field, u32 mask)$/;"	f	file:
vmcs_config	vmx.c	/^static struct vmcs_config {$/;"	s	file:
vmcs_config	vmx.c	/^} vmcs_config;$/;"	v	typeref:struct:vmcs_config	file:
vmcs_field_readonly	vmx.c	/^static inline int vmcs_field_readonly(unsigned long field)$/;"	f	file:
vmcs_field_to_offset	vmx.c	/^static inline short vmcs_field_to_offset(unsigned long field)$/;"	f	file:
vmcs_field_to_offset_table	vmx.c	/^static const unsigned short vmcs_field_to_offset_table[] = {$/;"	v	file:
vmcs_field_type	vmx.c	/^enum vmcs_field_type {$/;"	g	file:
vmcs_field_type	vmx.c	/^static inline int vmcs_field_type(unsigned long field)$/;"	f	file:
vmcs_host_cr4	vmx.c	/^		unsigned long vmcs_host_cr4;	\/* May not match real cr4 *\/$/;"	m	struct:vcpu_vmx::__anon1	file:
vmcs_link_pointer	vmx.c	/^	u64 vmcs_link_pointer;$/;"	m	struct:vmcs12	file:
vmcs_load	vmx.c	/^static void vmcs_load(struct vmcs *vmcs)$/;"	f	file:
vmcs_read16	vmx.c	/^static __always_inline u16 vmcs_read16(unsigned long field)$/;"	f	file:
vmcs_read32	vmx.c	/^static __always_inline u32 vmcs_read32(unsigned long field)$/;"	f	file:
vmcs_read64	vmx.c	/^static __always_inline u64 vmcs_read64(unsigned long field)$/;"	f	file:
vmcs_readl	vmx.c	/^static __always_inline unsigned long vmcs_readl(unsigned long field)$/;"	f	file:
vmcs_set_bits	vmx.c	/^static void vmcs_set_bits(unsigned long field, u32 mask)$/;"	f	file:
vmcs_write16	vmx.c	/^static void vmcs_write16(unsigned long field, u16 value)$/;"	f	file:
vmcs_write32	vmx.c	/^static void vmcs_write32(unsigned long field, u32 value)$/;"	f	file:
vmcs_write64	vmx.c	/^static void vmcs_write64(unsigned long field, u64 value)$/;"	f	file:
vmcs_writel	vmx.c	/^static void vmcs_writel(unsigned long field, unsigned long value)$/;"	f	file:
vmentry_ctrl	vmx.c	/^	u32 vmentry_ctrl;$/;"	m	struct:vmcs_config	file:
vmexit_ctrl	vmx.c	/^	u32 vmexit_ctrl;$/;"	m	struct:vmcs_config	file:
vmload_interception	svm.c	/^static int vmload_interception(struct vcpu_svm *svm)$/;"	f	file:
vmm_exclusive	vmx.c	/^static bool __read_mostly vmm_exclusive = 1;$/;"	v	file:
vmmcall_interception	svm.c	/^static int vmmcall_interception(struct vcpu_svm *svm)$/;"	f	file:
vmptr	vmx.c	/^	gpa_t vmptr;$/;"	m	struct:vmcs02_list	file:
vmrun_interception	svm.c	/^static int vmrun_interception(struct vcpu_svm *svm)$/;"	f	file:
vmsave_interception	svm.c	/^static int vmsave_interception(struct vcpu_svm *svm)$/;"	f	file:
vmwrite_error	vmx.c	/^static noinline void vmwrite_error(unsigned long field, unsigned long value)$/;"	f	file:
vmx_adjust_tsc_offset	vmx.c	/^static void vmx_adjust_tsc_offset(struct kvm_vcpu *vcpu, s64 adjustment, bool host)$/;"	f	file:
vmx_cache_reg	vmx.c	/^static void vmx_cache_reg(struct kvm_vcpu *vcpu, enum kvm_reg reg)$/;"	f	file:
vmx_cancel_injection	vmx.c	/^static void vmx_cancel_injection(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_capability	vmx.c	/^static struct vmx_capability {$/;"	s	file:
vmx_capability	vmx.c	/^} vmx_capability;$/;"	v	typeref:struct:vmx_capability	file:
vmx_check_intercept	vmx.c	/^static int vmx_check_intercept(struct kvm_vcpu *vcpu,$/;"	f	file:
vmx_check_nested_events	vmx.c	/^static int vmx_check_nested_events(struct kvm_vcpu *vcpu, bool external_intr)$/;"	f	file:
vmx_check_processor_compat	vmx.c	/^static void __init vmx_check_processor_compat(void *rtn)$/;"	f	file:
vmx_complete_atomic_exit	vmx.c	/^static void vmx_complete_atomic_exit(struct vcpu_vmx *vmx)$/;"	f	file:
vmx_complete_interrupts	vmx.c	/^static void vmx_complete_interrupts(struct vcpu_vmx *vmx)$/;"	f	file:
vmx_compute_tsc_offset	vmx.c	/^static u64 vmx_compute_tsc_offset(struct kvm_vcpu *vcpu, u64 target_tsc)$/;"	f	file:
vmx_control_msr	vmx.c	/^static inline u64 vmx_control_msr(u32 low, u32 high)$/;"	f	file:
vmx_control_verify	vmx.c	/^static inline bool vmx_control_verify(u32 control, u32 low, u32 high)$/;"	f	file:
vmx_cpu_id	vmx.c	/^static const struct x86_cpu_id vmx_cpu_id[] = {$/;"	v	typeref:struct:x86_cpu_id	file:
vmx_cpuid_update	vmx.c	/^static void vmx_cpuid_update(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_create_vcpu	vmx.c	/^static struct kvm_vcpu *vmx_create_vcpu(struct kvm *kvm, unsigned int id)$/;"	f	file:
vmx_decache_cr0_guest_bits	vmx.c	/^static void vmx_decache_cr0_guest_bits(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_decache_cr3	vmx.c	/^static void vmx_decache_cr3(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_decache_cr4_guest_bits	vmx.c	/^static void vmx_decache_cr4_guest_bits(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_deliver_posted_interrupt	vmx.c	/^static void vmx_deliver_posted_interrupt(struct kvm_vcpu *vcpu, int vector)$/;"	f	file:
vmx_disable_intercept_for_msr	vmx.c	/^static void vmx_disable_intercept_for_msr(u32 msr, bool longmode_only)$/;"	f	file:
vmx_disable_intercept_msr_read_x2apic	vmx.c	/^static void vmx_disable_intercept_msr_read_x2apic(u32 msr)$/;"	f	file:
vmx_disable_intercept_msr_write_x2apic	vmx.c	/^static void vmx_disable_intercept_msr_write_x2apic(u32 msr)$/;"	f	file:
vmx_disabled_by_bios	vmx.c	/^static __init int vmx_disabled_by_bios(void)$/;"	f	file:
vmx_enable_intercept_msr_read_x2apic	vmx.c	/^static void vmx_enable_intercept_msr_read_x2apic(u32 msr)$/;"	f	file:
vmx_exec_control	vmx.c	/^static u32 vmx_exec_control(struct vcpu_vmx *vmx)$/;"	f	file:
vmx_exit	vmx.c	/^static void __exit vmx_exit(void)$/;"	f	file:
vmx_flush_tlb	vmx.c	/^static void vmx_flush_tlb(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_fpu_activate	vmx.c	/^static void vmx_fpu_activate(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_fpu_deactivate	vmx.c	/^static void vmx_fpu_deactivate(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_free_vcpu	vmx.c	/^static void vmx_free_vcpu(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_get_cpl	vmx.c	/^static int vmx_get_cpl(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_get_cs_db_l_bits	vmx.c	/^static void vmx_get_cs_db_l_bits(struct kvm_vcpu *vcpu, int *db, int *l)$/;"	f	file:
vmx_get_dr6	vmx.c	/^static u64 vmx_get_dr6(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_get_exit_info	vmx.c	/^static void vmx_get_exit_info(struct kvm_vcpu *vcpu, u64 *info1, u64 *info2)$/;"	f	file:
vmx_get_gdt	vmx.c	/^static void vmx_get_gdt(struct kvm_vcpu *vcpu, struct desc_ptr *dt)$/;"	f	file:
vmx_get_idt	vmx.c	/^static void vmx_get_idt(struct kvm_vcpu *vcpu, struct desc_ptr *dt)$/;"	f	file:
vmx_get_interrupt_shadow	vmx.c	/^static u32 vmx_get_interrupt_shadow(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_get_lpage_level	vmx.c	/^static int vmx_get_lpage_level(void)$/;"	f	file:
vmx_get_msr	vmx.c	/^static int vmx_get_msr(struct kvm_vcpu *vcpu, u32 msr_index, u64 *pdata)$/;"	f	file:
vmx_get_mt_mask	vmx.c	/^static u64 vmx_get_mt_mask(struct kvm_vcpu *vcpu, gfn_t gfn, bool is_mmio)$/;"	f	file:
vmx_get_nmi_mask	vmx.c	/^static bool vmx_get_nmi_mask(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_get_preemption_timer_value	vmx.c	/^static u32 vmx_get_preemption_timer_value(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_get_rflags	vmx.c	/^static unsigned long vmx_get_rflags(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_get_segment	vmx.c	/^static void vmx_get_segment(struct kvm_vcpu *vcpu,$/;"	f	file:
vmx_get_segment_base	vmx.c	/^static u64 vmx_get_segment_base(struct kvm_vcpu *vcpu, int seg)$/;"	f	file:
vmx_get_vmx_msr	vmx.c	/^static int vmx_get_vmx_msr(struct kvm_vcpu *vcpu, u32 msr_index, u64 *pdata)$/;"	f	file:
vmx_handle_exit	vmx.c	/^static int vmx_handle_exit(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_handle_external_intr	vmx.c	/^static void vmx_handle_external_intr(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_hwapic_irr_update	vmx.c	/^static void vmx_hwapic_irr_update(struct kvm_vcpu *vcpu, int max_irr)$/;"	f	file:
vmx_hwapic_isr_update	vmx.c	/^static void vmx_hwapic_isr_update(struct kvm *kvm, int isr)$/;"	f	file:
vmx_init	vmx.c	/^static int __init vmx_init(void)$/;"	f	file:
vmx_inject_irq	vmx.c	/^static void vmx_inject_irq(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_inject_nmi	vmx.c	/^static void vmx_inject_nmi(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_inject_page_fault_nested	vmx.c	/^static void vmx_inject_page_fault_nested(struct kvm_vcpu *vcpu,$/;"	f	file:
vmx_instruction_info	vmx.c	/^	u32 vmx_instruction_info;$/;"	m	struct:vmcs12	file:
vmx_interrupt_allowed	vmx.c	/^static int vmx_interrupt_allowed(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_invpcid_supported	vmx.c	/^static bool vmx_invpcid_supported(void)$/;"	f	file:
vmx_io_bitmap_a	vmx.c	/^static unsigned long *vmx_io_bitmap_a;$/;"	v	file:
vmx_io_bitmap_b	vmx.c	/^static unsigned long *vmx_io_bitmap_b;$/;"	v	file:
vmx_leave_nested	vmx.c	/^static void vmx_leave_nested(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_load_eoi_exitmap	vmx.c	/^static void vmx_load_eoi_exitmap(struct kvm_vcpu *vcpu, u64 *eoi_exit_bitmap)$/;"	f	file:
vmx_load_host_state	vmx.c	/^static void vmx_load_host_state(struct vcpu_vmx *vmx)$/;"	f	file:
vmx_load_vmcs01	vmx.c	/^static void vmx_load_vmcs01(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_mpx_supported	vmx.c	/^static bool vmx_mpx_supported(void)$/;"	f	file:
vmx_msr_bitmap_legacy	vmx.c	/^static unsigned long *vmx_msr_bitmap_legacy;$/;"	v	file:
vmx_msr_bitmap_legacy_x2apic	vmx.c	/^static unsigned long *vmx_msr_bitmap_legacy_x2apic;$/;"	v	file:
vmx_msr_bitmap_longmode	vmx.c	/^static unsigned long *vmx_msr_bitmap_longmode;$/;"	v	file:
vmx_msr_bitmap_longmode_x2apic	vmx.c	/^static unsigned long *vmx_msr_bitmap_longmode_x2apic;$/;"	v	file:
vmx_msr_index	vmx.c	/^static const u32 vmx_msr_index[] = {$/;"	v	file:
vmx_nmi_allowed	vmx.c	/^static int vmx_nmi_allowed(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_patch_hypercall	vmx.c	/^vmx_patch_hypercall(struct kvm_vcpu *vcpu, unsigned char *hypercall)$/;"	f	file:
vmx_pin_based_exec_ctrl	vmx.c	/^static u32 vmx_pin_based_exec_ctrl(struct vcpu_vmx *vmx)$/;"	f	file:
vmx_preemption_timer_fn	vmx.c	/^static enum hrtimer_restart vmx_preemption_timer_fn(struct hrtimer *timer)$/;"	f	file:
vmx_preemption_timer_value	vmx.c	/^	u32 vmx_preemption_timer_value;$/;"	m	struct:vmcs12	file:
vmx_queue_exception	vmx.c	/^static void vmx_queue_exception(struct kvm_vcpu *vcpu, unsigned nr,$/;"	f	file:
vmx_rdtscp_supported	vmx.c	/^static bool vmx_rdtscp_supported(void)$/;"	f	file:
vmx_read_guest_seg_ar	vmx.c	/^static u32 vmx_read_guest_seg_ar(struct vcpu_vmx *vmx, unsigned seg)$/;"	f	file:
vmx_read_guest_seg_base	vmx.c	/^static ulong vmx_read_guest_seg_base(struct vcpu_vmx *vmx, unsigned seg)$/;"	f	file:
vmx_read_guest_seg_limit	vmx.c	/^static u32 vmx_read_guest_seg_limit(struct vcpu_vmx *vmx, unsigned seg)$/;"	f	file:
vmx_read_guest_seg_selector	vmx.c	/^static u16 vmx_read_guest_seg_selector(struct vcpu_vmx *vmx, unsigned seg)$/;"	f	file:
vmx_read_l1_tsc	vmx.c	/^static u64 vmx_read_l1_tsc(struct kvm_vcpu *vcpu, u64 host_tsc)$/;"	f	file:
vmx_read_tsc_offset	vmx.c	/^static u64 vmx_read_tsc_offset(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_recover_nmi_blocking	vmx.c	/^static void vmx_recover_nmi_blocking(struct vcpu_vmx *vmx)$/;"	f	file:
vmx_save_host_state	vmx.c	/^static void vmx_save_host_state(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_sched_in	vmx.c	/^static void vmx_sched_in(struct kvm_vcpu *vcpu, int cpu)$/;"	f	file:
vmx_secondary_exec_control	vmx.c	/^static u32 vmx_secondary_exec_control(struct vcpu_vmx *vmx)$/;"	f	file:
vmx_segment_access_rights	vmx.c	/^static u32 vmx_segment_access_rights(struct kvm_segment *var)$/;"	f	file:
vmx_segment_cache_clear	vmx.c	/^static void vmx_segment_cache_clear(struct vcpu_vmx *vmx)$/;"	f	file:
vmx_segment_cache_test_set	vmx.c	/^static bool vmx_segment_cache_test_set(struct vcpu_vmx *vmx, unsigned seg,$/;"	f	file:
vmx_set_apic_access_page_addr	vmx.c	/^static void vmx_set_apic_access_page_addr(struct kvm_vcpu *vcpu, hpa_t hpa)$/;"	f	file:
vmx_set_constant_host_state	vmx.c	/^static void vmx_set_constant_host_state(struct vcpu_vmx *vmx)$/;"	f	file:
vmx_set_cr0	vmx.c	/^static void vmx_set_cr0(struct kvm_vcpu *vcpu, unsigned long cr0)$/;"	f	file:
vmx_set_cr3	vmx.c	/^static void vmx_set_cr3(struct kvm_vcpu *vcpu, unsigned long cr3)$/;"	f	file:
vmx_set_cr4	vmx.c	/^static int vmx_set_cr4(struct kvm_vcpu *vcpu, unsigned long cr4)$/;"	f	file:
vmx_set_dr6	vmx.c	/^static void vmx_set_dr6(struct kvm_vcpu *vcpu, unsigned long val)$/;"	f	file:
vmx_set_dr7	vmx.c	/^static void vmx_set_dr7(struct kvm_vcpu *vcpu, unsigned long val)$/;"	f	file:
vmx_set_efer	vmx.c	/^static void vmx_set_efer(struct kvm_vcpu *vcpu, u64 efer)$/;"	f	file:
vmx_set_gdt	vmx.c	/^static void vmx_set_gdt(struct kvm_vcpu *vcpu, struct desc_ptr *dt)$/;"	f	file:
vmx_set_idt	vmx.c	/^static void vmx_set_idt(struct kvm_vcpu *vcpu, struct desc_ptr *dt)$/;"	f	file:
vmx_set_interrupt_shadow	vmx.c	/^static void vmx_set_interrupt_shadow(struct kvm_vcpu *vcpu, int mask)$/;"	f	file:
vmx_set_msr	vmx.c	/^static int vmx_set_msr(struct kvm_vcpu *vcpu, struct msr_data *msr_info)$/;"	f	file:
vmx_set_msr_bitmap	vmx.c	/^static void vmx_set_msr_bitmap(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_set_nmi_mask	vmx.c	/^static void vmx_set_nmi_mask(struct kvm_vcpu *vcpu, bool masked)$/;"	f	file:
vmx_set_rflags	vmx.c	/^static void vmx_set_rflags(struct kvm_vcpu *vcpu, unsigned long rflags)$/;"	f	file:
vmx_set_rvi	vmx.c	/^static void vmx_set_rvi(int vector)$/;"	f	file:
vmx_set_segment	vmx.c	/^static void vmx_set_segment(struct kvm_vcpu *vcpu,$/;"	f	file:
vmx_set_supported_cpuid	vmx.c	/^static void vmx_set_supported_cpuid(u32 func, struct kvm_cpuid_entry2 *entry)$/;"	f	file:
vmx_set_tsc_khz	vmx.c	/^static void vmx_set_tsc_khz(struct kvm_vcpu *vcpu, u32 user_tsc_khz, bool scale)$/;"	f	file:
vmx_set_tss_addr	vmx.c	/^static int vmx_set_tss_addr(struct kvm *kvm, unsigned int addr)$/;"	f	file:
vmx_set_virtual_x2apic_mode	vmx.c	/^static void vmx_set_virtual_x2apic_mode(struct kvm_vcpu *vcpu, bool set)$/;"	f	file:
vmx_start_preemption_timer	vmx.c	/^static void vmx_start_preemption_timer(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_sync_dirty_debug_regs	vmx.c	/^static void vmx_sync_dirty_debug_regs(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_sync_pir_to_irr	vmx.c	/^static void vmx_sync_pir_to_irr(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_sync_pir_to_irr_dummy	vmx.c	/^static void vmx_sync_pir_to_irr_dummy(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_vcpu_load	vmx.c	/^static void vmx_vcpu_load(struct kvm_vcpu *vcpu, int cpu)$/;"	f	file:
vmx_vcpu_put	vmx.c	/^static void vmx_vcpu_put(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_vcpu_reset	vmx.c	/^static void vmx_vcpu_reset(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_vcpu_run	vmx.c	/^static void __noclone vmx_vcpu_run(struct kvm_vcpu *vcpu)$/;"	f	file:
vmx_vcpu_setup	vmx.c	/^static int vmx_vcpu_setup(struct vcpu_vmx *vmx)$/;"	f	file:
vmx_vm_has_apicv	vmx.c	/^static int vmx_vm_has_apicv(struct kvm *kvm)$/;"	f	file:
vmx_vmread_bitmap	vmx.c	/^static unsigned long *vmx_vmread_bitmap;$/;"	v	file:
vmx_vmwrite_bitmap	vmx.c	/^static unsigned long *vmx_vmwrite_bitmap;$/;"	v	file:
vmx_write_tsc_offset	vmx.c	/^static void vmx_write_tsc_offset(struct kvm_vcpu *vcpu, u64 offset)$/;"	f	file:
vmx_x86_ops	vmx.c	/^static struct kvm_x86_ops vmx_x86_ops = {$/;"	v	typeref:struct:kvm_x86_ops	file:
vmxon	vmx.c	/^	bool vmxon;$/;"	m	struct:nested_vmx	file:
vmxon_ptr	vmx.c	/^	gpa_t vmxon_ptr;$/;"	m	struct:nested_vmx	file:
vnmi_blocked_time	vmx.c	/^	s64 vnmi_blocked_time;$/;"	m	struct:vcpu_vmx	file:
vpid	vmx.c	/^	int vpid;$/;"	m	struct:vcpu_vmx	file:
vpid	vmx.c	/^	u32 vpid;$/;"	m	struct:vmx_capability	file:
vpid_sync_context	vmx.c	/^static inline void vpid_sync_context(struct vcpu_vmx *vmx)$/;"	f	file:
vpid_sync_vcpu_global	vmx.c	/^static inline void vpid_sync_vcpu_global(void)$/;"	f	file:
vpid_sync_vcpu_single	vmx.c	/^static inline void vpid_sync_vcpu_single(struct vcpu_vmx *vmx)$/;"	f	file:
wakeup_needed	irq.h	/^	bool wakeup_needed;$/;"	m	struct:kvm_pic
walk_addr	paging_tmpl.h	/^static int FNAME(walk_addr)(struct guest_walker *walker,$/;"	f
walk_addr_generic	paging_tmpl.h	/^static int FNAME(walk_addr_generic)(struct guest_walker *walker,$/;"	f
walk_addr_nested	paging_tmpl.h	/^static int FNAME(walk_addr_nested)(struct guest_walker *walker,$/;"	f
walk_all_active_sps	mmu_audit.c	/^static void walk_all_active_sps(struct kvm *kvm, sp_handler fn)$/;"	f	file:
walk_shadow_page_get_mmio_spte	mmu.c	/^static u64 walk_shadow_page_get_mmio_spte(struct kvm_vcpu *vcpu, u64 addr)$/;"	f	file:
walk_shadow_page_lockless_begin	mmu.c	/^static void walk_shadow_page_lockless_begin(struct kvm_vcpu *vcpu)$/;"	f	file:
walk_shadow_page_lockless_end	mmu.c	/^static void walk_shadow_page_lockless_end(struct kvm_vcpu *vcpu)$/;"	f	file:
wbinvd_ipi	x86.c	/^static void wbinvd_ipi(void *garbage)$/;"	f	file:
worker	i8254.h	/^	struct kthread_worker worker;$/;"	m	struct:kvm_pit	typeref:struct:kvm_pit::kthread_worker
worker_task	i8254.h	/^	struct task_struct *worker_task;$/;"	m	struct:kvm_pit	typeref:struct:kvm_pit::task_struct
write	x86.c	/^	bool write;$/;"	m	struct:read_write_emulator_ops	file:
write_emulate	x86.c	/^static int write_emulate(struct kvm_vcpu *vcpu, gpa_t gpa,$/;"	f	file:
write_emultor	x86.c	/^static const struct read_write_emulator_ops write_emultor = {$/;"	v	typeref:struct:read_write_emulator_ops	file:
write_exit_mmio	x86.c	/^static int write_exit_mmio(struct kvm_vcpu *vcpu, gpa_t gpa,$/;"	f	file:
write_latch	i8254.h	/^	u8 write_latch;$/;"	m	struct:kvm_kpit_channel_state
write_mmio	x86.c	/^static int write_mmio(struct kvm_vcpu *vcpu, gpa_t gpa, int bytes, void *val)$/;"	f	file:
write_mmx_reg	emulate.c	/^static void write_mmx_reg(struct x86_emulate_ctxt *ctxt, u64 *data, int reg)$/;"	f	file:
write_register_operand	emulate.c	/^static void write_register_operand(struct operand *op)$/;"	f	file:
write_segment_descriptor	emulate.c	/^static int write_segment_descriptor(struct x86_emulate_ctxt *ctxt,$/;"	f	file:
write_sse_reg	emulate.c	/^static void write_sse_reg(struct x86_emulate_ctxt *ctxt, sse128_t *data,$/;"	f	file:
write_state	i8254.h	/^	u8 write_state;$/;"	m	struct:kvm_kpit_channel_state
writeback	emulate.c	/^static int writeback(struct x86_emulate_ctxt *ctxt, struct operand *op)$/;"	f	file:
writeback_registers	emulate.c	/^static void writeback_registers(struct x86_emulate_ctxt *ctxt)$/;"	f	file:
wrmsr_interception	svm.c	/^static int wrmsr_interception(struct vcpu_svm *svm)$/;"	f	file:
x86_decode_insn	emulate.c	/^int x86_decode_insn(struct x86_emulate_ctxt *ctxt, void *insn, int insn_len)$/;"	f
x86_emulate_insn	emulate.c	/^int x86_emulate_insn(struct x86_emulate_ctxt *ctxt)$/;"	f
x86_emulate_instruction	x86.c	/^EXPORT_SYMBOL_GPL(x86_emulate_instruction);$/;"	v
x86_emulate_instruction	x86.c	/^int x86_emulate_instruction(struct kvm_vcpu *vcpu,$/;"	f
x86_intercept_map	svm.c	/^} x86_intercept_map[] = {$/;"	v	typeref:struct:__x86_intercept	file:
x86_page_table_writing_insn	emulate.c	/^bool x86_page_table_writing_insn(struct x86_emulate_ctxt *ctxt)$/;"	f
xadd	emulate.c	/^FASTOP2(xadd);$/;"	v
xen_hvm_config	x86.c	/^static int xen_hvm_config(struct kvm_vcpu *vcpu, u64 data)$/;"	f	file:
xor	emulate.c	/^FASTOP2(xor);$/;"	v
xsetbv_interception	svm.c	/^static int xsetbv_interception(struct vcpu_svm *svm)$/;"	f	file:
xstate_required_size	cpuid.c	/^static u32 xstate_required_size(u64 xstate_bv)$/;"	f	file:
zero0	svm.c	/^	unsigned limit1:4, zero0:3, g:1, base2:8;$/;"	m	struct:kvm_ldttss_desc	file:
zero1	svm.c	/^	u32 zero1;$/;"	m	struct:kvm_ldttss_desc	file:
